ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC_SAR.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ADC_SAR_initVar
  20              		.bss
  21              		.type	ADC_SAR_initVar, %object
  22              		.size	ADC_SAR_initVar, 1
  23              	ADC_SAR_initVar:
  24 0000 00       		.space	1
  25              		.comm	ADC_SAR_offset,4,4
  26              		.comm	ADC_SAR_countsPer10Volt,8,4
  27              		.section	.rodata
  28              		.align	2
  29              		.type	ADC_SAR_channelsConfig, %object
  30              		.size	ADC_SAR_channelsConfig, 8
  31              	ADC_SAR_channelsConfig:
  32 0000 00050000 		.word	1280
  33 0004 00040000 		.word	1024
  34              		.section	.text.ADC_SAR_Start,"ax",%progbits
  35              		.align	2
  36              		.global	ADC_SAR_Start
  37              		.code	16
  38              		.thumb_func
  39              		.type	ADC_SAR_Start, %function
  40              	ADC_SAR_Start:
  41              	.LFB0:
  42              		.file 1 "Generated_Source\\PSoC4\\ADC_SAR.c"
   1:Generated_Source\PSoC4/ADC_SAR.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/ADC_SAR.c **** * File Name: ADC_SAR.c
   3:Generated_Source\PSoC4/ADC_SAR.c **** * Version 2.50
   4:Generated_Source\PSoC4/ADC_SAR.c **** *
   5:Generated_Source\PSoC4/ADC_SAR.c **** * Description:
   6:Generated_Source\PSoC4/ADC_SAR.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:Generated_Source\PSoC4/ADC_SAR.c **** *  Approximation ADC Component Component.
   8:Generated_Source\PSoC4/ADC_SAR.c **** *
   9:Generated_Source\PSoC4/ADC_SAR.c **** * Note:
  10:Generated_Source\PSoC4/ADC_SAR.c **** *
  11:Generated_Source\PSoC4/ADC_SAR.c **** ********************************************************************************
  12:Generated_Source\PSoC4/ADC_SAR.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/ADC_SAR.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/ADC_SAR.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/ADC_SAR.c **** * the software package with which this file was provided.
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 2


  16:Generated_Source\PSoC4/ADC_SAR.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/ADC_SAR.c **** 
  18:Generated_Source\PSoC4/ADC_SAR.c **** #include "ADC_SAR.h"
  19:Generated_Source\PSoC4/ADC_SAR.c **** 
  20:Generated_Source\PSoC4/ADC_SAR.c **** 
  21:Generated_Source\PSoC4/ADC_SAR.c **** /***************************************
  22:Generated_Source\PSoC4/ADC_SAR.c **** * Global data allocation
  23:Generated_Source\PSoC4/ADC_SAR.c **** ***************************************/
  24:Generated_Source\PSoC4/ADC_SAR.c **** uint8 ADC_SAR_initVar = 0u;
  25:Generated_Source\PSoC4/ADC_SAR.c **** volatile int16 ADC_SAR_offset[ADC_SAR_TOTAL_CHANNELS_NUM];
  26:Generated_Source\PSoC4/ADC_SAR.c **** volatile int32 ADC_SAR_countsPer10Volt[ADC_SAR_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:Generated_Source\PSoC4/ADC_SAR.c **** 
  28:Generated_Source\PSoC4/ADC_SAR.c **** 
  29:Generated_Source\PSoC4/ADC_SAR.c **** /***************************************
  30:Generated_Source\PSoC4/ADC_SAR.c **** * Local data allocation
  31:Generated_Source\PSoC4/ADC_SAR.c **** ***************************************/
  32:Generated_Source\PSoC4/ADC_SAR.c **** /* Channels configuration generated by customiser */
  33:Generated_Source\PSoC4/ADC_SAR.c **** static const uint32 CYCODE ADC_SAR_channelsConfig[] = { 0x00000500u, 0x00000400u };
  34:Generated_Source\PSoC4/ADC_SAR.c **** 
  35:Generated_Source\PSoC4/ADC_SAR.c **** 
  36:Generated_Source\PSoC4/ADC_SAR.c **** /*******************************************************************************
  37:Generated_Source\PSoC4/ADC_SAR.c **** * Function Name: ADC_SAR_Start
  38:Generated_Source\PSoC4/ADC_SAR.c **** ********************************************************************************
  39:Generated_Source\PSoC4/ADC_SAR.c **** *
  40:Generated_Source\PSoC4/ADC_SAR.c **** * Summary:
  41:Generated_Source\PSoC4/ADC_SAR.c **** *  Performs all required initialization for this component
  42:Generated_Source\PSoC4/ADC_SAR.c **** *  and enables the power. The power will be set to the appropriate
  43:Generated_Source\PSoC4/ADC_SAR.c **** *  power based on the clock frequency.
  44:Generated_Source\PSoC4/ADC_SAR.c **** *
  45:Generated_Source\PSoC4/ADC_SAR.c **** * Parameters:
  46:Generated_Source\PSoC4/ADC_SAR.c **** *  None.
  47:Generated_Source\PSoC4/ADC_SAR.c **** *
  48:Generated_Source\PSoC4/ADC_SAR.c **** * Return:
  49:Generated_Source\PSoC4/ADC_SAR.c **** *  None.
  50:Generated_Source\PSoC4/ADC_SAR.c **** *
  51:Generated_Source\PSoC4/ADC_SAR.c **** * Global variables:
  52:Generated_Source\PSoC4/ADC_SAR.c **** *  The ADC_SAR_initVar variable is used to indicate when/if initial
  53:Generated_Source\PSoC4/ADC_SAR.c **** *  configuration of this component has happened. The variable is initialized to
  54:Generated_Source\PSoC4/ADC_SAR.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:Generated_Source\PSoC4/ADC_SAR.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:Generated_Source\PSoC4/ADC_SAR.c **** *  ADC_SAR_Start() routine.
  57:Generated_Source\PSoC4/ADC_SAR.c **** *  If re-initialization of the component is required the variable should be set
  58:Generated_Source\PSoC4/ADC_SAR.c **** *  to zero before call of ADC_SAR_Start() routine, or the user may call
  59:Generated_Source\PSoC4/ADC_SAR.c **** *  ADC_SAR_Init() and ADC_SAR_Enable() as done in the
  60:Generated_Source\PSoC4/ADC_SAR.c **** *  ADC_SAR_Start() routine.
  61:Generated_Source\PSoC4/ADC_SAR.c **** *
  62:Generated_Source\PSoC4/ADC_SAR.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/ADC_SAR.c **** void ADC_SAR_Start(void)
  64:Generated_Source\PSoC4/ADC_SAR.c **** {
  43              		.loc 1 64 0
  44              		.cfi_startproc
  45              		@ args = 0, pretend = 0, frame = 0
  46              		@ frame_needed = 1, uses_anonymous_args = 0
  47 0000 80B5     		push	{r7, lr}
  48              		.cfi_def_cfa_offset 8
  49              		.cfi_offset 7, -8
  50              		.cfi_offset 14, -4
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 3


  51 0002 00AF     		add	r7, sp, #0
  52              		.cfi_def_cfa_register 7
  65:Generated_Source\PSoC4/ADC_SAR.c ****     /* If not Initialized then initialize all required hardware and software */
  66:Generated_Source\PSoC4/ADC_SAR.c ****     if(ADC_SAR_initVar == 0u)
  53              		.loc 1 66 0
  54 0004 064B     		ldr	r3, .L3
  55 0006 1B78     		ldrb	r3, [r3]
  56 0008 002B     		cmp	r3, #0
  57 000a 04D1     		bne	.L2
  67:Generated_Source\PSoC4/ADC_SAR.c ****     {
  68:Generated_Source\PSoC4/ADC_SAR.c ****         ADC_SAR_Init();
  58              		.loc 1 68 0
  59 000c FFF7FEFF 		bl	ADC_SAR_Init
  69:Generated_Source\PSoC4/ADC_SAR.c ****         ADC_SAR_initVar = 1u;
  60              		.loc 1 69 0
  61 0010 034B     		ldr	r3, .L3
  62 0012 0122     		movs	r2, #1
  63 0014 1A70     		strb	r2, [r3]
  64              	.L2:
  70:Generated_Source\PSoC4/ADC_SAR.c ****     }
  71:Generated_Source\PSoC4/ADC_SAR.c ****     ADC_SAR_Enable();
  65              		.loc 1 71 0
  66 0016 FFF7FEFF 		bl	ADC_SAR_Enable
  72:Generated_Source\PSoC4/ADC_SAR.c **** }
  67              		.loc 1 72 0
  68 001a C046     		nop
  69 001c BD46     		mov	sp, r7
  70              		@ sp needed
  71 001e 80BD     		pop	{r7, pc}
  72              	.L4:
  73              		.align	2
  74              	.L3:
  75 0020 00000000 		.word	ADC_SAR_initVar
  76              		.cfi_endproc
  77              	.LFE0:
  78              		.size	ADC_SAR_Start, .-ADC_SAR_Start
  79              		.global	__aeabi_idiv
  80              		.section	.text.ADC_SAR_Init,"ax",%progbits
  81              		.align	2
  82              		.global	ADC_SAR_Init
  83              		.code	16
  84              		.thumb_func
  85              		.type	ADC_SAR_Init, %function
  86              	ADC_SAR_Init:
  87              	.LFB1:
  73:Generated_Source\PSoC4/ADC_SAR.c **** 
  74:Generated_Source\PSoC4/ADC_SAR.c **** 
  75:Generated_Source\PSoC4/ADC_SAR.c **** /*******************************************************************************
  76:Generated_Source\PSoC4/ADC_SAR.c **** * Function Name: ADC_SAR_Init
  77:Generated_Source\PSoC4/ADC_SAR.c **** ********************************************************************************
  78:Generated_Source\PSoC4/ADC_SAR.c **** *
  79:Generated_Source\PSoC4/ADC_SAR.c **** * Summary:
  80:Generated_Source\PSoC4/ADC_SAR.c **** *  Initialize component's parameters to the parameters set by user in the
  81:Generated_Source\PSoC4/ADC_SAR.c **** *  customizer of the component placed onto schematic. Usually called in
  82:Generated_Source\PSoC4/ADC_SAR.c **** *  ADC_SAR_Start().
  83:Generated_Source\PSoC4/ADC_SAR.c **** *
  84:Generated_Source\PSoC4/ADC_SAR.c **** * Parameters:
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 4


  85:Generated_Source\PSoC4/ADC_SAR.c **** *  None.
  86:Generated_Source\PSoC4/ADC_SAR.c **** *
  87:Generated_Source\PSoC4/ADC_SAR.c **** * Return:
  88:Generated_Source\PSoC4/ADC_SAR.c **** *  None.
  89:Generated_Source\PSoC4/ADC_SAR.c **** *
  90:Generated_Source\PSoC4/ADC_SAR.c **** * Global variables:
  91:Generated_Source\PSoC4/ADC_SAR.c **** *  The ADC_SAR_offset variable is initialized.
  92:Generated_Source\PSoC4/ADC_SAR.c **** *
  93:Generated_Source\PSoC4/ADC_SAR.c **** *******************************************************************************/
  94:Generated_Source\PSoC4/ADC_SAR.c **** void ADC_SAR_Init(void)
  95:Generated_Source\PSoC4/ADC_SAR.c **** {
  88              		.loc 1 95 0
  89              		.cfi_startproc
  90              		@ args = 0, pretend = 0, frame = 16
  91              		@ frame_needed = 1, uses_anonymous_args = 0
  92 0000 80B5     		push	{r7, lr}
  93              		.cfi_def_cfa_offset 8
  94              		.cfi_offset 7, -8
  95              		.cfi_offset 14, -4
  96 0002 84B0     		sub	sp, sp, #16
  97              		.cfi_def_cfa_offset 24
  98 0004 00AF     		add	r7, sp, #0
  99              		.cfi_def_cfa_register 7
  96:Generated_Source\PSoC4/ADC_SAR.c ****     uint32 chNum;
  97:Generated_Source\PSoC4/ADC_SAR.c ****     uint32 tmpRegVal;
  98:Generated_Source\PSoC4/ADC_SAR.c ****     int32 counts;
  99:Generated_Source\PSoC4/ADC_SAR.c **** 
 100:Generated_Source\PSoC4/ADC_SAR.c ****     #if(ADC_SAR_TOTAL_CHANNELS_NUM > 1u)
 101:Generated_Source\PSoC4/ADC_SAR.c ****         static const uint8 CYCODE ADC_SAR_InputsPlacement[] =
 102:Generated_Source\PSoC4/ADC_SAR.c ****         {
 103:Generated_Source\PSoC4/ADC_SAR.c ****             (uint8)(ADC_SAR_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:Generated_Source\PSoC4/ADC_SAR.c ****             (uint8)ADC_SAR_cy_psoc4_sarmux_8__CH_0_PIN
 105:Generated_Source\PSoC4/ADC_SAR.c ****             ,(uint8)(ADC_SAR_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:Generated_Source\PSoC4/ADC_SAR.c ****              (uint8)ADC_SAR_cy_psoc4_sarmux_8__CH_1_PIN
 107:Generated_Source\PSoC4/ADC_SAR.c ****             #if(ADC_SAR_TOTAL_CHANNELS_NUM > 2u)
 108:Generated_Source\PSoC4/ADC_SAR.c ****                 ,(uint8)(ADC_SAR_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:Generated_Source\PSoC4/ADC_SAR.c ****                  (uint8)ADC_SAR_cy_psoc4_sarmux_8__CH_2_PIN
 110:Generated_Source\PSoC4/ADC_SAR.c ****             #endif /* End ADC_SAR_TOTAL_CHANNELS_NUM > 2u */
 111:Generated_Source\PSoC4/ADC_SAR.c ****             #if(ADC_SAR_TOTAL_CHANNELS_NUM > 3u)
 112:Generated_Source\PSoC4/ADC_SAR.c ****                 ,(uint8)(ADC_SAR_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:Generated_Source\PSoC4/ADC_SAR.c ****                  (uint8)ADC_SAR_cy_psoc4_sarmux_8__CH_3_PIN
 114:Generated_Source\PSoC4/ADC_SAR.c ****             #endif /* End ADC_SAR_TOTAL_CHANNELS_NUM > 3u */
 115:Generated_Source\PSoC4/ADC_SAR.c ****             #if(ADC_SAR_TOTAL_CHANNELS_NUM > 4u)
 116:Generated_Source\PSoC4/ADC_SAR.c ****                 ,(uint8)(ADC_SAR_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:Generated_Source\PSoC4/ADC_SAR.c ****                  (uint8)ADC_SAR_cy_psoc4_sarmux_8__CH_4_PIN
 118:Generated_Source\PSoC4/ADC_SAR.c ****             #endif /* End ADC_SAR_TOTAL_CHANNELS_NUM > 4u */
 119:Generated_Source\PSoC4/ADC_SAR.c ****             #if(ADC_SAR_TOTAL_CHANNELS_NUM > 5u)
 120:Generated_Source\PSoC4/ADC_SAR.c ****                 ,(uint8)(ADC_SAR_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:Generated_Source\PSoC4/ADC_SAR.c ****                  (uint8)ADC_SAR_cy_psoc4_sarmux_8__CH_5_PIN
 122:Generated_Source\PSoC4/ADC_SAR.c ****             #endif /* End ADC_SAR_TOTAL_CHANNELS_NUM > 5u */
 123:Generated_Source\PSoC4/ADC_SAR.c ****             #if(ADC_SAR_TOTAL_CHANNELS_NUM > 6u)
 124:Generated_Source\PSoC4/ADC_SAR.c ****                 ,(uint8)(ADC_SAR_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:Generated_Source\PSoC4/ADC_SAR.c ****                  (uint8)ADC_SAR_cy_psoc4_sarmux_8__CH_6_PIN
 126:Generated_Source\PSoC4/ADC_SAR.c ****             #endif /* End ADC_SAR_TOTAL_CHANNELS_NUM > 6u */
 127:Generated_Source\PSoC4/ADC_SAR.c ****             #if(ADC_SAR_TOTAL_CHANNELS_NUM > 7u)
 128:Generated_Source\PSoC4/ADC_SAR.c ****                 ,(uint8)(ADC_SAR_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:Generated_Source\PSoC4/ADC_SAR.c ****                  (uint8)ADC_SAR_cy_psoc4_sarmux_8__CH_7_PIN
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 5


 130:Generated_Source\PSoC4/ADC_SAR.c ****             #endif /* End ADC_SAR_TOTAL_CHANNELS_NUM > 7u */
 131:Generated_Source\PSoC4/ADC_SAR.c ****             #if(ADC_SAR_TOTAL_CHANNELS_NUM > 8u)
 132:Generated_Source\PSoC4/ADC_SAR.c ****                 ,(uint8)(ADC_SAR_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:Generated_Source\PSoC4/ADC_SAR.c ****                  (uint8)ADC_SAR_cy_psoc4_sarmux_8__CH_8_PIN
 134:Generated_Source\PSoC4/ADC_SAR.c ****             #endif /* End ADC_SAR_TOTAL_CHANNELS_NUM > 8u */
 135:Generated_Source\PSoC4/ADC_SAR.c ****             #if(ADC_SAR_TOTAL_CHANNELS_NUM > 9u)
 136:Generated_Source\PSoC4/ADC_SAR.c ****                 ,(uint8)(ADC_SAR_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:Generated_Source\PSoC4/ADC_SAR.c ****                  (uint8)ADC_SAR_cy_psoc4_sarmux_8__CH_9_PIN
 138:Generated_Source\PSoC4/ADC_SAR.c ****             #endif /* End ADC_SAR_TOTAL_CHANNELS_NUM > 9u */
 139:Generated_Source\PSoC4/ADC_SAR.c ****             #if(ADC_SAR_TOTAL_CHANNELS_NUM > 10u)
 140:Generated_Source\PSoC4/ADC_SAR.c ****                 ,(uint8)(ADC_SAR_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:Generated_Source\PSoC4/ADC_SAR.c ****                  (uint8)ADC_SAR_cy_psoc4_sarmux_8__CH_10_PIN
 142:Generated_Source\PSoC4/ADC_SAR.c ****             #endif /* End ADC_SAR_TOTAL_CHANNELS_NUM > 10u */
 143:Generated_Source\PSoC4/ADC_SAR.c ****             #if(ADC_SAR_TOTAL_CHANNELS_NUM > 11u)
 144:Generated_Source\PSoC4/ADC_SAR.c ****                 ,(uint8)(ADC_SAR_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:Generated_Source\PSoC4/ADC_SAR.c ****                  (uint8)ADC_SAR_cy_psoc4_sarmux_8__CH_11_PIN
 146:Generated_Source\PSoC4/ADC_SAR.c ****             #endif /* End ADC_SAR_TOTAL_CHANNELS_NUM > 11u */
 147:Generated_Source\PSoC4/ADC_SAR.c ****             #if(ADC_SAR_TOTAL_CHANNELS_NUM > 12u)
 148:Generated_Source\PSoC4/ADC_SAR.c ****                 ,(uint8)(ADC_SAR_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:Generated_Source\PSoC4/ADC_SAR.c ****                  (uint8)ADC_SAR_cy_psoc4_sarmux_8__CH_12_PIN
 150:Generated_Source\PSoC4/ADC_SAR.c ****             #endif /* End ADC_SAR_TOTAL_CHANNELS_NUM > 12u */
 151:Generated_Source\PSoC4/ADC_SAR.c ****             #if(ADC_SAR_TOTAL_CHANNELS_NUM > 13u)
 152:Generated_Source\PSoC4/ADC_SAR.c ****                 ,(uint8)(ADC_SAR_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:Generated_Source\PSoC4/ADC_SAR.c ****                  (uint8)ADC_SAR_cy_psoc4_sarmux_8__CH_13_PIN
 154:Generated_Source\PSoC4/ADC_SAR.c ****             #endif /* End ADC_SAR_TOTAL_CHANNELS_NUM > 13u */
 155:Generated_Source\PSoC4/ADC_SAR.c ****             #if(ADC_SAR_TOTAL_CHANNELS_NUM > 14u)
 156:Generated_Source\PSoC4/ADC_SAR.c ****                 ,(uint8)(ADC_SAR_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:Generated_Source\PSoC4/ADC_SAR.c ****                  (uint8)ADC_SAR_cy_psoc4_sarmux_8__CH_14_PIN
 158:Generated_Source\PSoC4/ADC_SAR.c ****             #endif /* End ADC_SAR_TOTAL_CHANNELS_NUM > 14u */
 159:Generated_Source\PSoC4/ADC_SAR.c ****             #if(ADC_SAR_TOTAL_CHANNELS_NUM > 15u)
 160:Generated_Source\PSoC4/ADC_SAR.c ****                 ,(uint8)(ADC_SAR_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:Generated_Source\PSoC4/ADC_SAR.c ****                  (uint8)ADC_SAR_cy_psoc4_sarmux_8__CH_15_PIN
 162:Generated_Source\PSoC4/ADC_SAR.c ****             #endif /* End ADC_SAR_TOTAL_CHANNELS_NUM > 15u */
 163:Generated_Source\PSoC4/ADC_SAR.c ****             #if(ADC_SAR_TOTAL_CHANNELS_NUM > 16u)
 164:Generated_Source\PSoC4/ADC_SAR.c ****                 ,(uint8)(ADC_SAR_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:Generated_Source\PSoC4/ADC_SAR.c ****                  (uint8)ADC_SAR_cy_psoc4_sarmux_8__CH_16_PIN
 166:Generated_Source\PSoC4/ADC_SAR.c ****             #endif /* End ADC_SAR_TOTAL_CHANNELS_NUM > 16u */
 167:Generated_Source\PSoC4/ADC_SAR.c ****         };
 168:Generated_Source\PSoC4/ADC_SAR.c ****     #endif /* End ADC_SAR_TOTAL_CHANNELS_NUM > 1u */
 169:Generated_Source\PSoC4/ADC_SAR.c **** 
 170:Generated_Source\PSoC4/ADC_SAR.c ****     #if(ADC_SAR_IRQ_REMOVE == 0u)
 171:Generated_Source\PSoC4/ADC_SAR.c ****         /* Start and set interrupt vector */
 172:Generated_Source\PSoC4/ADC_SAR.c ****         CyIntSetPriority(ADC_SAR_INTC_NUMBER, ADC_SAR_INTC_PRIOR_NUMBER);
 100              		.loc 1 172 0
 101 0006 0321     		movs	r1, #3
 102 0008 0E20     		movs	r0, #14
 103 000a FFF7FEFF 		bl	CyIntSetPriority
 173:Generated_Source\PSoC4/ADC_SAR.c ****         (void)CyIntSetVector(ADC_SAR_INTC_NUMBER, &ADC_SAR_ISR);
 104              		.loc 1 173 0
 105 000e 754B     		ldr	r3, .L19
 106 0010 1900     		movs	r1, r3
 107 0012 0E20     		movs	r0, #14
 108 0014 FFF7FEFF 		bl	CyIntSetVector
 174:Generated_Source\PSoC4/ADC_SAR.c ****     #endif   /* End ADC_SAR_IRQ_REMOVE */
 175:Generated_Source\PSoC4/ADC_SAR.c **** 
 176:Generated_Source\PSoC4/ADC_SAR.c ****     /* Init SAR and MUX registers */
 177:Generated_Source\PSoC4/ADC_SAR.c ****     ADC_SAR_SAR_CHAN_EN_REG = ADC_SAR_DEFAULT_EN_CHANNELS;
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 6


 109              		.loc 1 177 0
 110 0018 734B     		ldr	r3, .L19+4
 111 001a 0122     		movs	r2, #1
 112 001c 1A60     		str	r2, [r3]
 178:Generated_Source\PSoC4/ADC_SAR.c ****     ADC_SAR_SAR_CTRL_REG |= ADC_SAR_DEFAULT_CTRL_REG_CFG | 
 179:Generated_Source\PSoC4/ADC_SAR.c ****         /* Enable the SAR internal pump when global pump is enabled */
 180:Generated_Source\PSoC4/ADC_SAR.c ****         (((ADC_SAR_PUMP_CTRL_REG & ADC_SAR_PUMP_CTRL_ENABLED) != 0u) ? 
 113              		.loc 1 180 0
 114 001e 734B     		ldr	r3, .L19+8
 115 0020 1B68     		ldr	r3, [r3]
 178:Generated_Source\PSoC4/ADC_SAR.c ****     ADC_SAR_SAR_CTRL_REG |= ADC_SAR_DEFAULT_CTRL_REG_CFG | 
 116              		.loc 1 178 0
 117 0022 002B     		cmp	r3, #0
 118 0024 01DA     		bge	.L6
 178:Generated_Source\PSoC4/ADC_SAR.c ****     ADC_SAR_SAR_CTRL_REG |= ADC_SAR_DEFAULT_CTRL_REG_CFG | 
 119              		.loc 1 178 0 is_stmt 0 discriminator 1
 120 0026 7249     		ldr	r1, .L19+12
 121 0028 00E0     		b	.L7
 122              	.L6:
 178:Generated_Source\PSoC4/ADC_SAR.c ****     ADC_SAR_SAR_CTRL_REG |= ADC_SAR_DEFAULT_CTRL_REG_CFG | 
 123              		.loc 1 178 0 discriminator 2
 124 002a 7249     		ldr	r1, .L19+16
 125              	.L7:
 178:Generated_Source\PSoC4/ADC_SAR.c ****     ADC_SAR_SAR_CTRL_REG |= ADC_SAR_DEFAULT_CTRL_REG_CFG | 
 126              		.loc 1 178 0 discriminator 4
 127 002c 724B     		ldr	r3, .L19+20
 128 002e 724A     		ldr	r2, .L19+20
 129 0030 1268     		ldr	r2, [r2]
 130 0032 0A43     		orrs	r2, r1
 131 0034 1A60     		str	r2, [r3]
 181:Generated_Source\PSoC4/ADC_SAR.c ****         ADC_SAR_BOOSTPUMP_EN : 0u);
 182:Generated_Source\PSoC4/ADC_SAR.c ****     ADC_SAR_SAR_SAMPLE_CTRL_REG = ADC_SAR_DEFAULT_SAMPLE_CTRL_REG_CFG;
 132              		.loc 1 182 0 is_stmt 1 discriminator 4
 133 0036 714B     		ldr	r3, .L19+24
 134 0038 714A     		ldr	r2, .L19+28
 135 003a 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/ADC_SAR.c ****     ADC_SAR_SAR_RANGE_THRES_REG = ADC_SAR_DEFAULT_RANGE_THRES_REG_CFG;
 136              		.loc 1 183 0 discriminator 4
 137 003c 714B     		ldr	r3, .L19+32
 138 003e 724A     		ldr	r2, .L19+36
 139 0040 1A60     		str	r2, [r3]
 184:Generated_Source\PSoC4/ADC_SAR.c ****     ADC_SAR_SAR_RANGE_COND_REG  = ADC_SAR_COMPARE_MODE;
 140              		.loc 1 184 0 discriminator 4
 141 0042 724B     		ldr	r3, .L19+40
 142 0044 0022     		movs	r2, #0
 143 0046 1A60     		str	r2, [r3]
 185:Generated_Source\PSoC4/ADC_SAR.c ****     ADC_SAR_SAR_SAMPLE_TIME01_REG = ADC_SAR_DEFAULT_SAMPLE_TIME01_REG_CFG;
 144              		.loc 1 185 0 discriminator 4
 145 0048 714B     		ldr	r3, .L19+44
 146 004a 724A     		ldr	r2, .L19+48
 147 004c 1A60     		str	r2, [r3]
 186:Generated_Source\PSoC4/ADC_SAR.c ****     ADC_SAR_SAR_SAMPLE_TIME23_REG = ADC_SAR_DEFAULT_SAMPLE_TIME23_REG_CFG;
 148              		.loc 1 186 0 discriminator 4
 149 004e 724B     		ldr	r3, .L19+52
 150 0050 704A     		ldr	r2, .L19+48
 151 0052 1A60     		str	r2, [r3]
 187:Generated_Source\PSoC4/ADC_SAR.c ****     
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 7


 188:Generated_Source\PSoC4/ADC_SAR.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:Generated_Source\PSoC4/ADC_SAR.c ****     #if(ADC_SAR_DEFAULT_MUX_SWITCH0 != 0u)
 190:Generated_Source\PSoC4/ADC_SAR.c ****         ADC_SAR_MUX_SWITCH0_REG |= ADC_SAR_DEFAULT_MUX_SWITCH0;
 152              		.loc 1 190 0 discriminator 4
 153 0054 714B     		ldr	r3, .L19+56
 154 0056 714A     		ldr	r2, .L19+56
 155 0058 1268     		ldr	r2, [r2]
 156 005a 8021     		movs	r1, #128
 157 005c 4902     		lsls	r1, r1, #9
 158 005e 0A43     		orrs	r2, r1
 159 0060 1A60     		str	r2, [r3]
 191:Generated_Source\PSoC4/ADC_SAR.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:Generated_Source\PSoC4/ADC_SAR.c ****         #if(ADC_SAR_TOTAL_CHANNELS_NUM > 1u)
 193:Generated_Source\PSoC4/ADC_SAR.c ****             ADC_SAR_MUX_SWITCH_HW_CTRL_REG |= ADC_SAR_DEFAULT_MUX_SWITCH0;
 160              		.loc 1 193 0 discriminator 4
 161 0062 6F4B     		ldr	r3, .L19+60
 162 0064 6E4A     		ldr	r2, .L19+60
 163 0066 1268     		ldr	r2, [r2]
 164 0068 8021     		movs	r1, #128
 165 006a 4902     		lsls	r1, r1, #9
 166 006c 0A43     		orrs	r2, r1
 167 006e 1A60     		str	r2, [r3]
 194:Generated_Source\PSoC4/ADC_SAR.c ****         #endif /* ADC_SAR_TOTAL_CHANNELS_NUM > 1u */
 195:Generated_Source\PSoC4/ADC_SAR.c ****     #endif /*ADC_SAR_CHANNELS_MODE !=0 */
 196:Generated_Source\PSoC4/ADC_SAR.c **** 
 197:Generated_Source\PSoC4/ADC_SAR.c ****     ADC_SAR_SAR_SATURATE_INTR_MASK_REG = 0u;
 168              		.loc 1 197 0 discriminator 4
 169 0070 6C4B     		ldr	r3, .L19+64
 170 0072 0022     		movs	r2, #0
 171 0074 1A60     		str	r2, [r3]
 198:Generated_Source\PSoC4/ADC_SAR.c ****     ADC_SAR_SAR_RANGE_INTR_MASK_REG = 0u;
 172              		.loc 1 198 0 discriminator 4
 173 0076 6C4B     		ldr	r3, .L19+68
 174 0078 0022     		movs	r2, #0
 175 007a 1A60     		str	r2, [r3]
 199:Generated_Source\PSoC4/ADC_SAR.c ****     ADC_SAR_SAR_INTR_MASK_REG = ADC_SAR_SAR_INTR_MASK;
 176              		.loc 1 199 0 discriminator 4
 177 007c 6B4B     		ldr	r3, .L19+72
 178 007e 1122     		movs	r2, #17
 179 0080 1A60     		str	r2, [r3]
 200:Generated_Source\PSoC4/ADC_SAR.c **** 
 201:Generated_Source\PSoC4/ADC_SAR.c ****     #if(ADC_SAR_CY_SAR_IP_VER == ADC_SAR_CY_SAR_IP_VER0)
 202:Generated_Source\PSoC4/ADC_SAR.c ****         ADC_SAR_ANA_TRIM_REG = ADC_SAR_TRIM_COEF;
 180              		.loc 1 202 0 discriminator 4
 181 0082 6B4B     		ldr	r3, .L19+76
 182 0084 0222     		movs	r2, #2
 183 0086 1A60     		str	r2, [r3]
 203:Generated_Source\PSoC4/ADC_SAR.c ****     #endif /* (ADC_SAR_CY_SAR_IP_VER == ADC_SAR_CY_SAR_IP_VER0) */
 204:Generated_Source\PSoC4/ADC_SAR.c **** 
 205:Generated_Source\PSoC4/ADC_SAR.c ****     /* Read and modify default configuration based on characterization */
 206:Generated_Source\PSoC4/ADC_SAR.c ****     tmpRegVal = ADC_SAR_SAR_DFT_CTRL_REG;
 184              		.loc 1 206 0 discriminator 4
 185 0088 6A4B     		ldr	r3, .L19+80
 186 008a 1B68     		ldr	r3, [r3]
 187 008c 7B60     		str	r3, [r7, #4]
 207:Generated_Source\PSoC4/ADC_SAR.c ****     tmpRegVal &= (uint32)~ADC_SAR_DCEN;
 188              		.loc 1 207 0 discriminator 4
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 8


 189 008e 7B68     		ldr	r3, [r7, #4]
 190 0090 694A     		ldr	r2, .L19+84
 191 0092 1340     		ands	r3, r2
 192 0094 7B60     		str	r3, [r7, #4]
 208:Generated_Source\PSoC4/ADC_SAR.c ****     
 209:Generated_Source\PSoC4/ADC_SAR.c ****     #if(ADC_SAR_CY_SAR_IP_VER == ADC_SAR_CY_SAR_IP_VER0)
 210:Generated_Source\PSoC4/ADC_SAR.c ****         #if(ADC_SAR_NOMINAL_CLOCK_FREQ > (ADC_SAR_MAX_FREQUENCY / 2))
 211:Generated_Source\PSoC4/ADC_SAR.c ****             tmpRegVal |= ADC_SAR_SEL_CSEL_DFT_CHAR;
 212:Generated_Source\PSoC4/ADC_SAR.c ****         #else  /* clock speed < 9 Mhz */
 213:Generated_Source\PSoC4/ADC_SAR.c ****             tmpRegVal |= ADC_SAR_DLY_INC;
 193              		.loc 1 213 0 discriminator 4
 194 0096 7B68     		ldr	r3, [r7, #4]
 195 0098 0122     		movs	r2, #1
 196 009a 1343     		orrs	r3, r2
 197 009c 7B60     		str	r3, [r7, #4]
 214:Generated_Source\PSoC4/ADC_SAR.c ****         #endif /* clock speed > 9 Mhz */
 215:Generated_Source\PSoC4/ADC_SAR.c ****     #else
 216:Generated_Source\PSoC4/ADC_SAR.c ****         #if ((ADC_SAR_DEFAULT_VREF_SEL == ADC_SAR__INTERNAL1024) || \
 217:Generated_Source\PSoC4/ADC_SAR.c ****              (ADC_SAR_DEFAULT_VREF_SEL == ADC_SAR__INTERNALVREF))
 218:Generated_Source\PSoC4/ADC_SAR.c ****             tmpRegVal |= ADC_SAR_DLY_INC;
 219:Generated_Source\PSoC4/ADC_SAR.c ****         #else
 220:Generated_Source\PSoC4/ADC_SAR.c ****             tmpRegVal |= ADC_SAR_DCEN;
 221:Generated_Source\PSoC4/ADC_SAR.c ****             tmpRegVal &= (uint32)~ADC_SAR_DLY_INC;
 222:Generated_Source\PSoC4/ADC_SAR.c ****         #endif /* ((ADC_SAR_DEFAULT_VREF_SEL == ADC_SAR__INTERNAL1024) || \
 223:Generated_Source\PSoC4/ADC_SAR.c ****                    (ADC_SAR_DEFAULT_VREF_SEL == ADC_SAR__INTERNALVREF)) */
 224:Generated_Source\PSoC4/ADC_SAR.c ****     #endif /* (ADC_SAR_CY_SAR_IP_VER == ADC_SAR_CY_SAR_IP_VER0) */
 225:Generated_Source\PSoC4/ADC_SAR.c ****     
 226:Generated_Source\PSoC4/ADC_SAR.c ****     ADC_SAR_SAR_DFT_CTRL_REG = tmpRegVal;
 198              		.loc 1 226 0 discriminator 4
 199 009e 654B     		ldr	r3, .L19+80
 200 00a0 7A68     		ldr	r2, [r7, #4]
 201 00a2 1A60     		str	r2, [r3]
 227:Generated_Source\PSoC4/ADC_SAR.c **** 
 228:Generated_Source\PSoC4/ADC_SAR.c ****     #if(ADC_SAR_MAX_RESOLUTION != ADC_SAR_RESOLUTION_12)
 229:Generated_Source\PSoC4/ADC_SAR.c ****         ADC_SAR_WOUNDING_REG = ADC_SAR_ALT_WOUNDING;
 230:Generated_Source\PSoC4/ADC_SAR.c ****     #endif /* ADC_SAR_MAX_RESOLUTION != ADC_SAR_RESOLUTION_12 */
 231:Generated_Source\PSoC4/ADC_SAR.c **** 
 232:Generated_Source\PSoC4/ADC_SAR.c ****     for(chNum = 0u; chNum < ADC_SAR_TOTAL_CHANNELS_NUM; chNum++)
 202              		.loc 1 232 0 discriminator 4
 203 00a4 0023     		movs	r3, #0
 204 00a6 FB60     		str	r3, [r7, #12]
 205 00a8 94E0     		b	.L8
 206              	.L18:
 233:Generated_Source\PSoC4/ADC_SAR.c ****     {
 234:Generated_Source\PSoC4/ADC_SAR.c ****         tmpRegVal = (ADC_SAR_channelsConfig[chNum] & ADC_SAR_CHANNEL_CONFIG_MASK);
 207              		.loc 1 234 0
 208 00aa 644B     		ldr	r3, .L19+88
 209 00ac FA68     		ldr	r2, [r7, #12]
 210 00ae 9200     		lsls	r2, r2, #2
 211 00b0 D258     		ldr	r2, [r2, r3]
 212 00b2 DC23     		movs	r3, #220
 213 00b4 9B01     		lsls	r3, r3, #6
 214 00b6 1340     		ands	r3, r2
 215 00b8 7B60     		str	r3, [r7, #4]
 235:Generated_Source\PSoC4/ADC_SAR.c ****         #if(ADC_SAR_TOTAL_CHANNELS_NUM > 1u)
 236:Generated_Source\PSoC4/ADC_SAR.c ****             tmpRegVal |= ADC_SAR_InputsPlacement[chNum];
 216              		.loc 1 236 0
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 9


 217 00ba 614A     		ldr	r2, .L19+92
 218 00bc FB68     		ldr	r3, [r7, #12]
 219 00be D318     		adds	r3, r2, r3
 220 00c0 1B78     		ldrb	r3, [r3]
 221 00c2 1A00     		movs	r2, r3
 222 00c4 7B68     		ldr	r3, [r7, #4]
 223 00c6 1343     		orrs	r3, r2
 224 00c8 7B60     		str	r3, [r7, #4]
 237:Generated_Source\PSoC4/ADC_SAR.c ****         #endif /* End ADC_SAR_TOTAL_CHANNELS_NUM > 1u */
 238:Generated_Source\PSoC4/ADC_SAR.c ****         
 239:Generated_Source\PSoC4/ADC_SAR.c ****         
 240:Generated_Source\PSoC4/ADC_SAR.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:Generated_Source\PSoC4/ADC_SAR.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:Generated_Source\PSoC4/ADC_SAR.c ****         *  (0) and 8-bit (1) resolution.
 243:Generated_Source\PSoC4/ADC_SAR.c ****         */
 244:Generated_Source\PSoC4/ADC_SAR.c ****         #if((ADC_SAR_MAX_RESOLUTION != ADC_SAR_RESOLUTION_12) && \
 245:Generated_Source\PSoC4/ADC_SAR.c ****             (ADC_SAR_ALT_WOUNDING == ADC_SAR_WOUNDING_10BIT))
 246:Generated_Source\PSoC4/ADC_SAR.c ****             tmpRegVal &= (uint32)(~ADC_SAR_ALT_RESOLUTION_ON);
 247:Generated_Source\PSoC4/ADC_SAR.c ****         #endif /* ADC_SAR_MAX_RESOLUTION != ADC_SAR_RESOLUTION_12 */
 248:Generated_Source\PSoC4/ADC_SAR.c **** 
 249:Generated_Source\PSoC4/ADC_SAR.c ****         #if(ADC_SAR_INJ_CHANNEL_ENABLED)
 250:Generated_Source\PSoC4/ADC_SAR.c ****         if(chNum < ADC_SAR_SEQUENCED_CHANNELS_NUM)
 225              		.loc 1 250 0
 226 00ca FB68     		ldr	r3, [r7, #12]
 227 00cc 002B     		cmp	r3, #0
 228 00ce 2BD1     		bne	.L9
 251:Generated_Source\PSoC4/ADC_SAR.c ****         #endif /* ADC_SAR_INJ_CHANNEL_ENABLED */
 252:Generated_Source\PSoC4/ADC_SAR.c ****         {
 253:Generated_Source\PSoC4/ADC_SAR.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 229              		.loc 1 253 0
 230 00d0 FB68     		ldr	r3, [r7, #12]
 231 00d2 9B00     		lsls	r3, r3, #2
 232 00d4 5B4A     		ldr	r2, .L19+96
 233 00d6 9446     		mov	ip, r2
 234 00d8 6344     		add	r3, r3, ip
 235 00da 7A68     		ldr	r2, [r7, #4]
 236 00dc 1A60     		str	r2, [r3]
 254:Generated_Source\PSoC4/ADC_SAR.c **** 
 255:Generated_Source\PSoC4/ADC_SAR.c ****             if((ADC_SAR_channelsConfig[chNum] & ADC_SAR_IS_SATURATE_EN_MASK) != 0u)
 237              		.loc 1 255 0
 238 00de 574B     		ldr	r3, .L19+88
 239 00e0 FA68     		ldr	r2, [r7, #12]
 240 00e2 9200     		lsls	r2, r2, #2
 241 00e4 D358     		ldr	r3, [r2, r3]
 242 00e6 0122     		movs	r2, #1
 243 00e8 1340     		ands	r3, r2
 244 00ea 0AD0     		beq	.L10
 256:Generated_Source\PSoC4/ADC_SAR.c ****             {
 257:Generated_Source\PSoC4/ADC_SAR.c ****                 ADC_SAR_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 245              		.loc 1 257 0
 246 00ec 4D4B     		ldr	r3, .L19+64
 247 00ee 4D4A     		ldr	r2, .L19+64
 248 00f0 1168     		ldr	r1, [r2]
 249 00f2 0120     		movs	r0, #1
 250 00f4 FA68     		ldr	r2, [r7, #12]
 251 00f6 9040     		lsls	r0, r0, r2
 252 00f8 0200     		movs	r2, r0
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 10


 253 00fa 1204     		lsls	r2, r2, #16
 254 00fc 120C     		lsrs	r2, r2, #16
 255 00fe 0A43     		orrs	r2, r1
 256 0100 1A60     		str	r2, [r3]
 257              	.L10:
 258:Generated_Source\PSoC4/ADC_SAR.c ****             }
 259:Generated_Source\PSoC4/ADC_SAR.c **** 
 260:Generated_Source\PSoC4/ADC_SAR.c ****             if((ADC_SAR_channelsConfig[chNum] & ADC_SAR_IS_RANGE_CTRL_EN_MASK) != 0u)
 258              		.loc 1 260 0
 259 0102 4E4B     		ldr	r3, .L19+88
 260 0104 FA68     		ldr	r2, [r7, #12]
 261 0106 9200     		lsls	r2, r2, #2
 262 0108 D358     		ldr	r3, [r2, r3]
 263 010a 0222     		movs	r2, #2
 264 010c 1340     		ands	r3, r2
 265 010e 2BD0     		beq	.L12
 261:Generated_Source\PSoC4/ADC_SAR.c ****             {
 262:Generated_Source\PSoC4/ADC_SAR.c ****                 ADC_SAR_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 266              		.loc 1 262 0
 267 0110 454B     		ldr	r3, .L19+68
 268 0112 454A     		ldr	r2, .L19+68
 269 0114 1168     		ldr	r1, [r2]
 270 0116 0120     		movs	r0, #1
 271 0118 FA68     		ldr	r2, [r7, #12]
 272 011a 9040     		lsls	r0, r0, r2
 273 011c 0200     		movs	r2, r0
 274 011e 1204     		lsls	r2, r2, #16
 275 0120 120C     		lsrs	r2, r2, #16
 276 0122 0A43     		orrs	r2, r1
 277 0124 1A60     		str	r2, [r3]
 278 0126 1FE0     		b	.L12
 279              	.L9:
 263:Generated_Source\PSoC4/ADC_SAR.c ****             }
 264:Generated_Source\PSoC4/ADC_SAR.c ****         }
 265:Generated_Source\PSoC4/ADC_SAR.c ****         #if(ADC_SAR_INJ_CHANNEL_ENABLED)
 266:Generated_Source\PSoC4/ADC_SAR.c ****             else
 267:Generated_Source\PSoC4/ADC_SAR.c ****             {
 268:Generated_Source\PSoC4/ADC_SAR.c ****                 CY_SET_REG32(ADC_SAR_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_SAR_INJ_TAILGATING);
 280              		.loc 1 268 0
 281 0128 474B     		ldr	r3, .L19+100
 282 012a 7A68     		ldr	r2, [r7, #4]
 283 012c 8021     		movs	r1, #128
 284 012e C905     		lsls	r1, r1, #23
 285 0130 0A43     		orrs	r2, r1
 286 0132 1A60     		str	r2, [r3]
 269:Generated_Source\PSoC4/ADC_SAR.c **** 
 270:Generated_Source\PSoC4/ADC_SAR.c ****                 if((ADC_SAR_channelsConfig[chNum] & ADC_SAR_IS_SATURATE_EN_MASK) != 0u)
 287              		.loc 1 270 0
 288 0134 414B     		ldr	r3, .L19+88
 289 0136 FA68     		ldr	r2, [r7, #12]
 290 0138 9200     		lsls	r2, r2, #2
 291 013a D358     		ldr	r3, [r2, r3]
 292 013c 0122     		movs	r2, #1
 293 013e 1340     		ands	r3, r2
 294 0140 05D0     		beq	.L13
 271:Generated_Source\PSoC4/ADC_SAR.c ****                 {
 272:Generated_Source\PSoC4/ADC_SAR.c ****                     ADC_SAR_SAR_INTR_MASK_REG |= ADC_SAR_INJ_SATURATE_MASK;
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 11


 295              		.loc 1 272 0
 296 0142 3A4B     		ldr	r3, .L19+72
 297 0144 394A     		ldr	r2, .L19+72
 298 0146 1268     		ldr	r2, [r2]
 299 0148 2021     		movs	r1, #32
 300 014a 0A43     		orrs	r2, r1
 301 014c 1A60     		str	r2, [r3]
 302              	.L13:
 273:Generated_Source\PSoC4/ADC_SAR.c ****                 }
 274:Generated_Source\PSoC4/ADC_SAR.c **** 
 275:Generated_Source\PSoC4/ADC_SAR.c ****                 if((ADC_SAR_channelsConfig[chNum] & ADC_SAR_IS_RANGE_CTRL_EN_MASK) != 0u)
 303              		.loc 1 275 0
 304 014e 3B4B     		ldr	r3, .L19+88
 305 0150 FA68     		ldr	r2, [r7, #12]
 306 0152 9200     		lsls	r2, r2, #2
 307 0154 D358     		ldr	r3, [r2, r3]
 308 0156 0222     		movs	r2, #2
 309 0158 1340     		ands	r3, r2
 310 015a 05D0     		beq	.L12
 276:Generated_Source\PSoC4/ADC_SAR.c ****                 {
 277:Generated_Source\PSoC4/ADC_SAR.c ****                     ADC_SAR_SAR_INTR_MASK_REG |= ADC_SAR_INJ_RANGE_MASK;
 311              		.loc 1 277 0
 312 015c 334B     		ldr	r3, .L19+72
 313 015e 334A     		ldr	r2, .L19+72
 314 0160 1268     		ldr	r2, [r2]
 315 0162 4021     		movs	r1, #64
 316 0164 0A43     		orrs	r2, r1
 317 0166 1A60     		str	r2, [r3]
 318              	.L12:
 278:Generated_Source\PSoC4/ADC_SAR.c ****                 }
 279:Generated_Source\PSoC4/ADC_SAR.c ****             }
 280:Generated_Source\PSoC4/ADC_SAR.c ****         #endif /* ADC_SAR_INJ_CHANNEL_ENABLED */
 281:Generated_Source\PSoC4/ADC_SAR.c **** 
 282:Generated_Source\PSoC4/ADC_SAR.c ****         if((ADC_SAR_channelsConfig[chNum] & ADC_SAR_ALT_RESOLUTION_ON) != 0u)
 319              		.loc 1 282 0
 320 0168 344B     		ldr	r3, .L19+88
 321 016a FA68     		ldr	r2, [r7, #12]
 322 016c 9200     		lsls	r2, r2, #2
 323 016e D258     		ldr	r2, [r2, r3]
 324 0170 8023     		movs	r3, #128
 325 0172 9B00     		lsls	r3, r3, #2
 326 0174 1340     		ands	r3, r2
 327 0176 03D0     		beq	.L14
 283:Generated_Source\PSoC4/ADC_SAR.c ****         {
 284:Generated_Source\PSoC4/ADC_SAR.c ****                counts = (int32)ADC_SAR_DEFAULT_MAX_WRK_ALT;
 328              		.loc 1 284 0
 329 0178 8023     		movs	r3, #128
 330 017a 5B00     		lsls	r3, r3, #1
 331 017c BB60     		str	r3, [r7, #8]
 332 017e 02E0     		b	.L15
 333              	.L14:
 285:Generated_Source\PSoC4/ADC_SAR.c ****         }
 286:Generated_Source\PSoC4/ADC_SAR.c ****         else
 287:Generated_Source\PSoC4/ADC_SAR.c ****         {
 288:Generated_Source\PSoC4/ADC_SAR.c ****                counts = (int32)ADC_SAR_SAR_WRK_MAX_12BIT;
 334              		.loc 1 288 0
 335 0180 8023     		movs	r3, #128
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 12


 336 0182 5B01     		lsls	r3, r3, #5
 337 0184 BB60     		str	r3, [r7, #8]
 338              	.L15:
 289:Generated_Source\PSoC4/ADC_SAR.c ****         }
 290:Generated_Source\PSoC4/ADC_SAR.c **** 
 291:Generated_Source\PSoC4/ADC_SAR.c ****         if((ADC_SAR_channelsConfig[chNum] & ADC_SAR_DIFFERENTIAL_EN) == 0u)
 339              		.loc 1 291 0
 340 0186 2D4B     		ldr	r3, .L19+88
 341 0188 FA68     		ldr	r2, [r7, #12]
 342 018a 9200     		lsls	r2, r2, #2
 343 018c D258     		ldr	r2, [r2, r3]
 344 018e 8023     		movs	r3, #128
 345 0190 5B00     		lsls	r3, r3, #1
 346 0192 1340     		ands	r3, r2
 347 0194 05D1     		bne	.L16
 292:Generated_Source\PSoC4/ADC_SAR.c ****         {
 293:Generated_Source\PSoC4/ADC_SAR.c ****             #if((ADC_SAR_DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR__FSIGNED) && \
 294:Generated_Source\PSoC4/ADC_SAR.c ****                 (ADC_SAR_DEFAULT_NEG_INPUT_SEL == ADC_SAR__VREF))
 295:Generated_Source\PSoC4/ADC_SAR.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:Generated_Source\PSoC4/ADC_SAR.c ****                 ADC_SAR_offset[chNum] = (int16)(counts / -2);
 297:Generated_Source\PSoC4/ADC_SAR.c ****             #else
 298:Generated_Source\PSoC4/ADC_SAR.c ****                 ADC_SAR_offset[chNum] = 0;
 348              		.loc 1 298 0
 349 0196 2D4B     		ldr	r3, .L19+104
 350 0198 FA68     		ldr	r2, [r7, #12]
 351 019a 5200     		lsls	r2, r2, #1
 352 019c 0021     		movs	r1, #0
 353 019e D152     		strh	r1, [r2, r3]
 354 01a0 04E0     		b	.L17
 355              	.L16:
 299:Generated_Source\PSoC4/ADC_SAR.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR__FSIGNED */
 300:Generated_Source\PSoC4/ADC_SAR.c ****         }
 301:Generated_Source\PSoC4/ADC_SAR.c ****         else    /* Differential channel */
 302:Generated_Source\PSoC4/ADC_SAR.c ****         {
 303:Generated_Source\PSoC4/ADC_SAR.c ****             #if(ADC_SAR_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR__FUNSIGNED)
 304:Generated_Source\PSoC4/ADC_SAR.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:Generated_Source\PSoC4/ADC_SAR.c ****                 ADC_SAR_offset[chNum] = (int16)(counts / 2);
 306:Generated_Source\PSoC4/ADC_SAR.c ****             #else
 307:Generated_Source\PSoC4/ADC_SAR.c ****                 ADC_SAR_offset[chNum] = 0;
 356              		.loc 1 307 0
 357 01a2 2A4B     		ldr	r3, .L19+104
 358 01a4 FA68     		ldr	r2, [r7, #12]
 359 01a6 5200     		lsls	r2, r2, #1
 360 01a8 0021     		movs	r1, #0
 361 01aa D152     		strh	r1, [r2, r3]
 362              	.L17:
 308:Generated_Source\PSoC4/ADC_SAR.c ****             #endif /* end ADC_SAR_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR__FUNSIGNED */
 309:Generated_Source\PSoC4/ADC_SAR.c ****         }
 310:Generated_Source\PSoC4/ADC_SAR.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:Generated_Source\PSoC4/ADC_SAR.c ****         ADC_SAR_countsPer10Volt[chNum] = (int16)(((counts * ADC_SAR_10MV_COUNTS) +
 363              		.loc 1 311 0 discriminator 2
 364 01ac BB68     		ldr	r3, [r7, #8]
 365 01ae 284A     		ldr	r2, .L19+108
 366 01b0 5343     		muls	r3, r2
 367 01b2 284A     		ldr	r2, .L19+112
 368 01b4 9446     		mov	ip, r2
 369 01b6 6344     		add	r3, r3, ip
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 13


 312:Generated_Source\PSoC4/ADC_SAR.c ****                             ADC_SAR_DEFAULT_VREF_MV_VALUE) / (ADC_SAR_DEFAULT_VREF_MV_VALUE * 2));
 370              		.loc 1 312 0 discriminator 2
 371 01b8 2749     		ldr	r1, .L19+116
 372 01ba 1800     		movs	r0, r3
 373 01bc FFF7FEFF 		bl	__aeabi_idiv
 374 01c0 0300     		movs	r3, r0
 311:Generated_Source\PSoC4/ADC_SAR.c ****                             ADC_SAR_DEFAULT_VREF_MV_VALUE) / (ADC_SAR_DEFAULT_VREF_MV_VALUE * 2));
 375              		.loc 1 311 0 discriminator 2
 376 01c2 1BB2     		sxth	r3, r3
 377 01c4 1900     		movs	r1, r3
 378 01c6 254B     		ldr	r3, .L19+120
 379 01c8 FA68     		ldr	r2, [r7, #12]
 380 01ca 9200     		lsls	r2, r2, #2
 381 01cc D150     		str	r1, [r2, r3]
 232:Generated_Source\PSoC4/ADC_SAR.c ****     {
 382              		.loc 1 232 0 discriminator 2
 383 01ce FB68     		ldr	r3, [r7, #12]
 384 01d0 0133     		adds	r3, r3, #1
 385 01d2 FB60     		str	r3, [r7, #12]
 386              	.L8:
 232:Generated_Source\PSoC4/ADC_SAR.c ****     {
 387              		.loc 1 232 0 is_stmt 0 discriminator 1
 388 01d4 FB68     		ldr	r3, [r7, #12]
 389 01d6 012B     		cmp	r3, #1
 390 01d8 00D8     		bhi	.LCB312
 391 01da 66E7     		b	.L18	@long jump
 392              	.LCB312:
 313:Generated_Source\PSoC4/ADC_SAR.c ****     }
 314:Generated_Source\PSoC4/ADC_SAR.c **** }
 393              		.loc 1 314 0 is_stmt 1
 394 01dc C046     		nop
 395 01de BD46     		mov	sp, r7
 396 01e0 04B0     		add	sp, sp, #16
 397              		@ sp needed
 398 01e2 80BD     		pop	{r7, pc}
 399              	.L20:
 400              		.align	2
 401              	.L19:
 402 01e4 00000000 		.word	ADC_SAR_ISR
 403 01e8 20001A40 		.word	1075445792
 404 01ec 80031A40 		.word	1075446656
 405 01f0 70201010 		.word	269492336
 406 01f4 70200010 		.word	268443760
 407 01f8 00001A40 		.word	1075445760
 408 01fc 04001A40 		.word	1075445764
 409 0200 4C000080 		.word	-2147483572
 410 0204 18001A40 		.word	1075445784
 411 0208 00000208 		.word	134348800
 412 020c 1C001A40 		.word	1075445788
 413 0210 10001A40 		.word	1075445776
 414 0214 02000200 		.word	131074
 415 0218 14001A40 		.word	1075445780
 416 021c 00031A40 		.word	1075446528
 417 0220 40031A40 		.word	1075446592
 418 0224 28021A40 		.word	1075446312
 419 0228 38021A40 		.word	1075446328
 420 022c 18021A40 		.word	1075446296
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 14


 421 0230 000F1A40 		.word	1075449600
 422 0234 30001A40 		.word	1075445808
 423 0238 FFFFFFDF 		.word	-536870913
 424 023c 00000000 		.word	ADC_SAR_channelsConfig
 425 0240 08000000 		.word	ADC_SAR_InputsPlacement.4876
 426 0244 80001A40 		.word	1075445888
 427 0248 80021A40 		.word	1075446400
 428 024c 00000000 		.word	ADC_SAR_offset
 429 0250 10270000 		.word	10000
 430 0254 E40C0000 		.word	3300
 431 0258 C8190000 		.word	6600
 432 025c 00000000 		.word	ADC_SAR_countsPer10Volt
 433              		.cfi_endproc
 434              	.LFE1:
 435              		.size	ADC_SAR_Init, .-ADC_SAR_Init
 436              		.section	.text.ADC_SAR_Enable,"ax",%progbits
 437              		.align	2
 438              		.global	ADC_SAR_Enable
 439              		.code	16
 440              		.thumb_func
 441              		.type	ADC_SAR_Enable, %function
 442              	ADC_SAR_Enable:
 443              	.LFB2:
 315:Generated_Source\PSoC4/ADC_SAR.c **** 
 316:Generated_Source\PSoC4/ADC_SAR.c **** /*******************************************************************************
 317:Generated_Source\PSoC4/ADC_SAR.c **** * Function Name: ADC_SAR_1_Enable
 318:Generated_Source\PSoC4/ADC_SAR.c **** ********************************************************************************
 319:Generated_Source\PSoC4/ADC_SAR.c **** *
 320:Generated_Source\PSoC4/ADC_SAR.c **** * Summary:
 321:Generated_Source\PSoC4/ADC_SAR.c **** *  Enables the clock and analog power for SAR ADC.
 322:Generated_Source\PSoC4/ADC_SAR.c **** *
 323:Generated_Source\PSoC4/ADC_SAR.c **** * Parameters:
 324:Generated_Source\PSoC4/ADC_SAR.c **** *  None.
 325:Generated_Source\PSoC4/ADC_SAR.c **** *
 326:Generated_Source\PSoC4/ADC_SAR.c **** * Return:
 327:Generated_Source\PSoC4/ADC_SAR.c **** *  None.
 328:Generated_Source\PSoC4/ADC_SAR.c **** *
 329:Generated_Source\PSoC4/ADC_SAR.c **** *******************************************************************************/
 330:Generated_Source\PSoC4/ADC_SAR.c **** void ADC_SAR_Enable(void)
 331:Generated_Source\PSoC4/ADC_SAR.c **** {
 444              		.loc 1 331 0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 0
 447              		@ frame_needed = 1, uses_anonymous_args = 0
 448 0000 80B5     		push	{r7, lr}
 449              		.cfi_def_cfa_offset 8
 450              		.cfi_offset 7, -8
 451              		.cfi_offset 14, -4
 452 0002 00AF     		add	r7, sp, #0
 453              		.cfi_def_cfa_register 7
 332:Generated_Source\PSoC4/ADC_SAR.c ****     if (0u == (ADC_SAR_SAR_CTRL_REG & ADC_SAR_ENABLE))
 454              		.loc 1 332 0
 455 0004 084B     		ldr	r3, .L24
 456 0006 1B68     		ldr	r3, [r3]
 457 0008 002B     		cmp	r3, #0
 458 000a 09DB     		blt	.L23
 333:Generated_Source\PSoC4/ADC_SAR.c ****     {
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 15


 334:Generated_Source\PSoC4/ADC_SAR.c ****         #if(ADC_SAR_CY_SAR_IP_VER != ADC_SAR_CY_SAR_IP_VER0)
 335:Generated_Source\PSoC4/ADC_SAR.c **** 
 336:Generated_Source\PSoC4/ADC_SAR.c ****             while (0u != (ADC_SAR_SAR_STATUS_REG & ADC_SAR_STATUS_BUSY))
 337:Generated_Source\PSoC4/ADC_SAR.c ****             {
 338:Generated_Source\PSoC4/ADC_SAR.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:Generated_Source\PSoC4/ADC_SAR.c ****             }
 340:Generated_Source\PSoC4/ADC_SAR.c ****         #endif /* (ADC_SAR_CY_SAR_IP_VER != ADC_SAR_CY_SAR_IP_VER0) */
 341:Generated_Source\PSoC4/ADC_SAR.c ****         
 342:Generated_Source\PSoC4/ADC_SAR.c ****         ADC_SAR_SAR_CTRL_REG |= ADC_SAR_ENABLE;
 459              		.loc 1 342 0
 460 000c 064B     		ldr	r3, .L24
 461 000e 064A     		ldr	r2, .L24
 462 0010 1268     		ldr	r2, [r2]
 463 0012 8021     		movs	r1, #128
 464 0014 0906     		lsls	r1, r1, #24
 465 0016 0A43     		orrs	r2, r1
 466 0018 1A60     		str	r2, [r3]
 343:Generated_Source\PSoC4/ADC_SAR.c ****         
 344:Generated_Source\PSoC4/ADC_SAR.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:Generated_Source\PSoC4/ADC_SAR.c ****         CyDelayUs(ADC_SAR_10US_DELAY);         
 467              		.loc 1 345 0
 468 001a 0A20     		movs	r0, #10
 469 001c FFF7FEFF 		bl	CyDelayUs
 470              	.L23:
 346:Generated_Source\PSoC4/ADC_SAR.c ****     }
 347:Generated_Source\PSoC4/ADC_SAR.c **** }
 471              		.loc 1 347 0
 472 0020 C046     		nop
 473 0022 BD46     		mov	sp, r7
 474              		@ sp needed
 475 0024 80BD     		pop	{r7, pc}
 476              	.L25:
 477 0026 C046     		.align	2
 478              	.L24:
 479 0028 00001A40 		.word	1075445760
 480              		.cfi_endproc
 481              	.LFE2:
 482              		.size	ADC_SAR_Enable, .-ADC_SAR_Enable
 483              		.section	.text.ADC_SAR_Stop,"ax",%progbits
 484              		.align	2
 485              		.global	ADC_SAR_Stop
 486              		.code	16
 487              		.thumb_func
 488              		.type	ADC_SAR_Stop, %function
 489              	ADC_SAR_Stop:
 490              	.LFB3:
 348:Generated_Source\PSoC4/ADC_SAR.c **** 
 349:Generated_Source\PSoC4/ADC_SAR.c **** 
 350:Generated_Source\PSoC4/ADC_SAR.c **** /*******************************************************************************
 351:Generated_Source\PSoC4/ADC_SAR.c **** * Function Name: ADC_SAR_Stop
 352:Generated_Source\PSoC4/ADC_SAR.c **** ********************************************************************************
 353:Generated_Source\PSoC4/ADC_SAR.c **** *
 354:Generated_Source\PSoC4/ADC_SAR.c **** * Summary:
 355:Generated_Source\PSoC4/ADC_SAR.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:Generated_Source\PSoC4/ADC_SAR.c **** *  mode.
 357:Generated_Source\PSoC4/ADC_SAR.c **** *
 358:Generated_Source\PSoC4/ADC_SAR.c **** * Parameters:
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 16


 359:Generated_Source\PSoC4/ADC_SAR.c **** *  None.
 360:Generated_Source\PSoC4/ADC_SAR.c **** *
 361:Generated_Source\PSoC4/ADC_SAR.c **** * Return:
 362:Generated_Source\PSoC4/ADC_SAR.c **** *  None.
 363:Generated_Source\PSoC4/ADC_SAR.c **** *
 364:Generated_Source\PSoC4/ADC_SAR.c **** *******************************************************************************/
 365:Generated_Source\PSoC4/ADC_SAR.c **** void ADC_SAR_Stop(void)
 366:Generated_Source\PSoC4/ADC_SAR.c **** {
 491              		.loc 1 366 0
 492              		.cfi_startproc
 493              		@ args = 0, pretend = 0, frame = 0
 494              		@ frame_needed = 1, uses_anonymous_args = 0
 495 0000 80B5     		push	{r7, lr}
 496              		.cfi_def_cfa_offset 8
 497              		.cfi_offset 7, -8
 498              		.cfi_offset 14, -4
 499 0002 00AF     		add	r7, sp, #0
 500              		.cfi_def_cfa_register 7
 367:Generated_Source\PSoC4/ADC_SAR.c ****     ADC_SAR_SAR_CTRL_REG &= (uint32)~ADC_SAR_ENABLE;
 501              		.loc 1 367 0
 502 0004 044B     		ldr	r3, .L27
 503 0006 044A     		ldr	r2, .L27
 504 0008 1268     		ldr	r2, [r2]
 505 000a 5200     		lsls	r2, r2, #1
 506 000c 5208     		lsrs	r2, r2, #1
 507 000e 1A60     		str	r2, [r3]
 368:Generated_Source\PSoC4/ADC_SAR.c **** }
 508              		.loc 1 368 0
 509 0010 C046     		nop
 510 0012 BD46     		mov	sp, r7
 511              		@ sp needed
 512 0014 80BD     		pop	{r7, pc}
 513              	.L28:
 514 0016 C046     		.align	2
 515              	.L27:
 516 0018 00001A40 		.word	1075445760
 517              		.cfi_endproc
 518              	.LFE3:
 519              		.size	ADC_SAR_Stop, .-ADC_SAR_Stop
 520              		.section	.text.ADC_SAR_StartConvert,"ax",%progbits
 521              		.align	2
 522              		.global	ADC_SAR_StartConvert
 523              		.code	16
 524              		.thumb_func
 525              		.type	ADC_SAR_StartConvert, %function
 526              	ADC_SAR_StartConvert:
 527              	.LFB4:
 369:Generated_Source\PSoC4/ADC_SAR.c **** 
 370:Generated_Source\PSoC4/ADC_SAR.c **** 
 371:Generated_Source\PSoC4/ADC_SAR.c **** /*******************************************************************************
 372:Generated_Source\PSoC4/ADC_SAR.c **** * Function Name: ADC_SAR_StartConvert
 373:Generated_Source\PSoC4/ADC_SAR.c **** ********************************************************************************
 374:Generated_Source\PSoC4/ADC_SAR.c **** *
 375:Generated_Source\PSoC4/ADC_SAR.c **** * Summary:
 376:Generated_Source\PSoC4/ADC_SAR.c **** *  Description:
 377:Generated_Source\PSoC4/ADC_SAR.c **** *  For free running mode, this API starts the conversion process and it
 378:Generated_Source\PSoC4/ADC_SAR.c **** *  runs continuously.
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 17


 379:Generated_Source\PSoC4/ADC_SAR.c **** *
 380:Generated_Source\PSoC4/ADC_SAR.c **** *  In a triggered mode, this routine triggers every conversion by
 381:Generated_Source\PSoC4/ADC_SAR.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:Generated_Source\PSoC4/ADC_SAR.c **** *  every conversion has to start by this API.
 383:Generated_Source\PSoC4/ADC_SAR.c **** *
 384:Generated_Source\PSoC4/ADC_SAR.c **** * Parameters:
 385:Generated_Source\PSoC4/ADC_SAR.c **** *  None.
 386:Generated_Source\PSoC4/ADC_SAR.c **** *
 387:Generated_Source\PSoC4/ADC_SAR.c **** * Return:
 388:Generated_Source\PSoC4/ADC_SAR.c **** *  None.
 389:Generated_Source\PSoC4/ADC_SAR.c **** *
 390:Generated_Source\PSoC4/ADC_SAR.c **** *******************************************************************************/
 391:Generated_Source\PSoC4/ADC_SAR.c **** void ADC_SAR_StartConvert(void)
 392:Generated_Source\PSoC4/ADC_SAR.c **** {
 528              		.loc 1 392 0
 529              		.cfi_startproc
 530              		@ args = 0, pretend = 0, frame = 0
 531              		@ frame_needed = 1, uses_anonymous_args = 0
 532 0000 80B5     		push	{r7, lr}
 533              		.cfi_def_cfa_offset 8
 534              		.cfi_offset 7, -8
 535              		.cfi_offset 14, -4
 536 0002 00AF     		add	r7, sp, #0
 537              		.cfi_def_cfa_register 7
 393:Generated_Source\PSoC4/ADC_SAR.c ****     #if(ADC_SAR_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR__FREERUNNING)
 394:Generated_Source\PSoC4/ADC_SAR.c ****         ADC_SAR_SAR_SAMPLE_CTRL_REG |= ADC_SAR_CONTINUOUS_EN;
 538              		.loc 1 394 0
 539 0004 044B     		ldr	r3, .L30
 540 0006 044A     		ldr	r2, .L30
 541 0008 1268     		ldr	r2, [r2]
 542 000a 8021     		movs	r1, #128
 543 000c 4902     		lsls	r1, r1, #9
 544 000e 0A43     		orrs	r2, r1
 545 0010 1A60     		str	r2, [r3]
 395:Generated_Source\PSoC4/ADC_SAR.c ****     #else /* Firmware trigger */
 396:Generated_Source\PSoC4/ADC_SAR.c ****         ADC_SAR_SAR_START_CTRL_REG = ADC_SAR_FW_TRIGGER;
 397:Generated_Source\PSoC4/ADC_SAR.c ****     #endif /* End ADC_SAR_DEFAULT_SAMPLE_MODE == ADC_SAR__FREERUNNING */
 398:Generated_Source\PSoC4/ADC_SAR.c **** 
 399:Generated_Source\PSoC4/ADC_SAR.c **** }
 546              		.loc 1 399 0
 547 0012 C046     		nop
 548 0014 BD46     		mov	sp, r7
 549              		@ sp needed
 550 0016 80BD     		pop	{r7, pc}
 551              	.L31:
 552              		.align	2
 553              	.L30:
 554 0018 04001A40 		.word	1075445764
 555              		.cfi_endproc
 556              	.LFE4:
 557              		.size	ADC_SAR_StartConvert, .-ADC_SAR_StartConvert
 558              		.section	.text.ADC_SAR_StopConvert,"ax",%progbits
 559              		.align	2
 560              		.global	ADC_SAR_StopConvert
 561              		.code	16
 562              		.thumb_func
 563              		.type	ADC_SAR_StopConvert, %function
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 18


 564              	ADC_SAR_StopConvert:
 565              	.LFB5:
 400:Generated_Source\PSoC4/ADC_SAR.c **** 
 401:Generated_Source\PSoC4/ADC_SAR.c **** 
 402:Generated_Source\PSoC4/ADC_SAR.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/ADC_SAR.c **** * Function Name: ADC_SAR_StopConvert
 404:Generated_Source\PSoC4/ADC_SAR.c **** ********************************************************************************
 405:Generated_Source\PSoC4/ADC_SAR.c **** *
 406:Generated_Source\PSoC4/ADC_SAR.c **** * Summary:
 407:Generated_Source\PSoC4/ADC_SAR.c **** *  Forces the ADC to stop all conversions.
 408:Generated_Source\PSoC4/ADC_SAR.c **** *
 409:Generated_Source\PSoC4/ADC_SAR.c **** * Parameters:
 410:Generated_Source\PSoC4/ADC_SAR.c **** *  None.
 411:Generated_Source\PSoC4/ADC_SAR.c **** *
 412:Generated_Source\PSoC4/ADC_SAR.c **** * Return:
 413:Generated_Source\PSoC4/ADC_SAR.c **** *  None.
 414:Generated_Source\PSoC4/ADC_SAR.c **** *
 415:Generated_Source\PSoC4/ADC_SAR.c **** *******************************************************************************/
 416:Generated_Source\PSoC4/ADC_SAR.c **** void ADC_SAR_StopConvert(void)
 417:Generated_Source\PSoC4/ADC_SAR.c **** {
 566              		.loc 1 417 0
 567              		.cfi_startproc
 568              		@ args = 0, pretend = 0, frame = 0
 569              		@ frame_needed = 1, uses_anonymous_args = 0
 570 0000 80B5     		push	{r7, lr}
 571              		.cfi_def_cfa_offset 8
 572              		.cfi_offset 7, -8
 573              		.cfi_offset 14, -4
 574 0002 00AF     		add	r7, sp, #0
 575              		.cfi_def_cfa_register 7
 418:Generated_Source\PSoC4/ADC_SAR.c ****     #if(ADC_SAR_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR__FREERUNNING)
 419:Generated_Source\PSoC4/ADC_SAR.c ****         ADC_SAR_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_SAR_CONTINUOUS_EN);
 576              		.loc 1 419 0
 577 0004 044B     		ldr	r3, .L33
 578 0006 044A     		ldr	r2, .L33
 579 0008 1268     		ldr	r2, [r2]
 580 000a 0449     		ldr	r1, .L33+4
 581 000c 0A40     		ands	r2, r1
 582 000e 1A60     		str	r2, [r3]
 420:Generated_Source\PSoC4/ADC_SAR.c ****     #endif /* ADC_SAR_DEFAULT_SAMPLE_MODE == ADC_SAR__FREERUNNING */
 421:Generated_Source\PSoC4/ADC_SAR.c **** }
 583              		.loc 1 421 0
 584 0010 C046     		nop
 585 0012 BD46     		mov	sp, r7
 586              		@ sp needed
 587 0014 80BD     		pop	{r7, pc}
 588              	.L34:
 589 0016 C046     		.align	2
 590              	.L33:
 591 0018 04001A40 		.word	1075445764
 592 001c FFFFFEFF 		.word	-65537
 593              		.cfi_endproc
 594              	.LFE5:
 595              		.size	ADC_SAR_StopConvert, .-ADC_SAR_StopConvert
 596              		.section	.text.ADC_SAR_IsEndConversion,"ax",%progbits
 597              		.align	2
 598              		.global	ADC_SAR_IsEndConversion
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 19


 599              		.code	16
 600              		.thumb_func
 601              		.type	ADC_SAR_IsEndConversion, %function
 602              	ADC_SAR_IsEndConversion:
 603              	.LFB6:
 422:Generated_Source\PSoC4/ADC_SAR.c **** 
 423:Generated_Source\PSoC4/ADC_SAR.c **** 
 424:Generated_Source\PSoC4/ADC_SAR.c **** /*******************************************************************************
 425:Generated_Source\PSoC4/ADC_SAR.c **** * Function Name: ADC_SAR_IsEndConversion
 426:Generated_Source\PSoC4/ADC_SAR.c **** ********************************************************************************
 427:Generated_Source\PSoC4/ADC_SAR.c **** *
 428:Generated_Source\PSoC4/ADC_SAR.c **** * Summary:
 429:Generated_Source\PSoC4/ADC_SAR.c **** *  Description: Checks for ADC end of conversion for the case one
 430:Generated_Source\PSoC4/ADC_SAR.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:Generated_Source\PSoC4/ADC_SAR.c **** *  as a software version of the EOC. This function provides the
 432:Generated_Source\PSoC4/ADC_SAR.c **** *  programmer with two options. In one mode this function
 433:Generated_Source\PSoC4/ADC_SAR.c **** *  immediately returns with the conversion status. In the other mode,
 434:Generated_Source\PSoC4/ADC_SAR.c **** *  the function does not return (blocking) until the conversion has
 435:Generated_Source\PSoC4/ADC_SAR.c **** *  completed.
 436:Generated_Source\PSoC4/ADC_SAR.c **** *
 437:Generated_Source\PSoC4/ADC_SAR.c **** * Parameters:
 438:Generated_Source\PSoC4/ADC_SAR.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:Generated_Source\PSoC4/ADC_SAR.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:Generated_Source\PSoC4/ADC_SAR.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:Generated_Source\PSoC4/ADC_SAR.c **** *                              for injection channel
 442:Generated_Source\PSoC4/ADC_SAR.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:Generated_Source\PSoC4/ADC_SAR.c **** *                              channel conversion
 444:Generated_Source\PSoC4/ADC_SAR.c **** *
 445:Generated_Source\PSoC4/ADC_SAR.c **** * Return:
 446:Generated_Source\PSoC4/ADC_SAR.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:Generated_Source\PSoC4/ADC_SAR.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:Generated_Source\PSoC4/ADC_SAR.c **** *
 449:Generated_Source\PSoC4/ADC_SAR.c **** *******************************************************************************/
 450:Generated_Source\PSoC4/ADC_SAR.c **** uint32 ADC_SAR_IsEndConversion(uint32 retMode)
 451:Generated_Source\PSoC4/ADC_SAR.c **** {
 604              		.loc 1 451 0
 605              		.cfi_startproc
 606              		@ args = 0, pretend = 0, frame = 16
 607              		@ frame_needed = 1, uses_anonymous_args = 0
 608 0000 80B5     		push	{r7, lr}
 609              		.cfi_def_cfa_offset 8
 610              		.cfi_offset 7, -8
 611              		.cfi_offset 14, -4
 612 0002 84B0     		sub	sp, sp, #16
 613              		.cfi_def_cfa_offset 24
 614 0004 00AF     		add	r7, sp, #0
 615              		.cfi_def_cfa_register 7
 616 0006 7860     		str	r0, [r7, #4]
 452:Generated_Source\PSoC4/ADC_SAR.c ****     uint32 status = 0u;
 617              		.loc 1 452 0
 618 0008 0023     		movs	r3, #0
 619 000a FB60     		str	r3, [r7, #12]
 453:Generated_Source\PSoC4/ADC_SAR.c **** 
 454:Generated_Source\PSoC4/ADC_SAR.c ****     if((retMode & (ADC_SAR_RETURN_STATUS | ADC_SAR_WAIT_FOR_RESULT)) != 0u)
 620              		.loc 1 454 0
 621 000c 7B68     		ldr	r3, [r7, #4]
 622 000e 0322     		movs	r2, #3
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 20


 623 0010 1340     		ands	r3, r2
 624 0012 11D0     		beq	.L36
 625              	.L38:
 455:Generated_Source\PSoC4/ADC_SAR.c ****     {
 456:Generated_Source\PSoC4/ADC_SAR.c ****         do
 457:Generated_Source\PSoC4/ADC_SAR.c ****         {
 458:Generated_Source\PSoC4/ADC_SAR.c ****             status = ADC_SAR_SAR_INTR_REG & ADC_SAR_EOS_MASK;
 626              		.loc 1 458 0 discriminator 2
 627 0014 184B     		ldr	r3, .L43
 628 0016 1B68     		ldr	r3, [r3]
 629 0018 0122     		movs	r2, #1
 630 001a 1340     		ands	r3, r2
 631 001c FB60     		str	r3, [r7, #12]
 459:Generated_Source\PSoC4/ADC_SAR.c ****         }while((status == 0u) && ((retMode & ADC_SAR_WAIT_FOR_RESULT) != 0u));
 632              		.loc 1 459 0 discriminator 2
 633 001e FB68     		ldr	r3, [r7, #12]
 634 0020 002B     		cmp	r3, #0
 635 0022 03D1     		bne	.L37
 636              		.loc 1 459 0 is_stmt 0 discriminator 1
 637 0024 7B68     		ldr	r3, [r7, #4]
 638 0026 0222     		movs	r2, #2
 639 0028 1340     		ands	r3, r2
 640 002a F3D1     		bne	.L38
 641              	.L37:
 460:Generated_Source\PSoC4/ADC_SAR.c **** 
 461:Generated_Source\PSoC4/ADC_SAR.c ****         if(status != 0u)
 642              		.loc 1 461 0 is_stmt 1
 643 002c FB68     		ldr	r3, [r7, #12]
 644 002e 002B     		cmp	r3, #0
 645 0030 02D0     		beq	.L36
 462:Generated_Source\PSoC4/ADC_SAR.c ****         {
 463:Generated_Source\PSoC4/ADC_SAR.c ****             /* Clear EOS bit */
 464:Generated_Source\PSoC4/ADC_SAR.c ****             ADC_SAR_SAR_INTR_REG = ADC_SAR_EOS_MASK;
 646              		.loc 1 464 0
 647 0032 114B     		ldr	r3, .L43
 648 0034 0122     		movs	r2, #1
 649 0036 1A60     		str	r2, [r3]
 650              	.L36:
 465:Generated_Source\PSoC4/ADC_SAR.c ****         }
 466:Generated_Source\PSoC4/ADC_SAR.c ****     }
 467:Generated_Source\PSoC4/ADC_SAR.c **** 
 468:Generated_Source\PSoC4/ADC_SAR.c ****     #if(ADC_SAR_INJ_CHANNEL_ENABLED)
 469:Generated_Source\PSoC4/ADC_SAR.c ****         if((retMode & (ADC_SAR_RETURN_STATUS_INJ | ADC_SAR_WAIT_FOR_RESULT_INJ)) != 0u)
 651              		.loc 1 469 0
 652 0038 7B68     		ldr	r3, [r7, #4]
 653 003a 0C22     		movs	r2, #12
 654 003c 1340     		ands	r3, r2
 655 003e 15D0     		beq	.L39
 656              	.L41:
 470:Generated_Source\PSoC4/ADC_SAR.c ****         {
 471:Generated_Source\PSoC4/ADC_SAR.c ****             do
 472:Generated_Source\PSoC4/ADC_SAR.c ****             {
 473:Generated_Source\PSoC4/ADC_SAR.c ****                 status |= ADC_SAR_SAR_INTR_REG & ADC_SAR_INJ_EOC_MASK;
 657              		.loc 1 473 0
 658 0040 0D4B     		ldr	r3, .L43
 659 0042 1B68     		ldr	r3, [r3]
 660 0044 1022     		movs	r2, #16
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 21


 661 0046 1340     		ands	r3, r2
 662 0048 FA68     		ldr	r2, [r7, #12]
 663 004a 1343     		orrs	r3, r2
 664 004c FB60     		str	r3, [r7, #12]
 474:Generated_Source\PSoC4/ADC_SAR.c ****             }while(((status & ADC_SAR_INJ_EOC_MASK) == 0u) &&
 665              		.loc 1 474 0
 666 004e FB68     		ldr	r3, [r7, #12]
 667 0050 1022     		movs	r2, #16
 668 0052 1340     		ands	r3, r2
 475:Generated_Source\PSoC4/ADC_SAR.c ****                    ((retMode & ADC_SAR_WAIT_FOR_RESULT_INJ) != 0u));
 669              		.loc 1 475 0
 670 0054 03D1     		bne	.L40
 671              		.loc 1 475 0 is_stmt 0 discriminator 1
 672 0056 7B68     		ldr	r3, [r7, #4]
 673 0058 0822     		movs	r2, #8
 674 005a 1340     		ands	r3, r2
 474:Generated_Source\PSoC4/ADC_SAR.c ****             }while(((status & ADC_SAR_INJ_EOC_MASK) == 0u) &&
 675              		.loc 1 474 0 is_stmt 1 discriminator 1
 676 005c F0D1     		bne	.L41
 677              	.L40:
 476:Generated_Source\PSoC4/ADC_SAR.c **** 
 477:Generated_Source\PSoC4/ADC_SAR.c ****             if((status & ADC_SAR_INJ_EOC_MASK) != 0u)
 678              		.loc 1 477 0
 679 005e FB68     		ldr	r3, [r7, #12]
 680 0060 1022     		movs	r2, #16
 681 0062 1340     		ands	r3, r2
 682 0064 02D0     		beq	.L39
 478:Generated_Source\PSoC4/ADC_SAR.c ****             {
 479:Generated_Source\PSoC4/ADC_SAR.c ****                 /* Clear Injection EOS bit */
 480:Generated_Source\PSoC4/ADC_SAR.c ****                 ADC_SAR_SAR_INTR_REG = ADC_SAR_INJ_EOC_MASK;
 683              		.loc 1 480 0
 684 0066 044B     		ldr	r3, .L43
 685 0068 1022     		movs	r2, #16
 686 006a 1A60     		str	r2, [r3]
 687              	.L39:
 481:Generated_Source\PSoC4/ADC_SAR.c ****             }
 482:Generated_Source\PSoC4/ADC_SAR.c ****         }
 483:Generated_Source\PSoC4/ADC_SAR.c ****     #endif /* ADC_SAR_INJ_CHANNEL_ENABLED */
 484:Generated_Source\PSoC4/ADC_SAR.c **** 
 485:Generated_Source\PSoC4/ADC_SAR.c ****     return (status);
 688              		.loc 1 485 0
 689 006c FB68     		ldr	r3, [r7, #12]
 486:Generated_Source\PSoC4/ADC_SAR.c **** }
 690              		.loc 1 486 0
 691 006e 1800     		movs	r0, r3
 692 0070 BD46     		mov	sp, r7
 693 0072 04B0     		add	sp, sp, #16
 694              		@ sp needed
 695 0074 80BD     		pop	{r7, pc}
 696              	.L44:
 697 0076 C046     		.align	2
 698              	.L43:
 699 0078 10021A40 		.word	1075446288
 700              		.cfi_endproc
 701              	.LFE6:
 702              		.size	ADC_SAR_IsEndConversion, .-ADC_SAR_IsEndConversion
 703              		.section	.text.ADC_SAR_GetResult16,"ax",%progbits
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 22


 704              		.align	2
 705              		.global	ADC_SAR_GetResult16
 706              		.code	16
 707              		.thumb_func
 708              		.type	ADC_SAR_GetResult16, %function
 709              	ADC_SAR_GetResult16:
 710              	.LFB7:
 487:Generated_Source\PSoC4/ADC_SAR.c **** 
 488:Generated_Source\PSoC4/ADC_SAR.c **** 
 489:Generated_Source\PSoC4/ADC_SAR.c **** /*******************************************************************************
 490:Generated_Source\PSoC4/ADC_SAR.c **** * Function Name: ADC_SAR_GetResult16
 491:Generated_Source\PSoC4/ADC_SAR.c **** ********************************************************************************
 492:Generated_Source\PSoC4/ADC_SAR.c **** *
 493:Generated_Source\PSoC4/ADC_SAR.c **** * Summary:
 494:Generated_Source\PSoC4/ADC_SAR.c **** *  Gets the data available in the SAR DATA register.
 495:Generated_Source\PSoC4/ADC_SAR.c **** *
 496:Generated_Source\PSoC4/ADC_SAR.c **** * Parameters:
 497:Generated_Source\PSoC4/ADC_SAR.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:Generated_Source\PSoC4/ADC_SAR.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:Generated_Source\PSoC4/ADC_SAR.c **** *
 500:Generated_Source\PSoC4/ADC_SAR.c **** * Return:
 501:Generated_Source\PSoC4/ADC_SAR.c **** *  Returns converted data as a signed 16-bit integer
 502:Generated_Source\PSoC4/ADC_SAR.c **** *
 503:Generated_Source\PSoC4/ADC_SAR.c **** *******************************************************************************/
 504:Generated_Source\PSoC4/ADC_SAR.c **** int16 ADC_SAR_GetResult16(uint32 chan)
 505:Generated_Source\PSoC4/ADC_SAR.c **** {
 711              		.loc 1 505 0
 712              		.cfi_startproc
 713              		@ args = 0, pretend = 0, frame = 16
 714              		@ frame_needed = 1, uses_anonymous_args = 0
 715 0000 80B5     		push	{r7, lr}
 716              		.cfi_def_cfa_offset 8
 717              		.cfi_offset 7, -8
 718              		.cfi_offset 14, -4
 719 0002 84B0     		sub	sp, sp, #16
 720              		.cfi_def_cfa_offset 24
 721 0004 00AF     		add	r7, sp, #0
 722              		.cfi_def_cfa_register 7
 723 0006 7860     		str	r0, [r7, #4]
 506:Generated_Source\PSoC4/ADC_SAR.c ****     uint32 result;
 507:Generated_Source\PSoC4/ADC_SAR.c **** 
 508:Generated_Source\PSoC4/ADC_SAR.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:Generated_Source\PSoC4/ADC_SAR.c ****     CYASSERT(chan < ADC_SAR_TOTAL_CHANNELS_NUM);
 724              		.loc 1 509 0
 725 0008 7B68     		ldr	r3, [r7, #4]
 726 000a 012B     		cmp	r3, #1
 727 000c 02D9     		bls	.L46
 728              		.loc 1 509 0 is_stmt 0 discriminator 1
 729 000e 0020     		movs	r0, #0
 730 0010 FFF7FEFF 		bl	CyHalt
 731              	.L46:
 510:Generated_Source\PSoC4/ADC_SAR.c **** 
 511:Generated_Source\PSoC4/ADC_SAR.c ****     if(chan < ADC_SAR_SEQUENCED_CHANNELS_NUM)
 732              		.loc 1 511 0 is_stmt 1
 733 0014 7B68     		ldr	r3, [r7, #4]
 734 0016 002B     		cmp	r3, #0
 735 0018 09D1     		bne	.L47
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 23


 512:Generated_Source\PSoC4/ADC_SAR.c ****     {
 513:Generated_Source\PSoC4/ADC_SAR.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 736              		.loc 1 513 0
 737 001a 7B68     		ldr	r3, [r7, #4]
 738 001c 9B00     		lsls	r3, r3, #2
 739 001e 094A     		ldr	r2, .L50
 740 0020 9446     		mov	ip, r2
 741 0022 6344     		add	r3, r3, ip
 742 0024 1B68     		ldr	r3, [r3]
 743 0026 1B04     		lsls	r3, r3, #16
 744 0028 1B0C     		lsrs	r3, r3, #16
 745 002a FB60     		str	r3, [r7, #12]
 746 002c 04E0     		b	.L48
 747              	.L47:
 514:Generated_Source\PSoC4/ADC_SAR.c ****                 ADC_SAR_RESULT_MASK;
 515:Generated_Source\PSoC4/ADC_SAR.c ****     }
 516:Generated_Source\PSoC4/ADC_SAR.c ****     else
 517:Generated_Source\PSoC4/ADC_SAR.c ****     {
 518:Generated_Source\PSoC4/ADC_SAR.c ****         #if(ADC_SAR_INJ_CHANNEL_ENABLED)
 519:Generated_Source\PSoC4/ADC_SAR.c ****             result = ADC_SAR_SAR_INJ_RESULT_REG & ADC_SAR_RESULT_MASK;
 748              		.loc 1 519 0
 749 002e 064B     		ldr	r3, .L50+4
 750 0030 1B68     		ldr	r3, [r3]
 751 0032 1B04     		lsls	r3, r3, #16
 752 0034 1B0C     		lsrs	r3, r3, #16
 753 0036 FB60     		str	r3, [r7, #12]
 754              	.L48:
 520:Generated_Source\PSoC4/ADC_SAR.c ****         #else
 521:Generated_Source\PSoC4/ADC_SAR.c ****             result = 0u;
 522:Generated_Source\PSoC4/ADC_SAR.c ****         #endif /* ADC_SAR_INJ_CHANNEL_ENABLED */
 523:Generated_Source\PSoC4/ADC_SAR.c ****     }
 524:Generated_Source\PSoC4/ADC_SAR.c **** 
 525:Generated_Source\PSoC4/ADC_SAR.c ****     return ( (int16)result );
 755              		.loc 1 525 0
 756 0038 FB68     		ldr	r3, [r7, #12]
 757 003a 1BB2     		sxth	r3, r3
 526:Generated_Source\PSoC4/ADC_SAR.c **** }
 758              		.loc 1 526 0
 759 003c 1800     		movs	r0, r3
 760 003e BD46     		mov	sp, r7
 761 0040 04B0     		add	sp, sp, #16
 762              		@ sp needed
 763 0042 80BD     		pop	{r7, pc}
 764              	.L51:
 765              		.align	2
 766              	.L50:
 767 0044 80011A40 		.word	1075446144
 768 0048 90021A40 		.word	1075446416
 769              		.cfi_endproc
 770              	.LFE7:
 771              		.size	ADC_SAR_GetResult16, .-ADC_SAR_GetResult16
 772              		.section	.text.ADC_SAR_SetChanMask,"ax",%progbits
 773              		.align	2
 774              		.global	ADC_SAR_SetChanMask
 775              		.code	16
 776              		.thumb_func
 777              		.type	ADC_SAR_SetChanMask, %function
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 24


 778              	ADC_SAR_SetChanMask:
 779              	.LFB8:
 527:Generated_Source\PSoC4/ADC_SAR.c **** 
 528:Generated_Source\PSoC4/ADC_SAR.c **** 
 529:Generated_Source\PSoC4/ADC_SAR.c **** /*******************************************************************************
 530:Generated_Source\PSoC4/ADC_SAR.c **** * Function Name: ADC_SAR_SetChanMask
 531:Generated_Source\PSoC4/ADC_SAR.c **** ********************************************************************************
 532:Generated_Source\PSoC4/ADC_SAR.c **** *
 533:Generated_Source\PSoC4/ADC_SAR.c **** * Summary:
 534:Generated_Source\PSoC4/ADC_SAR.c **** *  Sets the channel enable mask.
 535:Generated_Source\PSoC4/ADC_SAR.c **** *
 536:Generated_Source\PSoC4/ADC_SAR.c **** * Parameters:
 537:Generated_Source\PSoC4/ADC_SAR.c **** *  mask: Sets which channels that will be
 538:Generated_Source\PSoC4/ADC_SAR.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:Generated_Source\PSoC4/ADC_SAR.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:Generated_Source\PSoC4/ADC_SAR.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:Generated_Source\PSoC4/ADC_SAR.c **** *  This API will not enable the injection channel.
 542:Generated_Source\PSoC4/ADC_SAR.c **** *  Examples: If the component is setup to sequence through 8
 543:Generated_Source\PSoC4/ADC_SAR.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:Generated_Source\PSoC4/ADC_SAR.c **** *
 545:Generated_Source\PSoC4/ADC_SAR.c **** * Return:
 546:Generated_Source\PSoC4/ADC_SAR.c **** *  None.
 547:Generated_Source\PSoC4/ADC_SAR.c **** *
 548:Generated_Source\PSoC4/ADC_SAR.c **** *******************************************************************************/
 549:Generated_Source\PSoC4/ADC_SAR.c **** void ADC_SAR_SetChanMask(uint32 mask)
 550:Generated_Source\PSoC4/ADC_SAR.c **** {
 780              		.loc 1 550 0
 781              		.cfi_startproc
 782              		@ args = 0, pretend = 0, frame = 8
 783              		@ frame_needed = 1, uses_anonymous_args = 0
 784 0000 80B5     		push	{r7, lr}
 785              		.cfi_def_cfa_offset 8
 786              		.cfi_offset 7, -8
 787              		.cfi_offset 14, -4
 788 0002 82B0     		sub	sp, sp, #8
 789              		.cfi_def_cfa_offset 16
 790 0004 00AF     		add	r7, sp, #0
 791              		.cfi_def_cfa_register 7
 792 0006 7860     		str	r0, [r7, #4]
 551:Generated_Source\PSoC4/ADC_SAR.c ****     ADC_SAR_SAR_CHAN_EN_REG = mask & ADC_SAR_MAX_CHANNELS_EN_MASK;
 793              		.loc 1 551 0
 794 0008 044B     		ldr	r3, .L53
 795 000a 7A68     		ldr	r2, [r7, #4]
 796 000c 0121     		movs	r1, #1
 797 000e 0A40     		ands	r2, r1
 798 0010 1A60     		str	r2, [r3]
 552:Generated_Source\PSoC4/ADC_SAR.c **** }
 799              		.loc 1 552 0
 800 0012 C046     		nop
 801 0014 BD46     		mov	sp, r7
 802 0016 02B0     		add	sp, sp, #8
 803              		@ sp needed
 804 0018 80BD     		pop	{r7, pc}
 805              	.L54:
 806 001a C046     		.align	2
 807              	.L53:
 808 001c 20001A40 		.word	1075445792
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 25


 809              		.cfi_endproc
 810              	.LFE8:
 811              		.size	ADC_SAR_SetChanMask, .-ADC_SAR_SetChanMask
 812              		.section	.text.ADC_SAR_EnableInjection,"ax",%progbits
 813              		.align	2
 814              		.global	ADC_SAR_EnableInjection
 815              		.code	16
 816              		.thumb_func
 817              		.type	ADC_SAR_EnableInjection, %function
 818              	ADC_SAR_EnableInjection:
 819              	.LFB9:
 553:Generated_Source\PSoC4/ADC_SAR.c **** 
 554:Generated_Source\PSoC4/ADC_SAR.c **** #if(ADC_SAR_INJ_CHANNEL_ENABLED)
 555:Generated_Source\PSoC4/ADC_SAR.c **** 
 556:Generated_Source\PSoC4/ADC_SAR.c **** 
 557:Generated_Source\PSoC4/ADC_SAR.c ****     /*******************************************************************************
 558:Generated_Source\PSoC4/ADC_SAR.c ****     * Function Name: ADC_SAR_EnableInjection
 559:Generated_Source\PSoC4/ADC_SAR.c ****     ********************************************************************************
 560:Generated_Source\PSoC4/ADC_SAR.c ****     *
 561:Generated_Source\PSoC4/ADC_SAR.c ****     * Summary:
 562:Generated_Source\PSoC4/ADC_SAR.c ****     *  Enables the injection channel for the next scan only.
 563:Generated_Source\PSoC4/ADC_SAR.c ****     *
 564:Generated_Source\PSoC4/ADC_SAR.c ****     * Parameters:
 565:Generated_Source\PSoC4/ADC_SAR.c ****     *  None.
 566:Generated_Source\PSoC4/ADC_SAR.c ****     *
 567:Generated_Source\PSoC4/ADC_SAR.c ****     * Return:
 568:Generated_Source\PSoC4/ADC_SAR.c ****     *  None.
 569:Generated_Source\PSoC4/ADC_SAR.c ****     *
 570:Generated_Source\PSoC4/ADC_SAR.c ****     *******************************************************************************/
 571:Generated_Source\PSoC4/ADC_SAR.c ****     void ADC_SAR_EnableInjection(void)
 572:Generated_Source\PSoC4/ADC_SAR.c ****     {
 820              		.loc 1 572 0
 821              		.cfi_startproc
 822              		@ args = 0, pretend = 0, frame = 0
 823              		@ frame_needed = 1, uses_anonymous_args = 0
 824 0000 80B5     		push	{r7, lr}
 825              		.cfi_def_cfa_offset 8
 826              		.cfi_offset 7, -8
 827              		.cfi_offset 14, -4
 828 0002 00AF     		add	r7, sp, #0
 829              		.cfi_def_cfa_register 7
 573:Generated_Source\PSoC4/ADC_SAR.c ****         ADC_SAR_SAR_INJ_CHAN_CONFIG_REG |= ADC_SAR_INJ_CHAN_EN;
 830              		.loc 1 573 0
 831 0004 044B     		ldr	r3, .L56
 832 0006 044A     		ldr	r2, .L56
 833 0008 1268     		ldr	r2, [r2]
 834 000a 8021     		movs	r1, #128
 835 000c 0906     		lsls	r1, r1, #24
 836 000e 0A43     		orrs	r2, r1
 837 0010 1A60     		str	r2, [r3]
 574:Generated_Source\PSoC4/ADC_SAR.c ****     }
 838              		.loc 1 574 0
 839 0012 C046     		nop
 840 0014 BD46     		mov	sp, r7
 841              		@ sp needed
 842 0016 80BD     		pop	{r7, pc}
 843              	.L57:
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 26


 844              		.align	2
 845              	.L56:
 846 0018 80021A40 		.word	1075446400
 847              		.cfi_endproc
 848              	.LFE9:
 849              		.size	ADC_SAR_EnableInjection, .-ADC_SAR_EnableInjection
 850              		.section	.text.ADC_SAR_SetLowLimit,"ax",%progbits
 851              		.align	2
 852              		.global	ADC_SAR_SetLowLimit
 853              		.code	16
 854              		.thumb_func
 855              		.type	ADC_SAR_SetLowLimit, %function
 856              	ADC_SAR_SetLowLimit:
 857              	.LFB10:
 575:Generated_Source\PSoC4/ADC_SAR.c **** 
 576:Generated_Source\PSoC4/ADC_SAR.c **** #endif /* ADC_SAR_INJ_CHANNEL_ENABLED */
 577:Generated_Source\PSoC4/ADC_SAR.c **** 
 578:Generated_Source\PSoC4/ADC_SAR.c **** 
 579:Generated_Source\PSoC4/ADC_SAR.c **** /*******************************************************************************
 580:Generated_Source\PSoC4/ADC_SAR.c **** * Function Name: ADC_SAR_SetLowLimit
 581:Generated_Source\PSoC4/ADC_SAR.c **** ********************************************************************************
 582:Generated_Source\PSoC4/ADC_SAR.c **** *
 583:Generated_Source\PSoC4/ADC_SAR.c **** * Summary:
 584:Generated_Source\PSoC4/ADC_SAR.c **** *  Sets the low limit parameter for a limit condition.
 585:Generated_Source\PSoC4/ADC_SAR.c **** *
 586:Generated_Source\PSoC4/ADC_SAR.c **** * Parameters:
 587:Generated_Source\PSoC4/ADC_SAR.c **** *  lowLimit: The low limit for a limit condition.
 588:Generated_Source\PSoC4/ADC_SAR.c **** *
 589:Generated_Source\PSoC4/ADC_SAR.c **** * Return:
 590:Generated_Source\PSoC4/ADC_SAR.c **** *  None.
 591:Generated_Source\PSoC4/ADC_SAR.c **** *
 592:Generated_Source\PSoC4/ADC_SAR.c **** *******************************************************************************/
 593:Generated_Source\PSoC4/ADC_SAR.c **** void ADC_SAR_SetLowLimit(uint32 lowLimit)
 594:Generated_Source\PSoC4/ADC_SAR.c **** {
 858              		.loc 1 594 0
 859              		.cfi_startproc
 860              		@ args = 0, pretend = 0, frame = 8
 861              		@ frame_needed = 1, uses_anonymous_args = 0
 862 0000 80B5     		push	{r7, lr}
 863              		.cfi_def_cfa_offset 8
 864              		.cfi_offset 7, -8
 865              		.cfi_offset 14, -4
 866 0002 82B0     		sub	sp, sp, #8
 867              		.cfi_def_cfa_offset 16
 868 0004 00AF     		add	r7, sp, #0
 869              		.cfi_def_cfa_register 7
 870 0006 7860     		str	r0, [r7, #4]
 595:Generated_Source\PSoC4/ADC_SAR.c ****     ADC_SAR_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_RANGE_LOW_MASK);
 871              		.loc 1 595 0
 872 0008 084B     		ldr	r3, .L59
 873 000a 084A     		ldr	r2, .L59
 874 000c 1268     		ldr	r2, [r2]
 875 000e 120C     		lsrs	r2, r2, #16
 876 0010 1204     		lsls	r2, r2, #16
 877 0012 1A60     		str	r2, [r3]
 596:Generated_Source\PSoC4/ADC_SAR.c ****     ADC_SAR_SAR_RANGE_THRES_REG |= lowLimit & ADC_SAR_RANGE_LOW_MASK;
 878              		.loc 1 596 0
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 27


 879 0014 054B     		ldr	r3, .L59
 880 0016 054A     		ldr	r2, .L59
 881 0018 1168     		ldr	r1, [r2]
 882 001a 7A68     		ldr	r2, [r7, #4]
 883 001c 1204     		lsls	r2, r2, #16
 884 001e 120C     		lsrs	r2, r2, #16
 885 0020 0A43     		orrs	r2, r1
 886 0022 1A60     		str	r2, [r3]
 597:Generated_Source\PSoC4/ADC_SAR.c **** }
 887              		.loc 1 597 0
 888 0024 C046     		nop
 889 0026 BD46     		mov	sp, r7
 890 0028 02B0     		add	sp, sp, #8
 891              		@ sp needed
 892 002a 80BD     		pop	{r7, pc}
 893              	.L60:
 894              		.align	2
 895              	.L59:
 896 002c 18001A40 		.word	1075445784
 897              		.cfi_endproc
 898              	.LFE10:
 899              		.size	ADC_SAR_SetLowLimit, .-ADC_SAR_SetLowLimit
 900              		.section	.text.ADC_SAR_SetHighLimit,"ax",%progbits
 901              		.align	2
 902              		.global	ADC_SAR_SetHighLimit
 903              		.code	16
 904              		.thumb_func
 905              		.type	ADC_SAR_SetHighLimit, %function
 906              	ADC_SAR_SetHighLimit:
 907              	.LFB11:
 598:Generated_Source\PSoC4/ADC_SAR.c **** 
 599:Generated_Source\PSoC4/ADC_SAR.c **** 
 600:Generated_Source\PSoC4/ADC_SAR.c **** /*******************************************************************************
 601:Generated_Source\PSoC4/ADC_SAR.c **** * Function Name: ADC_SAR_SetHighLimit
 602:Generated_Source\PSoC4/ADC_SAR.c **** ********************************************************************************
 603:Generated_Source\PSoC4/ADC_SAR.c **** *
 604:Generated_Source\PSoC4/ADC_SAR.c **** * Summary:
 605:Generated_Source\PSoC4/ADC_SAR.c **** *  Sets the low limit parameter for a limit condition.
 606:Generated_Source\PSoC4/ADC_SAR.c **** *
 607:Generated_Source\PSoC4/ADC_SAR.c **** * Parameters:
 608:Generated_Source\PSoC4/ADC_SAR.c **** *  highLimit: The high limit for a limit condition.
 609:Generated_Source\PSoC4/ADC_SAR.c **** *
 610:Generated_Source\PSoC4/ADC_SAR.c **** * Return:
 611:Generated_Source\PSoC4/ADC_SAR.c **** *  None.
 612:Generated_Source\PSoC4/ADC_SAR.c **** *
 613:Generated_Source\PSoC4/ADC_SAR.c **** *******************************************************************************/
 614:Generated_Source\PSoC4/ADC_SAR.c **** void ADC_SAR_SetHighLimit(uint32 highLimit)
 615:Generated_Source\PSoC4/ADC_SAR.c **** {
 908              		.loc 1 615 0
 909              		.cfi_startproc
 910              		@ args = 0, pretend = 0, frame = 8
 911              		@ frame_needed = 1, uses_anonymous_args = 0
 912 0000 80B5     		push	{r7, lr}
 913              		.cfi_def_cfa_offset 8
 914              		.cfi_offset 7, -8
 915              		.cfi_offset 14, -4
 916 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 28


 917              		.cfi_def_cfa_offset 16
 918 0004 00AF     		add	r7, sp, #0
 919              		.cfi_def_cfa_register 7
 920 0006 7860     		str	r0, [r7, #4]
 616:Generated_Source\PSoC4/ADC_SAR.c ****     ADC_SAR_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_RANGE_HIGH_MASK);
 921              		.loc 1 616 0
 922 0008 084B     		ldr	r3, .L62
 923 000a 084A     		ldr	r2, .L62
 924 000c 1268     		ldr	r2, [r2]
 925 000e 1204     		lsls	r2, r2, #16
 926 0010 120C     		lsrs	r2, r2, #16
 927 0012 1A60     		str	r2, [r3]
 617:Generated_Source\PSoC4/ADC_SAR.c ****     ADC_SAR_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_SAR_RANGE_HIGH_OFFSET);
 928              		.loc 1 617 0
 929 0014 054B     		ldr	r3, .L62
 930 0016 054A     		ldr	r2, .L62
 931 0018 1168     		ldr	r1, [r2]
 932 001a 7A68     		ldr	r2, [r7, #4]
 933 001c 1204     		lsls	r2, r2, #16
 934 001e 0A43     		orrs	r2, r1
 935 0020 1A60     		str	r2, [r3]
 618:Generated_Source\PSoC4/ADC_SAR.c **** }
 936              		.loc 1 618 0
 937 0022 C046     		nop
 938 0024 BD46     		mov	sp, r7
 939 0026 02B0     		add	sp, sp, #8
 940              		@ sp needed
 941 0028 80BD     		pop	{r7, pc}
 942              	.L63:
 943 002a C046     		.align	2
 944              	.L62:
 945 002c 18001A40 		.word	1075445784
 946              		.cfi_endproc
 947              	.LFE11:
 948              		.size	ADC_SAR_SetHighLimit, .-ADC_SAR_SetHighLimit
 949              		.section	.text.ADC_SAR_SetLimitMask,"ax",%progbits
 950              		.align	2
 951              		.global	ADC_SAR_SetLimitMask
 952              		.code	16
 953              		.thumb_func
 954              		.type	ADC_SAR_SetLimitMask, %function
 955              	ADC_SAR_SetLimitMask:
 956              	.LFB12:
 619:Generated_Source\PSoC4/ADC_SAR.c **** 
 620:Generated_Source\PSoC4/ADC_SAR.c **** 
 621:Generated_Source\PSoC4/ADC_SAR.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/ADC_SAR.c **** * Function Name: ADC_SAR_SetLimitMask
 623:Generated_Source\PSoC4/ADC_SAR.c **** ********************************************************************************
 624:Generated_Source\PSoC4/ADC_SAR.c **** *
 625:Generated_Source\PSoC4/ADC_SAR.c **** * Summary:
 626:Generated_Source\PSoC4/ADC_SAR.c **** *  Sets the channel limit condition mask.
 627:Generated_Source\PSoC4/ADC_SAR.c **** *
 628:Generated_Source\PSoC4/ADC_SAR.c **** * Parameters:
 629:Generated_Source\PSoC4/ADC_SAR.c **** *  mask: Sets which channels that may cause a
 630:Generated_Source\PSoC4/ADC_SAR.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:Generated_Source\PSoC4/ADC_SAR.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:Generated_Source\PSoC4/ADC_SAR.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 29


 633:Generated_Source\PSoC4/ADC_SAR.c **** *
 634:Generated_Source\PSoC4/ADC_SAR.c **** * Return:
 635:Generated_Source\PSoC4/ADC_SAR.c **** *  None.
 636:Generated_Source\PSoC4/ADC_SAR.c **** *
 637:Generated_Source\PSoC4/ADC_SAR.c **** *******************************************************************************/
 638:Generated_Source\PSoC4/ADC_SAR.c **** void ADC_SAR_SetLimitMask(uint32 mask)
 639:Generated_Source\PSoC4/ADC_SAR.c **** {
 957              		.loc 1 639 0
 958              		.cfi_startproc
 959              		@ args = 0, pretend = 0, frame = 8
 960              		@ frame_needed = 1, uses_anonymous_args = 0
 961 0000 80B5     		push	{r7, lr}
 962              		.cfi_def_cfa_offset 8
 963              		.cfi_offset 7, -8
 964              		.cfi_offset 14, -4
 965 0002 82B0     		sub	sp, sp, #8
 966              		.cfi_def_cfa_offset 16
 967 0004 00AF     		add	r7, sp, #0
 968              		.cfi_def_cfa_register 7
 969 0006 7860     		str	r0, [r7, #4]
 640:Generated_Source\PSoC4/ADC_SAR.c ****     ADC_SAR_SAR_RANGE_INTR_MASK_REG = mask & ADC_SAR_MAX_CHANNELS_EN_MASK;
 970              		.loc 1 640 0
 971 0008 044B     		ldr	r3, .L65
 972 000a 7A68     		ldr	r2, [r7, #4]
 973 000c 0121     		movs	r1, #1
 974 000e 0A40     		ands	r2, r1
 975 0010 1A60     		str	r2, [r3]
 641:Generated_Source\PSoC4/ADC_SAR.c **** }
 976              		.loc 1 641 0
 977 0012 C046     		nop
 978 0014 BD46     		mov	sp, r7
 979 0016 02B0     		add	sp, sp, #8
 980              		@ sp needed
 981 0018 80BD     		pop	{r7, pc}
 982              	.L66:
 983 001a C046     		.align	2
 984              	.L65:
 985 001c 38021A40 		.word	1075446328
 986              		.cfi_endproc
 987              	.LFE12:
 988              		.size	ADC_SAR_SetLimitMask, .-ADC_SAR_SetLimitMask
 989              		.section	.text.ADC_SAR_SetSatMask,"ax",%progbits
 990              		.align	2
 991              		.global	ADC_SAR_SetSatMask
 992              		.code	16
 993              		.thumb_func
 994              		.type	ADC_SAR_SetSatMask, %function
 995              	ADC_SAR_SetSatMask:
 996              	.LFB13:
 642:Generated_Source\PSoC4/ADC_SAR.c **** 
 643:Generated_Source\PSoC4/ADC_SAR.c **** 
 644:Generated_Source\PSoC4/ADC_SAR.c **** /*******************************************************************************
 645:Generated_Source\PSoC4/ADC_SAR.c **** * Function Name: ADC_SAR_SetSatMask
 646:Generated_Source\PSoC4/ADC_SAR.c **** ********************************************************************************
 647:Generated_Source\PSoC4/ADC_SAR.c **** *
 648:Generated_Source\PSoC4/ADC_SAR.c **** * Summary:
 649:Generated_Source\PSoC4/ADC_SAR.c **** *  Sets the channel saturation event mask.
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 30


 650:Generated_Source\PSoC4/ADC_SAR.c **** *
 651:Generated_Source\PSoC4/ADC_SAR.c **** * Parameters:
 652:Generated_Source\PSoC4/ADC_SAR.c **** *  mask: Sets which channels that may cause a
 653:Generated_Source\PSoC4/ADC_SAR.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:Generated_Source\PSoC4/ADC_SAR.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:Generated_Source\PSoC4/ADC_SAR.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:Generated_Source\PSoC4/ADC_SAR.c **** *
 657:Generated_Source\PSoC4/ADC_SAR.c **** * Return:
 658:Generated_Source\PSoC4/ADC_SAR.c **** *  None.
 659:Generated_Source\PSoC4/ADC_SAR.c **** *
 660:Generated_Source\PSoC4/ADC_SAR.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/ADC_SAR.c **** void ADC_SAR_SetSatMask(uint32 mask)
 662:Generated_Source\PSoC4/ADC_SAR.c **** {
 997              		.loc 1 662 0
 998              		.cfi_startproc
 999              		@ args = 0, pretend = 0, frame = 8
 1000              		@ frame_needed = 1, uses_anonymous_args = 0
 1001 0000 80B5     		push	{r7, lr}
 1002              		.cfi_def_cfa_offset 8
 1003              		.cfi_offset 7, -8
 1004              		.cfi_offset 14, -4
 1005 0002 82B0     		sub	sp, sp, #8
 1006              		.cfi_def_cfa_offset 16
 1007 0004 00AF     		add	r7, sp, #0
 1008              		.cfi_def_cfa_register 7
 1009 0006 7860     		str	r0, [r7, #4]
 663:Generated_Source\PSoC4/ADC_SAR.c ****     ADC_SAR_SAR_SATURATE_INTR_MASK_REG = mask & ADC_SAR_MAX_CHANNELS_EN_MASK;
 1010              		.loc 1 663 0
 1011 0008 044B     		ldr	r3, .L68
 1012 000a 7A68     		ldr	r2, [r7, #4]
 1013 000c 0121     		movs	r1, #1
 1014 000e 0A40     		ands	r2, r1
 1015 0010 1A60     		str	r2, [r3]
 664:Generated_Source\PSoC4/ADC_SAR.c **** }
 1016              		.loc 1 664 0
 1017 0012 C046     		nop
 1018 0014 BD46     		mov	sp, r7
 1019 0016 02B0     		add	sp, sp, #8
 1020              		@ sp needed
 1021 0018 80BD     		pop	{r7, pc}
 1022              	.L69:
 1023 001a C046     		.align	2
 1024              	.L68:
 1025 001c 28021A40 		.word	1075446312
 1026              		.cfi_endproc
 1027              	.LFE13:
 1028              		.size	ADC_SAR_SetSatMask, .-ADC_SAR_SetSatMask
 1029              		.section	.text.ADC_SAR_SetOffset,"ax",%progbits
 1030              		.align	2
 1031              		.global	ADC_SAR_SetOffset
 1032              		.code	16
 1033              		.thumb_func
 1034              		.type	ADC_SAR_SetOffset, %function
 1035              	ADC_SAR_SetOffset:
 1036              	.LFB14:
 665:Generated_Source\PSoC4/ADC_SAR.c **** 
 666:Generated_Source\PSoC4/ADC_SAR.c **** 
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 31


 667:Generated_Source\PSoC4/ADC_SAR.c **** /*******************************************************************************
 668:Generated_Source\PSoC4/ADC_SAR.c **** * Function Name: ADC_SAR_SetOffset
 669:Generated_Source\PSoC4/ADC_SAR.c **** ********************************************************************************
 670:Generated_Source\PSoC4/ADC_SAR.c **** *
 671:Generated_Source\PSoC4/ADC_SAR.c **** * Summary:
 672:Generated_Source\PSoC4/ADC_SAR.c **** *   Description: Sets the ADC offset which is used by the functions
 673:Generated_Source\PSoC4/ADC_SAR.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:Generated_Source\PSoC4/ADC_SAR.c **** *   to substract the offset from the given reading
 675:Generated_Source\PSoC4/ADC_SAR.c **** *   before calculating the voltage conversion.
 676:Generated_Source\PSoC4/ADC_SAR.c **** *
 677:Generated_Source\PSoC4/ADC_SAR.c **** * Parameters:
 678:Generated_Source\PSoC4/ADC_SAR.c **** *  chan: ADC channel number.
 679:Generated_Source\PSoC4/ADC_SAR.c **** *  offset: This value is a measured value when the
 680:Generated_Source\PSoC4/ADC_SAR.c **** *          inputs are shorted or connected to the same input voltage.
 681:Generated_Source\PSoC4/ADC_SAR.c **** *
 682:Generated_Source\PSoC4/ADC_SAR.c **** * Return:
 683:Generated_Source\PSoC4/ADC_SAR.c **** *  None.
 684:Generated_Source\PSoC4/ADC_SAR.c **** *
 685:Generated_Source\PSoC4/ADC_SAR.c **** * Global variables:
 686:Generated_Source\PSoC4/ADC_SAR.c **** *  ADC_SAR_Offset:  Modified to set the user provided offset.
 687:Generated_Source\PSoC4/ADC_SAR.c **** *
 688:Generated_Source\PSoC4/ADC_SAR.c **** *******************************************************************************/
 689:Generated_Source\PSoC4/ADC_SAR.c **** void ADC_SAR_SetOffset(uint32 chan, int16 offset)
 690:Generated_Source\PSoC4/ADC_SAR.c **** {
 1037              		.loc 1 690 0
 1038              		.cfi_startproc
 1039              		@ args = 0, pretend = 0, frame = 8
 1040              		@ frame_needed = 1, uses_anonymous_args = 0
 1041 0000 80B5     		push	{r7, lr}
 1042              		.cfi_def_cfa_offset 8
 1043              		.cfi_offset 7, -8
 1044              		.cfi_offset 14, -4
 1045 0002 82B0     		sub	sp, sp, #8
 1046              		.cfi_def_cfa_offset 16
 1047 0004 00AF     		add	r7, sp, #0
 1048              		.cfi_def_cfa_register 7
 1049 0006 7860     		str	r0, [r7, #4]
 1050 0008 0A00     		movs	r2, r1
 1051 000a BB1C     		adds	r3, r7, #2
 1052 000c 1A80     		strh	r2, [r3]
 691:Generated_Source\PSoC4/ADC_SAR.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:Generated_Source\PSoC4/ADC_SAR.c ****     CYASSERT(chan < ADC_SAR_TOTAL_CHANNELS_NUM);
 1053              		.loc 1 692 0
 1054 000e 7B68     		ldr	r3, [r7, #4]
 1055 0010 012B     		cmp	r3, #1
 1056 0012 02D9     		bls	.L71
 1057              		.loc 1 692 0 is_stmt 0 discriminator 1
 1058 0014 0020     		movs	r0, #0
 1059 0016 FFF7FEFF 		bl	CyHalt
 1060              	.L71:
 693:Generated_Source\PSoC4/ADC_SAR.c **** 
 694:Generated_Source\PSoC4/ADC_SAR.c ****     ADC_SAR_offset[chan] = offset;
 1061              		.loc 1 694 0 is_stmt 1
 1062 001a 054B     		ldr	r3, .L72
 1063 001c 7A68     		ldr	r2, [r7, #4]
 1064 001e 5200     		lsls	r2, r2, #1
 1065 0020 B91C     		adds	r1, r7, #2
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 32


 1066 0022 0988     		ldrh	r1, [r1]
 1067 0024 D152     		strh	r1, [r2, r3]
 695:Generated_Source\PSoC4/ADC_SAR.c **** }
 1068              		.loc 1 695 0
 1069 0026 C046     		nop
 1070 0028 BD46     		mov	sp, r7
 1071 002a 02B0     		add	sp, sp, #8
 1072              		@ sp needed
 1073 002c 80BD     		pop	{r7, pc}
 1074              	.L73:
 1075 002e C046     		.align	2
 1076              	.L72:
 1077 0030 00000000 		.word	ADC_SAR_offset
 1078              		.cfi_endproc
 1079              	.LFE14:
 1080              		.size	ADC_SAR_SetOffset, .-ADC_SAR_SetOffset
 1081              		.section	.text.ADC_SAR_SetGain,"ax",%progbits
 1082              		.align	2
 1083              		.global	ADC_SAR_SetGain
 1084              		.code	16
 1085              		.thumb_func
 1086              		.type	ADC_SAR_SetGain, %function
 1087              	ADC_SAR_SetGain:
 1088              	.LFB15:
 696:Generated_Source\PSoC4/ADC_SAR.c **** 
 697:Generated_Source\PSoC4/ADC_SAR.c **** 
 698:Generated_Source\PSoC4/ADC_SAR.c **** /*******************************************************************************
 699:Generated_Source\PSoC4/ADC_SAR.c **** * Function Name: ADC_SAR_SetGain
 700:Generated_Source\PSoC4/ADC_SAR.c **** ********************************************************************************
 701:Generated_Source\PSoC4/ADC_SAR.c **** *
 702:Generated_Source\PSoC4/ADC_SAR.c **** * Summary:
 703:Generated_Source\PSoC4/ADC_SAR.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:Generated_Source\PSoC4/ADC_SAR.c **** *  conversion functions below. This value is set by default by the
 705:Generated_Source\PSoC4/ADC_SAR.c **** *  reference and input range settings. It should only be used to further
 706:Generated_Source\PSoC4/ADC_SAR.c **** *  calibrate the ADC with a known input or if an external reference is
 707:Generated_Source\PSoC4/ADC_SAR.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:Generated_Source\PSoC4/ADC_SAR.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:Generated_Source\PSoC4/ADC_SAR.c **** *  conversion between ADC counts and voltage.
 710:Generated_Source\PSoC4/ADC_SAR.c **** *
 711:Generated_Source\PSoC4/ADC_SAR.c **** * Parameters:
 712:Generated_Source\PSoC4/ADC_SAR.c **** *  chan: ADC channel number.
 713:Generated_Source\PSoC4/ADC_SAR.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:Generated_Source\PSoC4/ADC_SAR.c **** *
 715:Generated_Source\PSoC4/ADC_SAR.c **** * Return:
 716:Generated_Source\PSoC4/ADC_SAR.c **** *  None.
 717:Generated_Source\PSoC4/ADC_SAR.c **** *
 718:Generated_Source\PSoC4/ADC_SAR.c **** * Global variables:
 719:Generated_Source\PSoC4/ADC_SAR.c **** *  ADC_SAR_CountsPer10Volt:  modified to set the ADC gain in counts
 720:Generated_Source\PSoC4/ADC_SAR.c **** *   per 10 volt.
 721:Generated_Source\PSoC4/ADC_SAR.c **** *
 722:Generated_Source\PSoC4/ADC_SAR.c **** *******************************************************************************/
 723:Generated_Source\PSoC4/ADC_SAR.c **** void ADC_SAR_SetGain(uint32 chan, int32 adcGain)
 724:Generated_Source\PSoC4/ADC_SAR.c **** {
 1089              		.loc 1 724 0
 1090              		.cfi_startproc
 1091              		@ args = 0, pretend = 0, frame = 8
 1092              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 33


 1093 0000 80B5     		push	{r7, lr}
 1094              		.cfi_def_cfa_offset 8
 1095              		.cfi_offset 7, -8
 1096              		.cfi_offset 14, -4
 1097 0002 82B0     		sub	sp, sp, #8
 1098              		.cfi_def_cfa_offset 16
 1099 0004 00AF     		add	r7, sp, #0
 1100              		.cfi_def_cfa_register 7
 1101 0006 7860     		str	r0, [r7, #4]
 1102 0008 3960     		str	r1, [r7]
 725:Generated_Source\PSoC4/ADC_SAR.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:Generated_Source\PSoC4/ADC_SAR.c ****     CYASSERT(chan < ADC_SAR_TOTAL_CHANNELS_NUM);
 1103              		.loc 1 726 0
 1104 000a 7B68     		ldr	r3, [r7, #4]
 1105 000c 012B     		cmp	r3, #1
 1106 000e 02D9     		bls	.L75
 1107              		.loc 1 726 0 is_stmt 0 discriminator 1
 1108 0010 0020     		movs	r0, #0
 1109 0012 FFF7FEFF 		bl	CyHalt
 1110              	.L75:
 727:Generated_Source\PSoC4/ADC_SAR.c **** 
 728:Generated_Source\PSoC4/ADC_SAR.c ****     ADC_SAR_countsPer10Volt[chan] = adcGain;
 1111              		.loc 1 728 0 is_stmt 1
 1112 0016 044B     		ldr	r3, .L76
 1113 0018 7A68     		ldr	r2, [r7, #4]
 1114 001a 9200     		lsls	r2, r2, #2
 1115 001c 3968     		ldr	r1, [r7]
 1116 001e D150     		str	r1, [r2, r3]
 729:Generated_Source\PSoC4/ADC_SAR.c **** }
 1117              		.loc 1 729 0
 1118 0020 C046     		nop
 1119 0022 BD46     		mov	sp, r7
 1120 0024 02B0     		add	sp, sp, #8
 1121              		@ sp needed
 1122 0026 80BD     		pop	{r7, pc}
 1123              	.L77:
 1124              		.align	2
 1125              	.L76:
 1126 0028 00000000 		.word	ADC_SAR_countsPer10Volt
 1127              		.cfi_endproc
 1128              	.LFE15:
 1129              		.size	ADC_SAR_SetGain, .-ADC_SAR_SetGain
 1130              		.section	.text.ADC_SAR_CountsTo_mVolts,"ax",%progbits
 1131              		.align	2
 1132              		.global	ADC_SAR_CountsTo_mVolts
 1133              		.code	16
 1134              		.thumb_func
 1135              		.type	ADC_SAR_CountsTo_mVolts, %function
 1136              	ADC_SAR_CountsTo_mVolts:
 1137              	.LFB16:
 730:Generated_Source\PSoC4/ADC_SAR.c **** 
 731:Generated_Source\PSoC4/ADC_SAR.c **** 
 732:Generated_Source\PSoC4/ADC_SAR.c **** #if(ADC_SAR_DEFAULT_JUSTIFICATION_SEL == ADC_SAR__RIGHT)
 733:Generated_Source\PSoC4/ADC_SAR.c **** 
 734:Generated_Source\PSoC4/ADC_SAR.c **** 
 735:Generated_Source\PSoC4/ADC_SAR.c ****     /*******************************************************************************
 736:Generated_Source\PSoC4/ADC_SAR.c ****     * Function Name: ADC_SAR_CountsTo_mVolts
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 34


 737:Generated_Source\PSoC4/ADC_SAR.c ****     ********************************************************************************
 738:Generated_Source\PSoC4/ADC_SAR.c ****     *
 739:Generated_Source\PSoC4/ADC_SAR.c ****     * Summary:
 740:Generated_Source\PSoC4/ADC_SAR.c ****     *  This function converts ADC counts to mVolts
 741:Generated_Source\PSoC4/ADC_SAR.c ****     *  This function is not available when left data format justification selected.
 742:Generated_Source\PSoC4/ADC_SAR.c ****     *
 743:Generated_Source\PSoC4/ADC_SAR.c ****     * Parameters:
 744:Generated_Source\PSoC4/ADC_SAR.c ****     *  chan: The ADC channel number.
 745:Generated_Source\PSoC4/ADC_SAR.c ****     *  adcCounts: Result from the ADC conversion
 746:Generated_Source\PSoC4/ADC_SAR.c ****     *
 747:Generated_Source\PSoC4/ADC_SAR.c ****     * Return:
 748:Generated_Source\PSoC4/ADC_SAR.c ****     *  Results in mVolts
 749:Generated_Source\PSoC4/ADC_SAR.c ****     *
 750:Generated_Source\PSoC4/ADC_SAR.c ****     * Global variables:
 751:Generated_Source\PSoC4/ADC_SAR.c ****     *  ADC_SAR_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:Generated_Source\PSoC4/ADC_SAR.c ****     *  ADC_SAR_Offset:  Used as the offset while converting ADC counts
 753:Generated_Source\PSoC4/ADC_SAR.c ****     *   to mVolts.
 754:Generated_Source\PSoC4/ADC_SAR.c ****     *
 755:Generated_Source\PSoC4/ADC_SAR.c ****     *******************************************************************************/
 756:Generated_Source\PSoC4/ADC_SAR.c ****     int16 ADC_SAR_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:Generated_Source\PSoC4/ADC_SAR.c ****     {
 1138              		.loc 1 757 0
 1139              		.cfi_startproc
 1140              		@ args = 0, pretend = 0, frame = 16
 1141              		@ frame_needed = 1, uses_anonymous_args = 0
 1142 0000 80B5     		push	{r7, lr}
 1143              		.cfi_def_cfa_offset 8
 1144              		.cfi_offset 7, -8
 1145              		.cfi_offset 14, -4
 1146 0002 84B0     		sub	sp, sp, #16
 1147              		.cfi_def_cfa_offset 24
 1148 0004 00AF     		add	r7, sp, #0
 1149              		.cfi_def_cfa_register 7
 1150 0006 7860     		str	r0, [r7, #4]
 1151 0008 0A00     		movs	r2, r1
 1152 000a BB1C     		adds	r3, r7, #2
 1153 000c 1A80     		strh	r2, [r3]
 758:Generated_Source\PSoC4/ADC_SAR.c ****         int16 mVolts;
 759:Generated_Source\PSoC4/ADC_SAR.c **** 
 760:Generated_Source\PSoC4/ADC_SAR.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:Generated_Source\PSoC4/ADC_SAR.c ****         CYASSERT(chan < ADC_SAR_TOTAL_CHANNELS_NUM);
 1154              		.loc 1 761 0
 1155 000e 7B68     		ldr	r3, [r7, #4]
 1156 0010 012B     		cmp	r3, #1
 1157 0012 02D9     		bls	.L79
 1158              		.loc 1 761 0 is_stmt 0 discriminator 1
 1159 0014 0020     		movs	r0, #0
 1160 0016 FFF7FEFF 		bl	CyHalt
 1161              	.L79:
 762:Generated_Source\PSoC4/ADC_SAR.c **** 
 763:Generated_Source\PSoC4/ADC_SAR.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:Generated_Source\PSoC4/ADC_SAR.c ****         #if(ADC_SAR_DEFAULT_AVG_MODE == ADC_SAR__ACCUMULATE)
 765:Generated_Source\PSoC4/ADC_SAR.c ****             if((ADC_SAR_channelsConfig[chan] & ADC_SAR_AVERAGING_EN) != 0u)
 1162              		.loc 1 765 0 is_stmt 1
 1163 001a 274B     		ldr	r3, .L87
 1164 001c 7A68     		ldr	r2, [r7, #4]
 1165 001e 9200     		lsls	r2, r2, #2
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 35


 1166 0020 D258     		ldr	r2, [r2, r3]
 1167 0022 8023     		movs	r3, #128
 1168 0024 DB00     		lsls	r3, r3, #3
 1169 0026 1340     		ands	r3, r2
 1170 0028 08D0     		beq	.L80
 766:Generated_Source\PSoC4/ADC_SAR.c ****             {
 767:Generated_Source\PSoC4/ADC_SAR.c ****                 adcCounts /= ADC_SAR_DEFAULT_AVG_SAMPLES_DIV;
 1171              		.loc 1 767 0
 1172 002a BA1C     		adds	r2, r7, #2
 1173 002c BB1C     		adds	r3, r7, #2
 1174 002e 0021     		movs	r1, #0
 1175 0030 5B5E     		ldrsh	r3, [r3, r1]
 1176 0032 002B     		cmp	r3, #0
 1177 0034 00DA     		bge	.L81
 1178 0036 0F33     		adds	r3, r3, #15
 1179              	.L81:
 1180 0038 1B11     		asrs	r3, r3, #4
 1181 003a 1380     		strh	r3, [r2]
 1182              	.L80:
 768:Generated_Source\PSoC4/ADC_SAR.c ****             }
 769:Generated_Source\PSoC4/ADC_SAR.c ****         #endif /* ADC_SAR_DEFAULT_AVG_MODE == ADC_SAR__ACCUMULATE */
 770:Generated_Source\PSoC4/ADC_SAR.c **** 
 771:Generated_Source\PSoC4/ADC_SAR.c ****         /* Subtract ADC offset */
 772:Generated_Source\PSoC4/ADC_SAR.c ****         adcCounts -= ADC_SAR_offset[chan];
 1183              		.loc 1 772 0
 1184 003c 1F4B     		ldr	r3, .L87+4
 1185 003e 7A68     		ldr	r2, [r7, #4]
 1186 0040 5200     		lsls	r2, r2, #1
 1187 0042 D35A     		ldrh	r3, [r2, r3]
 1188 0044 19B2     		sxth	r1, r3
 1189 0046 BB1C     		adds	r3, r7, #2
 1190 0048 1A88     		ldrh	r2, [r3]
 1191 004a 8BB2     		uxth	r3, r1
 1192 004c D31A     		subs	r3, r2, r3
 1193 004e 9AB2     		uxth	r2, r3
 1194 0050 BB1C     		adds	r3, r7, #2
 1195 0052 1A80     		strh	r2, [r3]
 773:Generated_Source\PSoC4/ADC_SAR.c **** 
 774:Generated_Source\PSoC4/ADC_SAR.c ****         mVolts = (int16)((((int32)adcCounts * ADC_SAR_10MV_COUNTS) + ( (adcCounts > 0) ?
 1196              		.loc 1 774 0
 1197 0054 BB1C     		adds	r3, r7, #2
 1198 0056 0022     		movs	r2, #0
 1199 0058 9B5E     		ldrsh	r3, [r3, r2]
 1200 005a 194A     		ldr	r2, .L87+8
 1201 005c 5A43     		muls	r2, r3
 775:Generated_Source\PSoC4/ADC_SAR.c ****                  (ADC_SAR_countsPer10Volt[chan] / 2) : (-(ADC_SAR_countsPer10Volt[chan] / 2)) ))
 1202              		.loc 1 775 0
 1203 005e BB1C     		adds	r3, r7, #2
 1204 0060 0021     		movs	r1, #0
 1205 0062 5B5E     		ldrsh	r3, [r3, r1]
 1206 0064 002B     		cmp	r3, #0
 1207 0066 08DD     		ble	.L82
 1208              		.loc 1 775 0 is_stmt 0 discriminator 1
 1209 0068 164B     		ldr	r3, .L87+12
 1210 006a 7968     		ldr	r1, [r7, #4]
 1211 006c 8900     		lsls	r1, r1, #2
 1212 006e CB58     		ldr	r3, [r1, r3]
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 36


 1213 0070 002B     		cmp	r3, #0
 1214 0072 00DA     		bge	.L83
 1215 0074 0133     		adds	r3, r3, #1
 1216              	.L83:
 1217 0076 5B10     		asrs	r3, r3, #1
 1218 0078 08E0     		b	.L84
 1219              	.L82:
 1220              		.loc 1 775 0 discriminator 2
 1221 007a 124B     		ldr	r3, .L87+12
 1222 007c 7968     		ldr	r1, [r7, #4]
 1223 007e 8900     		lsls	r1, r1, #2
 1224 0080 CB58     		ldr	r3, [r1, r3]
 1225 0082 002B     		cmp	r3, #0
 1226 0084 00DA     		bge	.L85
 1227 0086 0133     		adds	r3, r3, #1
 1228              	.L85:
 1229 0088 5B10     		asrs	r3, r3, #1
 1230 008a 5B42     		rsbs	r3, r3, #0
 1231              	.L84:
 774:Generated_Source\PSoC4/ADC_SAR.c ****                  (ADC_SAR_countsPer10Volt[chan] / 2) : (-(ADC_SAR_countsPer10Volt[chan] / 2)) ))
 1232              		.loc 1 774 0 is_stmt 1
 1233 008c D018     		adds	r0, r2, r3
 776:Generated_Source\PSoC4/ADC_SAR.c ****                  / ADC_SAR_countsPer10Volt[chan]);
 1234              		.loc 1 776 0
 1235 008e 0D4B     		ldr	r3, .L87+12
 1236 0090 7A68     		ldr	r2, [r7, #4]
 1237 0092 9200     		lsls	r2, r2, #2
 1238 0094 D358     		ldr	r3, [r2, r3]
 1239 0096 1900     		movs	r1, r3
 1240 0098 FFF7FEFF 		bl	__aeabi_idiv
 1241 009c 0300     		movs	r3, r0
 1242 009e 1A00     		movs	r2, r3
 774:Generated_Source\PSoC4/ADC_SAR.c ****                  (ADC_SAR_countsPer10Volt[chan] / 2) : (-(ADC_SAR_countsPer10Volt[chan] / 2)) ))
 1243              		.loc 1 774 0
 1244 00a0 0E23     		movs	r3, #14
 1245 00a2 FB18     		adds	r3, r7, r3
 1246 00a4 1A80     		strh	r2, [r3]
 777:Generated_Source\PSoC4/ADC_SAR.c **** 
 778:Generated_Source\PSoC4/ADC_SAR.c ****         return( mVolts );
 1247              		.loc 1 778 0
 1248 00a6 0E23     		movs	r3, #14
 1249 00a8 FB18     		adds	r3, r7, r3
 1250 00aa 0022     		movs	r2, #0
 1251 00ac 9B5E     		ldrsh	r3, [r3, r2]
 779:Generated_Source\PSoC4/ADC_SAR.c ****     }
 1252              		.loc 1 779 0
 1253 00ae 1800     		movs	r0, r3
 1254 00b0 BD46     		mov	sp, r7
 1255 00b2 04B0     		add	sp, sp, #16
 1256              		@ sp needed
 1257 00b4 80BD     		pop	{r7, pc}
 1258              	.L88:
 1259 00b6 C046     		.align	2
 1260              	.L87:
 1261 00b8 00000000 		.word	ADC_SAR_channelsConfig
 1262 00bc 00000000 		.word	ADC_SAR_offset
 1263 00c0 10270000 		.word	10000
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 37


 1264 00c4 00000000 		.word	ADC_SAR_countsPer10Volt
 1265              		.cfi_endproc
 1266              	.LFE16:
 1267              		.size	ADC_SAR_CountsTo_mVolts, .-ADC_SAR_CountsTo_mVolts
 1268              		.global	__aeabi_lmul
 1269              		.global	__aeabi_ldivmod
 1270              		.section	.text.ADC_SAR_CountsTo_uVolts,"ax",%progbits
 1271              		.align	2
 1272              		.global	ADC_SAR_CountsTo_uVolts
 1273              		.code	16
 1274              		.thumb_func
 1275              		.type	ADC_SAR_CountsTo_uVolts, %function
 1276              	ADC_SAR_CountsTo_uVolts:
 1277              	.LFB17:
 780:Generated_Source\PSoC4/ADC_SAR.c **** 
 781:Generated_Source\PSoC4/ADC_SAR.c **** 
 782:Generated_Source\PSoC4/ADC_SAR.c ****     /*******************************************************************************
 783:Generated_Source\PSoC4/ADC_SAR.c ****     * Function Name: ADC_SAR_CountsTo_uVolts
 784:Generated_Source\PSoC4/ADC_SAR.c ****     ********************************************************************************
 785:Generated_Source\PSoC4/ADC_SAR.c ****     *
 786:Generated_Source\PSoC4/ADC_SAR.c ****     * Summary:
 787:Generated_Source\PSoC4/ADC_SAR.c ****     *  This function converts ADC counts to micro Volts
 788:Generated_Source\PSoC4/ADC_SAR.c ****     *  This function is not available when left data format justification selected.
 789:Generated_Source\PSoC4/ADC_SAR.c ****     *
 790:Generated_Source\PSoC4/ADC_SAR.c ****     * Parameters:
 791:Generated_Source\PSoC4/ADC_SAR.c ****     *  chan: The ADC channel number.
 792:Generated_Source\PSoC4/ADC_SAR.c ****     *  adcCounts: Result from the ADC conversion
 793:Generated_Source\PSoC4/ADC_SAR.c ****     *
 794:Generated_Source\PSoC4/ADC_SAR.c ****     * Return:
 795:Generated_Source\PSoC4/ADC_SAR.c ****     *  Results in uVolts
 796:Generated_Source\PSoC4/ADC_SAR.c ****     *
 797:Generated_Source\PSoC4/ADC_SAR.c ****     * Global variables:
 798:Generated_Source\PSoC4/ADC_SAR.c ****     *  ADC_SAR_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:Generated_Source\PSoC4/ADC_SAR.c ****     *  ADC_SAR_Offset:  Used as the offset while converting ADC counts
 800:Generated_Source\PSoC4/ADC_SAR.c ****     *   to mVolts.
 801:Generated_Source\PSoC4/ADC_SAR.c ****     *
 802:Generated_Source\PSoC4/ADC_SAR.c ****     * Theory:
 803:Generated_Source\PSoC4/ADC_SAR.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:Generated_Source\PSoC4/ADC_SAR.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:Generated_Source\PSoC4/ADC_SAR.c ****     *  resolution.
 806:Generated_Source\PSoC4/ADC_SAR.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:Generated_Source\PSoC4/ADC_SAR.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:Generated_Source\PSoC4/ADC_SAR.c ****     *
 809:Generated_Source\PSoC4/ADC_SAR.c ****     *******************************************************************************/
 810:Generated_Source\PSoC4/ADC_SAR.c ****     int32 ADC_SAR_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:Generated_Source\PSoC4/ADC_SAR.c ****     {
 1278              		.loc 1 811 0
 1279              		.cfi_startproc
 1280              		@ args = 0, pretend = 0, frame = 24
 1281              		@ frame_needed = 1, uses_anonymous_args = 0
 1282 0000 B0B5     		push	{r4, r5, r7, lr}
 1283              		.cfi_def_cfa_offset 16
 1284              		.cfi_offset 4, -16
 1285              		.cfi_offset 5, -12
 1286              		.cfi_offset 7, -8
 1287              		.cfi_offset 14, -4
 1288 0002 86B0     		sub	sp, sp, #24
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 38


 1289              		.cfi_def_cfa_offset 40
 1290 0004 00AF     		add	r7, sp, #0
 1291              		.cfi_def_cfa_register 7
 1292 0006 F860     		str	r0, [r7, #12]
 1293 0008 0A00     		movs	r2, r1
 1294 000a 0A23     		movs	r3, #10
 1295 000c FB18     		adds	r3, r7, r3
 1296 000e 1A80     		strh	r2, [r3]
 812:Generated_Source\PSoC4/ADC_SAR.c ****         int64 uVolts;
 813:Generated_Source\PSoC4/ADC_SAR.c **** 
 814:Generated_Source\PSoC4/ADC_SAR.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:Generated_Source\PSoC4/ADC_SAR.c ****         CYASSERT(chan < ADC_SAR_TOTAL_CHANNELS_NUM);
 1297              		.loc 1 815 0
 1298 0010 FB68     		ldr	r3, [r7, #12]
 1299 0012 012B     		cmp	r3, #1
 1300 0014 02D9     		bls	.L90
 1301              		.loc 1 815 0 is_stmt 0 discriminator 1
 1302 0016 0020     		movs	r0, #0
 1303 0018 FFF7FEFF 		bl	CyHalt
 1304              	.L90:
 816:Generated_Source\PSoC4/ADC_SAR.c **** 
 817:Generated_Source\PSoC4/ADC_SAR.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:Generated_Source\PSoC4/ADC_SAR.c ****         #if(ADC_SAR_DEFAULT_AVG_MODE == ADC_SAR__ACCUMULATE)
 819:Generated_Source\PSoC4/ADC_SAR.c ****             if((ADC_SAR_channelsConfig[chan] & ADC_SAR_AVERAGING_EN) != 0u)
 1305              		.loc 1 819 0 is_stmt 1
 1306 001c 224B     		ldr	r3, .L94
 1307 001e FA68     		ldr	r2, [r7, #12]
 1308 0020 9200     		lsls	r2, r2, #2
 1309 0022 D258     		ldr	r2, [r2, r3]
 1310 0024 8023     		movs	r3, #128
 1311 0026 DB00     		lsls	r3, r3, #3
 1312 0028 1340     		ands	r3, r2
 1313 002a 0AD0     		beq	.L91
 820:Generated_Source\PSoC4/ADC_SAR.c ****             {
 821:Generated_Source\PSoC4/ADC_SAR.c ****                 adcCounts /= ADC_SAR_DEFAULT_AVG_SAMPLES_DIV;
 1314              		.loc 1 821 0
 1315 002c 0A23     		movs	r3, #10
 1316 002e FA18     		adds	r2, r7, r3
 1317 0030 0A23     		movs	r3, #10
 1318 0032 FB18     		adds	r3, r7, r3
 1319 0034 0021     		movs	r1, #0
 1320 0036 5B5E     		ldrsh	r3, [r3, r1]
 1321 0038 002B     		cmp	r3, #0
 1322 003a 00DA     		bge	.L92
 1323 003c 0F33     		adds	r3, r3, #15
 1324              	.L92:
 1325 003e 1B11     		asrs	r3, r3, #4
 1326 0040 1380     		strh	r3, [r2]
 1327              	.L91:
 822:Generated_Source\PSoC4/ADC_SAR.c ****             }
 823:Generated_Source\PSoC4/ADC_SAR.c ****         #endif /* ADC_SAR_DEFAULT_AVG_MODE == ADC_SAR__ACCUMULATE */
 824:Generated_Source\PSoC4/ADC_SAR.c **** 
 825:Generated_Source\PSoC4/ADC_SAR.c ****         /* Subtract ADC offset */
 826:Generated_Source\PSoC4/ADC_SAR.c ****         adcCounts -= ADC_SAR_offset[chan];
 1328              		.loc 1 826 0
 1329 0042 1A4B     		ldr	r3, .L94+4
 1330 0044 FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 39


 1331 0046 5200     		lsls	r2, r2, #1
 1332 0048 D35A     		ldrh	r3, [r2, r3]
 1333 004a 19B2     		sxth	r1, r3
 1334 004c 0A23     		movs	r3, #10
 1335 004e FB18     		adds	r3, r7, r3
 1336 0050 1A88     		ldrh	r2, [r3]
 1337 0052 8BB2     		uxth	r3, r1
 1338 0054 D31A     		subs	r3, r2, r3
 1339 0056 9AB2     		uxth	r2, r3
 1340 0058 0A23     		movs	r3, #10
 1341 005a FB18     		adds	r3, r7, r3
 1342 005c 1A80     		strh	r2, [r3]
 827:Generated_Source\PSoC4/ADC_SAR.c **** 
 828:Generated_Source\PSoC4/ADC_SAR.c ****         uVolts = ((int64)adcCounts * ADC_SAR_10UV_COUNTS) / ADC_SAR_countsPer10Volt[chan];
 1343              		.loc 1 828 0
 1344 005e 0A23     		movs	r3, #10
 1345 0060 FB18     		adds	r3, r7, r3
 1346 0062 1B88     		ldrh	r3, [r3]
 1347 0064 1BB2     		sxth	r3, r3
 1348 0066 3B60     		str	r3, [r7]
 1349 0068 DB17     		asrs	r3, r3, #31
 1350 006a 7B60     		str	r3, [r7, #4]
 1351 006c 104A     		ldr	r2, .L94+8
 1352 006e 0023     		movs	r3, #0
 1353 0070 3868     		ldr	r0, [r7]
 1354 0072 7968     		ldr	r1, [r7, #4]
 1355 0074 FFF7FEFF 		bl	__aeabi_lmul
 1356 0078 0200     		movs	r2, r0
 1357 007a 0B00     		movs	r3, r1
 1358 007c 1000     		movs	r0, r2
 1359 007e 1900     		movs	r1, r3
 1360 0080 0C4B     		ldr	r3, .L94+12
 1361 0082 FA68     		ldr	r2, [r7, #12]
 1362 0084 9200     		lsls	r2, r2, #2
 1363 0086 D358     		ldr	r3, [r2, r3]
 1364 0088 1C00     		movs	r4, r3
 1365 008a DB17     		asrs	r3, r3, #31
 1366 008c 1D00     		movs	r5, r3
 1367 008e 2200     		movs	r2, r4
 1368 0090 2B00     		movs	r3, r5
 1369 0092 FFF7FEFF 		bl	__aeabi_ldivmod
 1370 0096 0300     		movs	r3, r0
 1371 0098 0C00     		movs	r4, r1
 1372 009a 3B61     		str	r3, [r7, #16]
 1373 009c 7C61     		str	r4, [r7, #20]
 829:Generated_Source\PSoC4/ADC_SAR.c **** 
 830:Generated_Source\PSoC4/ADC_SAR.c ****         return( (int32)uVolts );
 1374              		.loc 1 830 0
 1375 009e 3B69     		ldr	r3, [r7, #16]
 831:Generated_Source\PSoC4/ADC_SAR.c ****     }
 1376              		.loc 1 831 0
 1377 00a0 1800     		movs	r0, r3
 1378 00a2 BD46     		mov	sp, r7
 1379 00a4 06B0     		add	sp, sp, #24
 1380              		@ sp needed
 1381 00a6 B0BD     		pop	{r4, r5, r7, pc}
 1382              	.L95:
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 40


 1383              		.align	2
 1384              	.L94:
 1385 00a8 00000000 		.word	ADC_SAR_channelsConfig
 1386 00ac 00000000 		.word	ADC_SAR_offset
 1387 00b0 80969800 		.word	10000000
 1388 00b4 00000000 		.word	ADC_SAR_countsPer10Volt
 1389              		.cfi_endproc
 1390              	.LFE17:
 1391              		.size	ADC_SAR_CountsTo_uVolts, .-ADC_SAR_CountsTo_uVolts
 1392              		.global	__aeabi_i2f
 1393              		.global	__aeabi_fmul
 1394              		.global	__aeabi_fdiv
 1395              		.section	.text.ADC_SAR_CountsTo_Volts,"ax",%progbits
 1396              		.align	2
 1397              		.global	ADC_SAR_CountsTo_Volts
 1398              		.code	16
 1399              		.thumb_func
 1400              		.type	ADC_SAR_CountsTo_Volts, %function
 1401              	ADC_SAR_CountsTo_Volts:
 1402              	.LFB18:
 832:Generated_Source\PSoC4/ADC_SAR.c **** 
 833:Generated_Source\PSoC4/ADC_SAR.c **** 
 834:Generated_Source\PSoC4/ADC_SAR.c ****     /*******************************************************************************
 835:Generated_Source\PSoC4/ADC_SAR.c ****     * Function Name: ADC_SAR_CountsTo_Volts
 836:Generated_Source\PSoC4/ADC_SAR.c ****     ********************************************************************************
 837:Generated_Source\PSoC4/ADC_SAR.c ****     *
 838:Generated_Source\PSoC4/ADC_SAR.c ****     * Summary:
 839:Generated_Source\PSoC4/ADC_SAR.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:Generated_Source\PSoC4/ADC_SAR.c ****     *  This function is not available when left data format justification selected.
 841:Generated_Source\PSoC4/ADC_SAR.c ****     *
 842:Generated_Source\PSoC4/ADC_SAR.c ****     * Parameters:
 843:Generated_Source\PSoC4/ADC_SAR.c ****     *  chan: The ADC channel number.
 844:Generated_Source\PSoC4/ADC_SAR.c ****     *  Result from the ADC conversion
 845:Generated_Source\PSoC4/ADC_SAR.c ****     *
 846:Generated_Source\PSoC4/ADC_SAR.c ****     * Return:
 847:Generated_Source\PSoC4/ADC_SAR.c ****     *  Results in Volts
 848:Generated_Source\PSoC4/ADC_SAR.c ****     *
 849:Generated_Source\PSoC4/ADC_SAR.c ****     * Global variables:
 850:Generated_Source\PSoC4/ADC_SAR.c ****     *  ADC_SAR_countsPer10Volt:  used to convert ADC counts to Volts.
 851:Generated_Source\PSoC4/ADC_SAR.c ****     *  ADC_SAR_Offset:  Used as the offset while converting ADC counts
 852:Generated_Source\PSoC4/ADC_SAR.c ****     *   to mVolts.
 853:Generated_Source\PSoC4/ADC_SAR.c ****     *
 854:Generated_Source\PSoC4/ADC_SAR.c ****     *******************************************************************************/
 855:Generated_Source\PSoC4/ADC_SAR.c ****     float32 ADC_SAR_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:Generated_Source\PSoC4/ADC_SAR.c ****     {
 1403              		.loc 1 856 0
 1404              		.cfi_startproc
 1405              		@ args = 0, pretend = 0, frame = 16
 1406              		@ frame_needed = 1, uses_anonymous_args = 0
 1407 0000 90B5     		push	{r4, r7, lr}
 1408              		.cfi_def_cfa_offset 12
 1409              		.cfi_offset 4, -12
 1410              		.cfi_offset 7, -8
 1411              		.cfi_offset 14, -4
 1412 0002 85B0     		sub	sp, sp, #20
 1413              		.cfi_def_cfa_offset 32
 1414 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 41


 1415              		.cfi_def_cfa_register 7
 1416 0006 7860     		str	r0, [r7, #4]
 1417 0008 0A00     		movs	r2, r1
 1418 000a BB1C     		adds	r3, r7, #2
 1419 000c 1A80     		strh	r2, [r3]
 857:Generated_Source\PSoC4/ADC_SAR.c ****         float32 volts;
 858:Generated_Source\PSoC4/ADC_SAR.c **** 
 859:Generated_Source\PSoC4/ADC_SAR.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:Generated_Source\PSoC4/ADC_SAR.c ****         CYASSERT(chan < ADC_SAR_TOTAL_CHANNELS_NUM);
 1420              		.loc 1 860 0
 1421 000e 7B68     		ldr	r3, [r7, #4]
 1422 0010 012B     		cmp	r3, #1
 1423 0012 02D9     		bls	.L97
 1424              		.loc 1 860 0 is_stmt 0 discriminator 1
 1425 0014 0020     		movs	r0, #0
 1426 0016 FFF7FEFF 		bl	CyHalt
 1427              	.L97:
 861:Generated_Source\PSoC4/ADC_SAR.c **** 
 862:Generated_Source\PSoC4/ADC_SAR.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:Generated_Source\PSoC4/ADC_SAR.c ****         #if(ADC_SAR_DEFAULT_AVG_MODE == ADC_SAR__ACCUMULATE)
 864:Generated_Source\PSoC4/ADC_SAR.c ****             if((ADC_SAR_channelsConfig[chan] & ADC_SAR_AVERAGING_EN) != 0u)
 1428              		.loc 1 864 0 is_stmt 1
 1429 001a 1E4B     		ldr	r3, .L101
 1430 001c 7A68     		ldr	r2, [r7, #4]
 1431 001e 9200     		lsls	r2, r2, #2
 1432 0020 D258     		ldr	r2, [r2, r3]
 1433 0022 8023     		movs	r3, #128
 1434 0024 DB00     		lsls	r3, r3, #3
 1435 0026 1340     		ands	r3, r2
 1436 0028 08D0     		beq	.L98
 865:Generated_Source\PSoC4/ADC_SAR.c ****             {
 866:Generated_Source\PSoC4/ADC_SAR.c ****                 adcCounts /= ADC_SAR_DEFAULT_AVG_SAMPLES_DIV;
 1437              		.loc 1 866 0
 1438 002a BA1C     		adds	r2, r7, #2
 1439 002c BB1C     		adds	r3, r7, #2
 1440 002e 0021     		movs	r1, #0
 1441 0030 5B5E     		ldrsh	r3, [r3, r1]
 1442 0032 002B     		cmp	r3, #0
 1443 0034 00DA     		bge	.L99
 1444 0036 0F33     		adds	r3, r3, #15
 1445              	.L99:
 1446 0038 1B11     		asrs	r3, r3, #4
 1447 003a 1380     		strh	r3, [r2]
 1448              	.L98:
 867:Generated_Source\PSoC4/ADC_SAR.c ****             }
 868:Generated_Source\PSoC4/ADC_SAR.c ****         #endif /* ADC_SAR_DEFAULT_AVG_MODE == ADC_SAR__ACCUMULATE */
 869:Generated_Source\PSoC4/ADC_SAR.c **** 
 870:Generated_Source\PSoC4/ADC_SAR.c ****         /* Subtract ADC offset */
 871:Generated_Source\PSoC4/ADC_SAR.c ****         adcCounts -= ADC_SAR_offset[chan];
 1449              		.loc 1 871 0
 1450 003c 164B     		ldr	r3, .L101+4
 1451 003e 7A68     		ldr	r2, [r7, #4]
 1452 0040 5200     		lsls	r2, r2, #1
 1453 0042 D35A     		ldrh	r3, [r2, r3]
 1454 0044 19B2     		sxth	r1, r3
 1455 0046 BB1C     		adds	r3, r7, #2
 1456 0048 1A88     		ldrh	r2, [r3]
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 42


 1457 004a 8BB2     		uxth	r3, r1
 1458 004c D31A     		subs	r3, r2, r3
 1459 004e 9AB2     		uxth	r2, r3
 1460 0050 BB1C     		adds	r3, r7, #2
 1461 0052 1A80     		strh	r2, [r3]
 872:Generated_Source\PSoC4/ADC_SAR.c **** 
 873:Generated_Source\PSoC4/ADC_SAR.c ****         volts = ((float32)adcCounts * ADC_SAR_10V_COUNTS) / (float32)ADC_SAR_countsPer10Volt[chan];
 1462              		.loc 1 873 0
 1463 0054 BB1C     		adds	r3, r7, #2
 1464 0056 0022     		movs	r2, #0
 1465 0058 9B5E     		ldrsh	r3, [r3, r2]
 1466 005a 1800     		movs	r0, r3
 1467 005c FFF7FEFF 		bl	__aeabi_i2f
 1468 0060 031C     		adds	r3, r0, #0
 1469 0062 0E49     		ldr	r1, .L101+8
 1470 0064 181C     		adds	r0, r3, #0
 1471 0066 FFF7FEFF 		bl	__aeabi_fmul
 1472 006a 031C     		adds	r3, r0, #0
 1473 006c 1C1C     		adds	r4, r3, #0
 1474 006e 0C4B     		ldr	r3, .L101+12
 1475 0070 7A68     		ldr	r2, [r7, #4]
 1476 0072 9200     		lsls	r2, r2, #2
 1477 0074 D358     		ldr	r3, [r2, r3]
 1478 0076 1800     		movs	r0, r3
 1479 0078 FFF7FEFF 		bl	__aeabi_i2f
 1480 007c 031C     		adds	r3, r0, #0
 1481 007e 191C     		adds	r1, r3, #0
 1482 0080 201C     		adds	r0, r4, #0
 1483 0082 FFF7FEFF 		bl	__aeabi_fdiv
 1484 0086 031C     		adds	r3, r0, #0
 1485 0088 FB60     		str	r3, [r7, #12]
 874:Generated_Source\PSoC4/ADC_SAR.c **** 
 875:Generated_Source\PSoC4/ADC_SAR.c ****         return( volts );
 1486              		.loc 1 875 0
 1487 008a FB68     		ldr	r3, [r7, #12]
 876:Generated_Source\PSoC4/ADC_SAR.c ****     }
 1488              		.loc 1 876 0
 1489 008c 181C     		adds	r0, r3, #0
 1490 008e BD46     		mov	sp, r7
 1491 0090 05B0     		add	sp, sp, #20
 1492              		@ sp needed
 1493 0092 90BD     		pop	{r4, r7, pc}
 1494              	.L102:
 1495              		.align	2
 1496              	.L101:
 1497 0094 00000000 		.word	ADC_SAR_channelsConfig
 1498 0098 00000000 		.word	ADC_SAR_offset
 1499 009c 00002041 		.word	1092616192
 1500 00a0 00000000 		.word	ADC_SAR_countsPer10Volt
 1501              		.cfi_endproc
 1502              	.LFE18:
 1503              		.size	ADC_SAR_CountsTo_Volts, .-ADC_SAR_CountsTo_Volts
 1504              		.section	.rodata
 1505              		.align	2
 1506              		.type	ADC_SAR_InputsPlacement.4876, %object
 1507              		.size	ADC_SAR_InputsPlacement.4876, 2
 1508              	ADC_SAR_InputsPlacement.4876:
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 43


 1509 0008 12       		.byte	18
 1510 0009 70       		.byte	112
 1511              		.text
 1512              	.Letext0:
 1513              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1514              		.section	.debug_info,"",%progbits
 1515              	.Ldebug_info0:
 1516 0000 CA040000 		.4byte	0x4ca
 1517 0004 0400     		.2byte	0x4
 1518 0006 00000000 		.4byte	.Ldebug_abbrev0
 1519 000a 04       		.byte	0x4
 1520 000b 01       		.uleb128 0x1
 1521 000c 81010000 		.4byte	.LASF62
 1522 0010 0C       		.byte	0xc
 1523 0011 23020000 		.4byte	.LASF63
 1524 0015 DD030000 		.4byte	.LASF64
 1525 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1526 001d 00000000 		.4byte	0
 1527 0021 00000000 		.4byte	.Ldebug_line0
 1528 0025 02       		.uleb128 0x2
 1529 0026 01       		.byte	0x1
 1530 0027 06       		.byte	0x6
 1531 0028 6A000000 		.4byte	.LASF0
 1532 002c 02       		.uleb128 0x2
 1533 002d 01       		.byte	0x1
 1534 002e 08       		.byte	0x8
 1535 002f D5020000 		.4byte	.LASF1
 1536 0033 02       		.uleb128 0x2
 1537 0034 02       		.byte	0x2
 1538 0035 05       		.byte	0x5
 1539 0036 F7020000 		.4byte	.LASF2
 1540 003a 02       		.uleb128 0x2
 1541 003b 02       		.byte	0x2
 1542 003c 07       		.byte	0x7
 1543 003d 56010000 		.4byte	.LASF3
 1544 0041 02       		.uleb128 0x2
 1545 0042 04       		.byte	0x4
 1546 0043 05       		.byte	0x5
 1547 0044 91000000 		.4byte	.LASF4
 1548 0048 02       		.uleb128 0x2
 1549 0049 04       		.byte	0x4
 1550 004a 07       		.byte	0x7
 1551 004b 34010000 		.4byte	.LASF5
 1552 004f 02       		.uleb128 0x2
 1553 0050 08       		.byte	0x8
 1554 0051 05       		.byte	0x5
 1555 0052 5C000000 		.4byte	.LASF6
 1556 0056 02       		.uleb128 0x2
 1557 0057 08       		.byte	0x8
 1558 0058 07       		.byte	0x7
 1559 0059 37000000 		.4byte	.LASF7
 1560 005d 03       		.uleb128 0x3
 1561 005e 04       		.byte	0x4
 1562 005f 05       		.byte	0x5
 1563 0060 696E7400 		.ascii	"int\000"
 1564 0064 02       		.uleb128 0x2
 1565 0065 04       		.byte	0x4
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 44


 1566 0066 07       		.byte	0x7
 1567 0067 0B010000 		.4byte	.LASF8
 1568 006b 04       		.uleb128 0x4
 1569 006c C2000000 		.4byte	.LASF9
 1570 0070 02       		.byte	0x2
 1571 0071 E401     		.2byte	0x1e4
 1572 0073 2C000000 		.4byte	0x2c
 1573 0077 04       		.uleb128 0x4
 1574 0078 00000000 		.4byte	.LASF10
 1575 007c 02       		.byte	0x2
 1576 007d E501     		.2byte	0x1e5
 1577 007f 3A000000 		.4byte	0x3a
 1578 0083 04       		.uleb128 0x4
 1579 0084 E3000000 		.4byte	.LASF11
 1580 0088 02       		.byte	0x2
 1581 0089 E601     		.2byte	0x1e6
 1582 008b 48000000 		.4byte	0x48
 1583 008f 04       		.uleb128 0x4
 1584 0090 95030000 		.4byte	.LASF12
 1585 0094 02       		.byte	0x2
 1586 0095 E801     		.2byte	0x1e8
 1587 0097 33000000 		.4byte	0x33
 1588 009b 04       		.uleb128 0x4
 1589 009c 8B000000 		.4byte	.LASF13
 1590 00a0 02       		.byte	0x2
 1591 00a1 E901     		.2byte	0x1e9
 1592 00a3 41000000 		.4byte	0x41
 1593 00a7 04       		.uleb128 0x4
 1594 00a8 59020000 		.4byte	.LASF14
 1595 00ac 02       		.byte	0x2
 1596 00ad EA01     		.2byte	0x1ea
 1597 00af B3000000 		.4byte	0xb3
 1598 00b3 02       		.uleb128 0x2
 1599 00b4 04       		.byte	0x4
 1600 00b5 04       		.byte	0x4
 1601 00b6 AD020000 		.4byte	.LASF15
 1602 00ba 02       		.uleb128 0x2
 1603 00bb 08       		.byte	0x8
 1604 00bc 04       		.byte	0x4
 1605 00bd C8000000 		.4byte	.LASF16
 1606 00c1 04       		.uleb128 0x4
 1607 00c2 A7020000 		.4byte	.LASF17
 1608 00c6 02       		.byte	0x2
 1609 00c7 EF01     		.2byte	0x1ef
 1610 00c9 4F000000 		.4byte	0x4f
 1611 00cd 02       		.uleb128 0x2
 1612 00ce 01       		.byte	0x1
 1613 00cf 08       		.byte	0x8
 1614 00d0 36030000 		.4byte	.LASF18
 1615 00d4 04       		.uleb128 0x4
 1616 00d5 44020000 		.4byte	.LASF19
 1617 00d9 02       		.byte	0x2
 1618 00da 9002     		.2byte	0x290
 1619 00dc E0000000 		.4byte	0xe0
 1620 00e0 05       		.uleb128 0x5
 1621 00e1 83000000 		.4byte	0x83
 1622 00e5 02       		.uleb128 0x2
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 45


 1623 00e6 08       		.byte	0x8
 1624 00e7 04       		.byte	0x4
 1625 00e8 83020000 		.4byte	.LASF20
 1626 00ec 02       		.uleb128 0x2
 1627 00ed 04       		.byte	0x4
 1628 00ee 07       		.byte	0x7
 1629 00ef 61020000 		.4byte	.LASF21
 1630 00f3 06       		.uleb128 0x6
 1631 00f4 4E000000 		.4byte	.LASF26
 1632 00f8 01       		.byte	0x1
 1633 00f9 3F       		.byte	0x3f
 1634 00fa 00000000 		.4byte	.LFB0
 1635 00fe 24000000 		.4byte	.LFE0-.LFB0
 1636 0102 01       		.uleb128 0x1
 1637 0103 9C       		.byte	0x9c
 1638 0104 07       		.uleb128 0x7
 1639 0105 16020000 		.4byte	.LASF37
 1640 0109 01       		.byte	0x1
 1641 010a 5E       		.byte	0x5e
 1642 010b 00000000 		.4byte	.LFB1
 1643 010f 60020000 		.4byte	.LFE1-.LFB1
 1644 0113 01       		.uleb128 0x1
 1645 0114 9C       		.byte	0x9c
 1646 0115 55010000 		.4byte	0x155
 1647 0119 08       		.uleb128 0x8
 1648 011a 2B030000 		.4byte	.LASF22
 1649 011e 01       		.byte	0x1
 1650 011f 60       		.byte	0x60
 1651 0120 83000000 		.4byte	0x83
 1652 0124 02       		.uleb128 0x2
 1653 0125 91       		.byte	0x91
 1654 0126 74       		.sleb128 -12
 1655 0127 08       		.uleb128 0x8
 1656 0128 4C010000 		.4byte	.LASF23
 1657 012c 01       		.byte	0x1
 1658 012d 61       		.byte	0x61
 1659 012e 83000000 		.4byte	0x83
 1660 0132 02       		.uleb128 0x2
 1661 0133 91       		.byte	0x91
 1662 0134 6C       		.sleb128 -20
 1663 0135 08       		.uleb128 0x8
 1664 0136 0F000000 		.4byte	.LASF24
 1665 013a 01       		.byte	0x1
 1666 013b 62       		.byte	0x62
 1667 013c 9B000000 		.4byte	0x9b
 1668 0140 02       		.uleb128 0x2
 1669 0141 91       		.byte	0x91
 1670 0142 70       		.sleb128 -16
 1671 0143 08       		.uleb128 0x8
 1672 0144 69010000 		.4byte	.LASF25
 1673 0148 01       		.byte	0x1
 1674 0149 65       		.byte	0x65
 1675 014a 6A010000 		.4byte	0x16a
 1676 014e 05       		.uleb128 0x5
 1677 014f 03       		.byte	0x3
 1678 0150 08000000 		.4byte	ADC_SAR_InputsPlacement.4876
 1679 0154 00       		.byte	0
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 46


 1680 0155 09       		.uleb128 0x9
 1681 0156 65010000 		.4byte	0x165
 1682 015a 65010000 		.4byte	0x165
 1683 015e 0A       		.uleb128 0xa
 1684 015f EC000000 		.4byte	0xec
 1685 0163 01       		.byte	0x1
 1686 0164 00       		.byte	0
 1687 0165 0B       		.uleb128 0xb
 1688 0166 6B000000 		.4byte	0x6b
 1689 016a 0B       		.uleb128 0xb
 1690 016b 55010000 		.4byte	0x155
 1691 016f 0C       		.uleb128 0xc
 1692 0170 C7030000 		.4byte	.LASF27
 1693 0174 01       		.byte	0x1
 1694 0175 4A01     		.2byte	0x14a
 1695 0177 00000000 		.4byte	.LFB2
 1696 017b 2C000000 		.4byte	.LFE2-.LFB2
 1697 017f 01       		.uleb128 0x1
 1698 0180 9C       		.byte	0x9c
 1699 0181 0D       		.uleb128 0xd
 1700 0182 16000000 		.4byte	.LASF28
 1701 0186 01       		.byte	0x1
 1702 0187 6D01     		.2byte	0x16d
 1703 0189 00000000 		.4byte	.LFB3
 1704 018d 1C000000 		.4byte	.LFE3-.LFB3
 1705 0191 01       		.uleb128 0x1
 1706 0192 9C       		.byte	0x9c
 1707 0193 0D       		.uleb128 0xd
 1708 0194 B2030000 		.4byte	.LASF29
 1709 0198 01       		.byte	0x1
 1710 0199 8701     		.2byte	0x187
 1711 019b 00000000 		.4byte	.LFB4
 1712 019f 1C000000 		.4byte	.LFE4-.LFB4
 1713 01a3 01       		.uleb128 0x1
 1714 01a4 9C       		.byte	0x9c
 1715 01a5 0D       		.uleb128 0xd
 1716 01a6 23000000 		.4byte	.LASF30
 1717 01aa 01       		.byte	0x1
 1718 01ab A001     		.2byte	0x1a0
 1719 01ad 00000000 		.4byte	.LFB5
 1720 01b1 20000000 		.4byte	.LFE5-.LFB5
 1721 01b5 01       		.uleb128 0x1
 1722 01b6 9C       		.byte	0x9c
 1723 01b7 0E       		.uleb128 0xe
 1724 01b8 64030000 		.4byte	.LASF32
 1725 01bc 01       		.byte	0x1
 1726 01bd C201     		.2byte	0x1c2
 1727 01bf 83000000 		.4byte	0x83
 1728 01c3 00000000 		.4byte	.LFB6
 1729 01c7 7C000000 		.4byte	.LFE6-.LFB6
 1730 01cb 01       		.uleb128 0x1
 1731 01cc 9C       		.byte	0x9c
 1732 01cd F0010000 		.4byte	0x1f0
 1733 01d1 0F       		.uleb128 0xf
 1734 01d2 03010000 		.4byte	.LASF34
 1735 01d6 01       		.byte	0x1
 1736 01d7 C201     		.2byte	0x1c2
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 47


 1737 01d9 83000000 		.4byte	0x83
 1738 01dd 02       		.uleb128 0x2
 1739 01de 91       		.byte	0x91
 1740 01df 6C       		.sleb128 -20
 1741 01e0 10       		.uleb128 0x10
 1742 01e1 7C030000 		.4byte	.LASF31
 1743 01e5 01       		.byte	0x1
 1744 01e6 C401     		.2byte	0x1c4
 1745 01e8 83000000 		.4byte	0x83
 1746 01ec 02       		.uleb128 0x2
 1747 01ed 91       		.byte	0x91
 1748 01ee 74       		.sleb128 -12
 1749 01ef 00       		.byte	0
 1750 01f0 11       		.uleb128 0x11
 1751 01f1 E3020000 		.4byte	.LASF33
 1752 01f5 01       		.byte	0x1
 1753 01f6 F801     		.2byte	0x1f8
 1754 01f8 8F000000 		.4byte	0x8f
 1755 01fc 00000000 		.4byte	.LFB7
 1756 0200 4C000000 		.4byte	.LFE7-.LFB7
 1757 0204 01       		.uleb128 0x1
 1758 0205 9C       		.byte	0x9c
 1759 0206 29020000 		.4byte	0x229
 1760 020a 0F       		.uleb128 0xf
 1761 020b 31030000 		.4byte	.LASF35
 1762 020f 01       		.byte	0x1
 1763 0210 F801     		.2byte	0x1f8
 1764 0212 83000000 		.4byte	0x83
 1765 0216 02       		.uleb128 0x2
 1766 0217 91       		.byte	0x91
 1767 0218 6C       		.sleb128 -20
 1768 0219 10       		.uleb128 0x10
 1769 021a D6030000 		.4byte	.LASF36
 1770 021e 01       		.byte	0x1
 1771 021f FA01     		.2byte	0x1fa
 1772 0221 83000000 		.4byte	0x83
 1773 0225 02       		.uleb128 0x2
 1774 0226 91       		.byte	0x91
 1775 0227 74       		.sleb128 -12
 1776 0228 00       		.byte	0
 1777 0229 12       		.uleb128 0x12
 1778 022a CF000000 		.4byte	.LASF38
 1779 022e 01       		.byte	0x1
 1780 022f 2502     		.2byte	0x225
 1781 0231 00000000 		.4byte	.LFB8
 1782 0235 20000000 		.4byte	.LFE8-.LFB8
 1783 0239 01       		.uleb128 0x1
 1784 023a 9C       		.byte	0x9c
 1785 023b 4F020000 		.4byte	0x24f
 1786 023f 0F       		.uleb128 0xf
 1787 0240 EA000000 		.4byte	.LASF39
 1788 0244 01       		.byte	0x1
 1789 0245 2502     		.2byte	0x225
 1790 0247 83000000 		.4byte	0x83
 1791 024b 02       		.uleb128 0x2
 1792 024c 91       		.byte	0x91
 1793 024d 74       		.sleb128 -12
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 48


 1794 024e 00       		.byte	0
 1795 024f 0D       		.uleb128 0xd
 1796 0250 4C030000 		.4byte	.LASF40
 1797 0254 01       		.byte	0x1
 1798 0255 3B02     		.2byte	0x23b
 1799 0257 00000000 		.4byte	.LFB9
 1800 025b 1C000000 		.4byte	.LFE9-.LFB9
 1801 025f 01       		.uleb128 0x1
 1802 0260 9C       		.byte	0x9c
 1803 0261 12       		.uleb128 0x12
 1804 0262 EF000000 		.4byte	.LASF41
 1805 0266 01       		.byte	0x1
 1806 0267 5102     		.2byte	0x251
 1807 0269 00000000 		.4byte	.LFB10
 1808 026d 30000000 		.4byte	.LFE10-.LFB10
 1809 0271 01       		.uleb128 0x1
 1810 0272 9C       		.byte	0x9c
 1811 0273 87020000 		.4byte	0x287
 1812 0277 0F       		.uleb128 0xf
 1813 0278 7A020000 		.4byte	.LASF42
 1814 027c 01       		.byte	0x1
 1815 027d 5102     		.2byte	0x251
 1816 027f 83000000 		.4byte	0x83
 1817 0283 02       		.uleb128 0x2
 1818 0284 91       		.byte	0x91
 1819 0285 74       		.sleb128 -12
 1820 0286 00       		.byte	0
 1821 0287 12       		.uleb128 0x12
 1822 0288 1F010000 		.4byte	.LASF43
 1823 028c 01       		.byte	0x1
 1824 028d 6602     		.2byte	0x266
 1825 028f 00000000 		.4byte	.LFB11
 1826 0293 30000000 		.4byte	.LFE11-.LFB11
 1827 0297 01       		.uleb128 0x1
 1828 0298 9C       		.byte	0x9c
 1829 0299 AD020000 		.4byte	0x2ad
 1830 029d 0F       		.uleb128 0xf
 1831 029e B3020000 		.4byte	.LASF44
 1832 02a2 01       		.byte	0x1
 1833 02a3 6602     		.2byte	0x266
 1834 02a5 83000000 		.4byte	0x83
 1835 02a9 02       		.uleb128 0x2
 1836 02aa 91       		.byte	0x91
 1837 02ab 74       		.sleb128 -12
 1838 02ac 00       		.byte	0
 1839 02ad 12       		.uleb128 0x12
 1840 02ae 76000000 		.4byte	.LASF45
 1841 02b2 01       		.byte	0x1
 1842 02b3 7E02     		.2byte	0x27e
 1843 02b5 00000000 		.4byte	.LFB12
 1844 02b9 20000000 		.4byte	.LFE12-.LFB12
 1845 02bd 01       		.uleb128 0x1
 1846 02be 9C       		.byte	0x9c
 1847 02bf D3020000 		.4byte	0x2d3
 1848 02c3 0F       		.uleb128 0xf
 1849 02c4 EA000000 		.4byte	.LASF39
 1850 02c8 01       		.byte	0x1
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 49


 1851 02c9 7E02     		.2byte	0x27e
 1852 02cb 83000000 		.4byte	0x83
 1853 02cf 02       		.uleb128 0x2
 1854 02d0 91       		.byte	0x91
 1855 02d1 74       		.sleb128 -12
 1856 02d2 00       		.byte	0
 1857 02d3 12       		.uleb128 0x12
 1858 02d4 18030000 		.4byte	.LASF46
 1859 02d8 01       		.byte	0x1
 1860 02d9 9502     		.2byte	0x295
 1861 02db 00000000 		.4byte	.LFB13
 1862 02df 20000000 		.4byte	.LFE13-.LFB13
 1863 02e3 01       		.uleb128 0x1
 1864 02e4 9C       		.byte	0x9c
 1865 02e5 F9020000 		.4byte	0x2f9
 1866 02e9 0F       		.uleb128 0xf
 1867 02ea EA000000 		.4byte	.LASF39
 1868 02ee 01       		.byte	0x1
 1869 02ef 9502     		.2byte	0x295
 1870 02f1 83000000 		.4byte	0x83
 1871 02f5 02       		.uleb128 0x2
 1872 02f6 91       		.byte	0x91
 1873 02f7 74       		.sleb128 -12
 1874 02f8 00       		.byte	0
 1875 02f9 13       		.uleb128 0x13
 1876 02fa 83030000 		.4byte	.LASF47
 1877 02fe 01       		.byte	0x1
 1878 02ff B102     		.2byte	0x2b1
 1879 0301 00000000 		.4byte	.LFB14
 1880 0305 34000000 		.4byte	.LFE14-.LFB14
 1881 0309 01       		.uleb128 0x1
 1882 030a 9C       		.byte	0x9c
 1883 030b 2E030000 		.4byte	0x32e
 1884 030f 0F       		.uleb128 0xf
 1885 0310 31030000 		.4byte	.LASF35
 1886 0314 01       		.byte	0x1
 1887 0315 B102     		.2byte	0x2b1
 1888 0317 83000000 		.4byte	0x83
 1889 031b 02       		.uleb128 0x2
 1890 031c 91       		.byte	0x91
 1891 031d 74       		.sleb128 -12
 1892 031e 0F       		.uleb128 0xf
 1893 031f 3B030000 		.4byte	.LASF48
 1894 0323 01       		.byte	0x1
 1895 0324 B102     		.2byte	0x2b1
 1896 0326 8F000000 		.4byte	0x8f
 1897 032a 02       		.uleb128 0x2
 1898 032b 91       		.byte	0x91
 1899 032c 72       		.sleb128 -14
 1900 032d 00       		.byte	0
 1901 032e 13       		.uleb128 0x13
 1902 032f 6A020000 		.4byte	.LASF49
 1903 0333 01       		.byte	0x1
 1904 0334 D302     		.2byte	0x2d3
 1905 0336 00000000 		.4byte	.LFB15
 1906 033a 2C000000 		.4byte	.LFE15-.LFB15
 1907 033e 01       		.uleb128 0x1
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 50


 1908 033f 9C       		.byte	0x9c
 1909 0340 63030000 		.4byte	0x363
 1910 0344 0F       		.uleb128 0xf
 1911 0345 31030000 		.4byte	.LASF35
 1912 0349 01       		.byte	0x1
 1913 034a D302     		.2byte	0x2d3
 1914 034c 83000000 		.4byte	0x83
 1915 0350 02       		.uleb128 0x2
 1916 0351 91       		.byte	0x91
 1917 0352 74       		.sleb128 -12
 1918 0353 0F       		.uleb128 0xf
 1919 0354 07000000 		.4byte	.LASF50
 1920 0358 01       		.byte	0x1
 1921 0359 D302     		.2byte	0x2d3
 1922 035b 9B000000 		.4byte	0x9b
 1923 035f 02       		.uleb128 0x2
 1924 0360 91       		.byte	0x91
 1925 0361 70       		.sleb128 -16
 1926 0362 00       		.byte	0
 1927 0363 11       		.uleb128 0x11
 1928 0364 BD020000 		.4byte	.LASF51
 1929 0368 01       		.byte	0x1
 1930 0369 F402     		.2byte	0x2f4
 1931 036b 8F000000 		.4byte	0x8f
 1932 036f 00000000 		.4byte	.LFB16
 1933 0373 C8000000 		.4byte	.LFE16-.LFB16
 1934 0377 01       		.uleb128 0x1
 1935 0378 9C       		.byte	0x9c
 1936 0379 AB030000 		.4byte	0x3ab
 1937 037d 0F       		.uleb128 0xf
 1938 037e 31030000 		.4byte	.LASF35
 1939 0382 01       		.byte	0x1
 1940 0383 F402     		.2byte	0x2f4
 1941 0385 83000000 		.4byte	0x83
 1942 0389 02       		.uleb128 0x2
 1943 038a 91       		.byte	0x91
 1944 038b 6C       		.sleb128 -20
 1945 038c 0F       		.uleb128 0xf
 1946 038d 42030000 		.4byte	.LASF52
 1947 0391 01       		.byte	0x1
 1948 0392 F402     		.2byte	0x2f4
 1949 0394 8F000000 		.4byte	0x8f
 1950 0398 02       		.uleb128 0x2
 1951 0399 91       		.byte	0x91
 1952 039a 6A       		.sleb128 -22
 1953 039b 10       		.uleb128 0x10
 1954 039c 0F020000 		.4byte	.LASF53
 1955 03a0 01       		.byte	0x1
 1956 03a1 F602     		.2byte	0x2f6
 1957 03a3 8F000000 		.4byte	0x8f
 1958 03a7 02       		.uleb128 0x2
 1959 03a8 91       		.byte	0x91
 1960 03a9 76       		.sleb128 -10
 1961 03aa 00       		.byte	0
 1962 03ab 11       		.uleb128 0x11
 1963 03ac 8F020000 		.4byte	.LASF54
 1964 03b0 01       		.byte	0x1
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 51


 1965 03b1 2A03     		.2byte	0x32a
 1966 03b3 9B000000 		.4byte	0x9b
 1967 03b7 00000000 		.4byte	.LFB17
 1968 03bb B8000000 		.4byte	.LFE17-.LFB17
 1969 03bf 01       		.uleb128 0x1
 1970 03c0 9C       		.byte	0x9c
 1971 03c1 F3030000 		.4byte	0x3f3
 1972 03c5 0F       		.uleb128 0xf
 1973 03c6 31030000 		.4byte	.LASF35
 1974 03ca 01       		.byte	0x1
 1975 03cb 2A03     		.2byte	0x32a
 1976 03cd 83000000 		.4byte	0x83
 1977 03d1 02       		.uleb128 0x2
 1978 03d2 91       		.byte	0x91
 1979 03d3 64       		.sleb128 -28
 1980 03d4 0F       		.uleb128 0xf
 1981 03d5 42030000 		.4byte	.LASF52
 1982 03d9 01       		.byte	0x1
 1983 03da 2A03     		.2byte	0x32a
 1984 03dc 8F000000 		.4byte	0x8f
 1985 03e0 02       		.uleb128 0x2
 1986 03e1 91       		.byte	0x91
 1987 03e2 62       		.sleb128 -30
 1988 03e3 10       		.uleb128 0x10
 1989 03e4 18010000 		.4byte	.LASF55
 1990 03e8 01       		.byte	0x1
 1991 03e9 2C03     		.2byte	0x32c
 1992 03eb C1000000 		.4byte	0xc1
 1993 03ef 02       		.uleb128 0x2
 1994 03f0 91       		.byte	0x91
 1995 03f1 68       		.sleb128 -24
 1996 03f2 00       		.byte	0
 1997 03f3 11       		.uleb128 0x11
 1998 03f4 9B030000 		.4byte	.LASF56
 1999 03f8 01       		.byte	0x1
 2000 03f9 5703     		.2byte	0x357
 2001 03fb A7000000 		.4byte	0xa7
 2002 03ff 00000000 		.4byte	.LFB18
 2003 0403 A4000000 		.4byte	.LFE18-.LFB18
 2004 0407 01       		.uleb128 0x1
 2005 0408 9C       		.byte	0x9c
 2006 0409 3B040000 		.4byte	0x43b
 2007 040d 0F       		.uleb128 0xf
 2008 040e 31030000 		.4byte	.LASF35
 2009 0412 01       		.byte	0x1
 2010 0413 5703     		.2byte	0x357
 2011 0415 83000000 		.4byte	0x83
 2012 0419 02       		.uleb128 0x2
 2013 041a 91       		.byte	0x91
 2014 041b 64       		.sleb128 -28
 2015 041c 0F       		.uleb128 0xf
 2016 041d 42030000 		.4byte	.LASF52
 2017 0421 01       		.byte	0x1
 2018 0422 5703     		.2byte	0x357
 2019 0424 8F000000 		.4byte	0x8f
 2020 0428 02       		.uleb128 0x2
 2021 0429 91       		.byte	0x91
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 52


 2022 042a 62       		.sleb128 -30
 2023 042b 10       		.uleb128 0x10
 2024 042c 46010000 		.4byte	.LASF57
 2025 0430 01       		.byte	0x1
 2026 0431 5903     		.2byte	0x359
 2027 0433 A7000000 		.4byte	0xa7
 2028 0437 02       		.uleb128 0x2
 2029 0438 91       		.byte	0x91
 2030 0439 6C       		.sleb128 -20
 2031 043a 00       		.byte	0
 2032 043b 09       		.uleb128 0x9
 2033 043c 4B040000 		.4byte	0x44b
 2034 0440 4B040000 		.4byte	0x44b
 2035 0444 0A       		.uleb128 0xa
 2036 0445 EC000000 		.4byte	0xec
 2037 0449 01       		.byte	0x1
 2038 044a 00       		.byte	0
 2039 044b 0B       		.uleb128 0xb
 2040 044c 83000000 		.4byte	0x83
 2041 0450 08       		.uleb128 0x8
 2042 0451 01030000 		.4byte	.LASF58
 2043 0455 01       		.byte	0x1
 2044 0456 21       		.byte	0x21
 2045 0457 61040000 		.4byte	0x461
 2046 045b 05       		.uleb128 0x5
 2047 045c 03       		.byte	0x3
 2048 045d 00000000 		.4byte	ADC_SAR_channelsConfig
 2049 0461 0B       		.uleb128 0xb
 2050 0462 3B040000 		.4byte	0x43b
 2051 0466 14       		.uleb128 0x14
 2052 0467 B2000000 		.4byte	.LASF59
 2053 046b 01       		.byte	0x1
 2054 046c 18       		.byte	0x18
 2055 046d 6B000000 		.4byte	0x6b
 2056 0471 05       		.uleb128 0x5
 2057 0472 03       		.byte	0x3
 2058 0473 00000000 		.4byte	ADC_SAR_initVar
 2059 0477 09       		.uleb128 0x9
 2060 0478 87040000 		.4byte	0x487
 2061 047c 87040000 		.4byte	0x487
 2062 0480 0A       		.uleb128 0xa
 2063 0481 EC000000 		.4byte	0xec
 2064 0485 01       		.byte	0x1
 2065 0486 00       		.byte	0
 2066 0487 05       		.uleb128 0x5
 2067 0488 8F000000 		.4byte	0x8f
 2068 048c 14       		.uleb128 0x14
 2069 048d 4A020000 		.4byte	.LASF60
 2070 0491 01       		.byte	0x1
 2071 0492 19       		.byte	0x19
 2072 0493 9D040000 		.4byte	0x49d
 2073 0497 05       		.uleb128 0x5
 2074 0498 03       		.byte	0x3
 2075 0499 00000000 		.4byte	ADC_SAR_offset
 2076 049d 05       		.uleb128 0x5
 2077 049e 77040000 		.4byte	0x477
 2078 04a2 09       		.uleb128 0x9
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 53


 2079 04a3 B2040000 		.4byte	0x4b2
 2080 04a7 B2040000 		.4byte	0x4b2
 2081 04ab 0A       		.uleb128 0xa
 2082 04ac EC000000 		.4byte	0xec
 2083 04b0 01       		.byte	0x1
 2084 04b1 00       		.byte	0
 2085 04b2 05       		.uleb128 0x5
 2086 04b3 9B000000 		.4byte	0x9b
 2087 04b7 14       		.uleb128 0x14
 2088 04b8 9A000000 		.4byte	.LASF61
 2089 04bc 01       		.byte	0x1
 2090 04bd 1A       		.byte	0x1a
 2091 04be C8040000 		.4byte	0x4c8
 2092 04c2 05       		.uleb128 0x5
 2093 04c3 03       		.byte	0x3
 2094 04c4 00000000 		.4byte	ADC_SAR_countsPer10Volt
 2095 04c8 05       		.uleb128 0x5
 2096 04c9 A2040000 		.4byte	0x4a2
 2097 04cd 00       		.byte	0
 2098              		.section	.debug_abbrev,"",%progbits
 2099              	.Ldebug_abbrev0:
 2100 0000 01       		.uleb128 0x1
 2101 0001 11       		.uleb128 0x11
 2102 0002 01       		.byte	0x1
 2103 0003 25       		.uleb128 0x25
 2104 0004 0E       		.uleb128 0xe
 2105 0005 13       		.uleb128 0x13
 2106 0006 0B       		.uleb128 0xb
 2107 0007 03       		.uleb128 0x3
 2108 0008 0E       		.uleb128 0xe
 2109 0009 1B       		.uleb128 0x1b
 2110 000a 0E       		.uleb128 0xe
 2111 000b 55       		.uleb128 0x55
 2112 000c 17       		.uleb128 0x17
 2113 000d 11       		.uleb128 0x11
 2114 000e 01       		.uleb128 0x1
 2115 000f 10       		.uleb128 0x10
 2116 0010 17       		.uleb128 0x17
 2117 0011 00       		.byte	0
 2118 0012 00       		.byte	0
 2119 0013 02       		.uleb128 0x2
 2120 0014 24       		.uleb128 0x24
 2121 0015 00       		.byte	0
 2122 0016 0B       		.uleb128 0xb
 2123 0017 0B       		.uleb128 0xb
 2124 0018 3E       		.uleb128 0x3e
 2125 0019 0B       		.uleb128 0xb
 2126 001a 03       		.uleb128 0x3
 2127 001b 0E       		.uleb128 0xe
 2128 001c 00       		.byte	0
 2129 001d 00       		.byte	0
 2130 001e 03       		.uleb128 0x3
 2131 001f 24       		.uleb128 0x24
 2132 0020 00       		.byte	0
 2133 0021 0B       		.uleb128 0xb
 2134 0022 0B       		.uleb128 0xb
 2135 0023 3E       		.uleb128 0x3e
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 54


 2136 0024 0B       		.uleb128 0xb
 2137 0025 03       		.uleb128 0x3
 2138 0026 08       		.uleb128 0x8
 2139 0027 00       		.byte	0
 2140 0028 00       		.byte	0
 2141 0029 04       		.uleb128 0x4
 2142 002a 16       		.uleb128 0x16
 2143 002b 00       		.byte	0
 2144 002c 03       		.uleb128 0x3
 2145 002d 0E       		.uleb128 0xe
 2146 002e 3A       		.uleb128 0x3a
 2147 002f 0B       		.uleb128 0xb
 2148 0030 3B       		.uleb128 0x3b
 2149 0031 05       		.uleb128 0x5
 2150 0032 49       		.uleb128 0x49
 2151 0033 13       		.uleb128 0x13
 2152 0034 00       		.byte	0
 2153 0035 00       		.byte	0
 2154 0036 05       		.uleb128 0x5
 2155 0037 35       		.uleb128 0x35
 2156 0038 00       		.byte	0
 2157 0039 49       		.uleb128 0x49
 2158 003a 13       		.uleb128 0x13
 2159 003b 00       		.byte	0
 2160 003c 00       		.byte	0
 2161 003d 06       		.uleb128 0x6
 2162 003e 2E       		.uleb128 0x2e
 2163 003f 00       		.byte	0
 2164 0040 3F       		.uleb128 0x3f
 2165 0041 19       		.uleb128 0x19
 2166 0042 03       		.uleb128 0x3
 2167 0043 0E       		.uleb128 0xe
 2168 0044 3A       		.uleb128 0x3a
 2169 0045 0B       		.uleb128 0xb
 2170 0046 3B       		.uleb128 0x3b
 2171 0047 0B       		.uleb128 0xb
 2172 0048 27       		.uleb128 0x27
 2173 0049 19       		.uleb128 0x19
 2174 004a 11       		.uleb128 0x11
 2175 004b 01       		.uleb128 0x1
 2176 004c 12       		.uleb128 0x12
 2177 004d 06       		.uleb128 0x6
 2178 004e 40       		.uleb128 0x40
 2179 004f 18       		.uleb128 0x18
 2180 0050 9642     		.uleb128 0x2116
 2181 0052 19       		.uleb128 0x19
 2182 0053 00       		.byte	0
 2183 0054 00       		.byte	0
 2184 0055 07       		.uleb128 0x7
 2185 0056 2E       		.uleb128 0x2e
 2186 0057 01       		.byte	0x1
 2187 0058 3F       		.uleb128 0x3f
 2188 0059 19       		.uleb128 0x19
 2189 005a 03       		.uleb128 0x3
 2190 005b 0E       		.uleb128 0xe
 2191 005c 3A       		.uleb128 0x3a
 2192 005d 0B       		.uleb128 0xb
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 55


 2193 005e 3B       		.uleb128 0x3b
 2194 005f 0B       		.uleb128 0xb
 2195 0060 27       		.uleb128 0x27
 2196 0061 19       		.uleb128 0x19
 2197 0062 11       		.uleb128 0x11
 2198 0063 01       		.uleb128 0x1
 2199 0064 12       		.uleb128 0x12
 2200 0065 06       		.uleb128 0x6
 2201 0066 40       		.uleb128 0x40
 2202 0067 18       		.uleb128 0x18
 2203 0068 9642     		.uleb128 0x2116
 2204 006a 19       		.uleb128 0x19
 2205 006b 01       		.uleb128 0x1
 2206 006c 13       		.uleb128 0x13
 2207 006d 00       		.byte	0
 2208 006e 00       		.byte	0
 2209 006f 08       		.uleb128 0x8
 2210 0070 34       		.uleb128 0x34
 2211 0071 00       		.byte	0
 2212 0072 03       		.uleb128 0x3
 2213 0073 0E       		.uleb128 0xe
 2214 0074 3A       		.uleb128 0x3a
 2215 0075 0B       		.uleb128 0xb
 2216 0076 3B       		.uleb128 0x3b
 2217 0077 0B       		.uleb128 0xb
 2218 0078 49       		.uleb128 0x49
 2219 0079 13       		.uleb128 0x13
 2220 007a 02       		.uleb128 0x2
 2221 007b 18       		.uleb128 0x18
 2222 007c 00       		.byte	0
 2223 007d 00       		.byte	0
 2224 007e 09       		.uleb128 0x9
 2225 007f 01       		.uleb128 0x1
 2226 0080 01       		.byte	0x1
 2227 0081 49       		.uleb128 0x49
 2228 0082 13       		.uleb128 0x13
 2229 0083 01       		.uleb128 0x1
 2230 0084 13       		.uleb128 0x13
 2231 0085 00       		.byte	0
 2232 0086 00       		.byte	0
 2233 0087 0A       		.uleb128 0xa
 2234 0088 21       		.uleb128 0x21
 2235 0089 00       		.byte	0
 2236 008a 49       		.uleb128 0x49
 2237 008b 13       		.uleb128 0x13
 2238 008c 2F       		.uleb128 0x2f
 2239 008d 0B       		.uleb128 0xb
 2240 008e 00       		.byte	0
 2241 008f 00       		.byte	0
 2242 0090 0B       		.uleb128 0xb
 2243 0091 26       		.uleb128 0x26
 2244 0092 00       		.byte	0
 2245 0093 49       		.uleb128 0x49
 2246 0094 13       		.uleb128 0x13
 2247 0095 00       		.byte	0
 2248 0096 00       		.byte	0
 2249 0097 0C       		.uleb128 0xc
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 56


 2250 0098 2E       		.uleb128 0x2e
 2251 0099 00       		.byte	0
 2252 009a 3F       		.uleb128 0x3f
 2253 009b 19       		.uleb128 0x19
 2254 009c 03       		.uleb128 0x3
 2255 009d 0E       		.uleb128 0xe
 2256 009e 3A       		.uleb128 0x3a
 2257 009f 0B       		.uleb128 0xb
 2258 00a0 3B       		.uleb128 0x3b
 2259 00a1 05       		.uleb128 0x5
 2260 00a2 27       		.uleb128 0x27
 2261 00a3 19       		.uleb128 0x19
 2262 00a4 11       		.uleb128 0x11
 2263 00a5 01       		.uleb128 0x1
 2264 00a6 12       		.uleb128 0x12
 2265 00a7 06       		.uleb128 0x6
 2266 00a8 40       		.uleb128 0x40
 2267 00a9 18       		.uleb128 0x18
 2268 00aa 9642     		.uleb128 0x2116
 2269 00ac 19       		.uleb128 0x19
 2270 00ad 00       		.byte	0
 2271 00ae 00       		.byte	0
 2272 00af 0D       		.uleb128 0xd
 2273 00b0 2E       		.uleb128 0x2e
 2274 00b1 00       		.byte	0
 2275 00b2 3F       		.uleb128 0x3f
 2276 00b3 19       		.uleb128 0x19
 2277 00b4 03       		.uleb128 0x3
 2278 00b5 0E       		.uleb128 0xe
 2279 00b6 3A       		.uleb128 0x3a
 2280 00b7 0B       		.uleb128 0xb
 2281 00b8 3B       		.uleb128 0x3b
 2282 00b9 05       		.uleb128 0x5
 2283 00ba 27       		.uleb128 0x27
 2284 00bb 19       		.uleb128 0x19
 2285 00bc 11       		.uleb128 0x11
 2286 00bd 01       		.uleb128 0x1
 2287 00be 12       		.uleb128 0x12
 2288 00bf 06       		.uleb128 0x6
 2289 00c0 40       		.uleb128 0x40
 2290 00c1 18       		.uleb128 0x18
 2291 00c2 9742     		.uleb128 0x2117
 2292 00c4 19       		.uleb128 0x19
 2293 00c5 00       		.byte	0
 2294 00c6 00       		.byte	0
 2295 00c7 0E       		.uleb128 0xe
 2296 00c8 2E       		.uleb128 0x2e
 2297 00c9 01       		.byte	0x1
 2298 00ca 3F       		.uleb128 0x3f
 2299 00cb 19       		.uleb128 0x19
 2300 00cc 03       		.uleb128 0x3
 2301 00cd 0E       		.uleb128 0xe
 2302 00ce 3A       		.uleb128 0x3a
 2303 00cf 0B       		.uleb128 0xb
 2304 00d0 3B       		.uleb128 0x3b
 2305 00d1 05       		.uleb128 0x5
 2306 00d2 27       		.uleb128 0x27
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 57


 2307 00d3 19       		.uleb128 0x19
 2308 00d4 49       		.uleb128 0x49
 2309 00d5 13       		.uleb128 0x13
 2310 00d6 11       		.uleb128 0x11
 2311 00d7 01       		.uleb128 0x1
 2312 00d8 12       		.uleb128 0x12
 2313 00d9 06       		.uleb128 0x6
 2314 00da 40       		.uleb128 0x40
 2315 00db 18       		.uleb128 0x18
 2316 00dc 9742     		.uleb128 0x2117
 2317 00de 19       		.uleb128 0x19
 2318 00df 01       		.uleb128 0x1
 2319 00e0 13       		.uleb128 0x13
 2320 00e1 00       		.byte	0
 2321 00e2 00       		.byte	0
 2322 00e3 0F       		.uleb128 0xf
 2323 00e4 05       		.uleb128 0x5
 2324 00e5 00       		.byte	0
 2325 00e6 03       		.uleb128 0x3
 2326 00e7 0E       		.uleb128 0xe
 2327 00e8 3A       		.uleb128 0x3a
 2328 00e9 0B       		.uleb128 0xb
 2329 00ea 3B       		.uleb128 0x3b
 2330 00eb 05       		.uleb128 0x5
 2331 00ec 49       		.uleb128 0x49
 2332 00ed 13       		.uleb128 0x13
 2333 00ee 02       		.uleb128 0x2
 2334 00ef 18       		.uleb128 0x18
 2335 00f0 00       		.byte	0
 2336 00f1 00       		.byte	0
 2337 00f2 10       		.uleb128 0x10
 2338 00f3 34       		.uleb128 0x34
 2339 00f4 00       		.byte	0
 2340 00f5 03       		.uleb128 0x3
 2341 00f6 0E       		.uleb128 0xe
 2342 00f7 3A       		.uleb128 0x3a
 2343 00f8 0B       		.uleb128 0xb
 2344 00f9 3B       		.uleb128 0x3b
 2345 00fa 05       		.uleb128 0x5
 2346 00fb 49       		.uleb128 0x49
 2347 00fc 13       		.uleb128 0x13
 2348 00fd 02       		.uleb128 0x2
 2349 00fe 18       		.uleb128 0x18
 2350 00ff 00       		.byte	0
 2351 0100 00       		.byte	0
 2352 0101 11       		.uleb128 0x11
 2353 0102 2E       		.uleb128 0x2e
 2354 0103 01       		.byte	0x1
 2355 0104 3F       		.uleb128 0x3f
 2356 0105 19       		.uleb128 0x19
 2357 0106 03       		.uleb128 0x3
 2358 0107 0E       		.uleb128 0xe
 2359 0108 3A       		.uleb128 0x3a
 2360 0109 0B       		.uleb128 0xb
 2361 010a 3B       		.uleb128 0x3b
 2362 010b 05       		.uleb128 0x5
 2363 010c 27       		.uleb128 0x27
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 58


 2364 010d 19       		.uleb128 0x19
 2365 010e 49       		.uleb128 0x49
 2366 010f 13       		.uleb128 0x13
 2367 0110 11       		.uleb128 0x11
 2368 0111 01       		.uleb128 0x1
 2369 0112 12       		.uleb128 0x12
 2370 0113 06       		.uleb128 0x6
 2371 0114 40       		.uleb128 0x40
 2372 0115 18       		.uleb128 0x18
 2373 0116 9642     		.uleb128 0x2116
 2374 0118 19       		.uleb128 0x19
 2375 0119 01       		.uleb128 0x1
 2376 011a 13       		.uleb128 0x13
 2377 011b 00       		.byte	0
 2378 011c 00       		.byte	0
 2379 011d 12       		.uleb128 0x12
 2380 011e 2E       		.uleb128 0x2e
 2381 011f 01       		.byte	0x1
 2382 0120 3F       		.uleb128 0x3f
 2383 0121 19       		.uleb128 0x19
 2384 0122 03       		.uleb128 0x3
 2385 0123 0E       		.uleb128 0xe
 2386 0124 3A       		.uleb128 0x3a
 2387 0125 0B       		.uleb128 0xb
 2388 0126 3B       		.uleb128 0x3b
 2389 0127 05       		.uleb128 0x5
 2390 0128 27       		.uleb128 0x27
 2391 0129 19       		.uleb128 0x19
 2392 012a 11       		.uleb128 0x11
 2393 012b 01       		.uleb128 0x1
 2394 012c 12       		.uleb128 0x12
 2395 012d 06       		.uleb128 0x6
 2396 012e 40       		.uleb128 0x40
 2397 012f 18       		.uleb128 0x18
 2398 0130 9742     		.uleb128 0x2117
 2399 0132 19       		.uleb128 0x19
 2400 0133 01       		.uleb128 0x1
 2401 0134 13       		.uleb128 0x13
 2402 0135 00       		.byte	0
 2403 0136 00       		.byte	0
 2404 0137 13       		.uleb128 0x13
 2405 0138 2E       		.uleb128 0x2e
 2406 0139 01       		.byte	0x1
 2407 013a 3F       		.uleb128 0x3f
 2408 013b 19       		.uleb128 0x19
 2409 013c 03       		.uleb128 0x3
 2410 013d 0E       		.uleb128 0xe
 2411 013e 3A       		.uleb128 0x3a
 2412 013f 0B       		.uleb128 0xb
 2413 0140 3B       		.uleb128 0x3b
 2414 0141 05       		.uleb128 0x5
 2415 0142 27       		.uleb128 0x27
 2416 0143 19       		.uleb128 0x19
 2417 0144 11       		.uleb128 0x11
 2418 0145 01       		.uleb128 0x1
 2419 0146 12       		.uleb128 0x12
 2420 0147 06       		.uleb128 0x6
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 59


 2421 0148 40       		.uleb128 0x40
 2422 0149 18       		.uleb128 0x18
 2423 014a 9642     		.uleb128 0x2116
 2424 014c 19       		.uleb128 0x19
 2425 014d 01       		.uleb128 0x1
 2426 014e 13       		.uleb128 0x13
 2427 014f 00       		.byte	0
 2428 0150 00       		.byte	0
 2429 0151 14       		.uleb128 0x14
 2430 0152 34       		.uleb128 0x34
 2431 0153 00       		.byte	0
 2432 0154 03       		.uleb128 0x3
 2433 0155 0E       		.uleb128 0xe
 2434 0156 3A       		.uleb128 0x3a
 2435 0157 0B       		.uleb128 0xb
 2436 0158 3B       		.uleb128 0x3b
 2437 0159 0B       		.uleb128 0xb
 2438 015a 49       		.uleb128 0x49
 2439 015b 13       		.uleb128 0x13
 2440 015c 3F       		.uleb128 0x3f
 2441 015d 19       		.uleb128 0x19
 2442 015e 02       		.uleb128 0x2
 2443 015f 18       		.uleb128 0x18
 2444 0160 00       		.byte	0
 2445 0161 00       		.byte	0
 2446 0162 00       		.byte	0
 2447              		.section	.debug_aranges,"",%progbits
 2448 0000 AC000000 		.4byte	0xac
 2449 0004 0200     		.2byte	0x2
 2450 0006 00000000 		.4byte	.Ldebug_info0
 2451 000a 04       		.byte	0x4
 2452 000b 00       		.byte	0
 2453 000c 0000     		.2byte	0
 2454 000e 0000     		.2byte	0
 2455 0010 00000000 		.4byte	.LFB0
 2456 0014 24000000 		.4byte	.LFE0-.LFB0
 2457 0018 00000000 		.4byte	.LFB1
 2458 001c 60020000 		.4byte	.LFE1-.LFB1
 2459 0020 00000000 		.4byte	.LFB2
 2460 0024 2C000000 		.4byte	.LFE2-.LFB2
 2461 0028 00000000 		.4byte	.LFB3
 2462 002c 1C000000 		.4byte	.LFE3-.LFB3
 2463 0030 00000000 		.4byte	.LFB4
 2464 0034 1C000000 		.4byte	.LFE4-.LFB4
 2465 0038 00000000 		.4byte	.LFB5
 2466 003c 20000000 		.4byte	.LFE5-.LFB5
 2467 0040 00000000 		.4byte	.LFB6
 2468 0044 7C000000 		.4byte	.LFE6-.LFB6
 2469 0048 00000000 		.4byte	.LFB7
 2470 004c 4C000000 		.4byte	.LFE7-.LFB7
 2471 0050 00000000 		.4byte	.LFB8
 2472 0054 20000000 		.4byte	.LFE8-.LFB8
 2473 0058 00000000 		.4byte	.LFB9
 2474 005c 1C000000 		.4byte	.LFE9-.LFB9
 2475 0060 00000000 		.4byte	.LFB10
 2476 0064 30000000 		.4byte	.LFE10-.LFB10
 2477 0068 00000000 		.4byte	.LFB11
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 60


 2478 006c 30000000 		.4byte	.LFE11-.LFB11
 2479 0070 00000000 		.4byte	.LFB12
 2480 0074 20000000 		.4byte	.LFE12-.LFB12
 2481 0078 00000000 		.4byte	.LFB13
 2482 007c 20000000 		.4byte	.LFE13-.LFB13
 2483 0080 00000000 		.4byte	.LFB14
 2484 0084 34000000 		.4byte	.LFE14-.LFB14
 2485 0088 00000000 		.4byte	.LFB15
 2486 008c 2C000000 		.4byte	.LFE15-.LFB15
 2487 0090 00000000 		.4byte	.LFB16
 2488 0094 C8000000 		.4byte	.LFE16-.LFB16
 2489 0098 00000000 		.4byte	.LFB17
 2490 009c B8000000 		.4byte	.LFE17-.LFB17
 2491 00a0 00000000 		.4byte	.LFB18
 2492 00a4 A4000000 		.4byte	.LFE18-.LFB18
 2493 00a8 00000000 		.4byte	0
 2494 00ac 00000000 		.4byte	0
 2495              		.section	.debug_ranges,"",%progbits
 2496              	.Ldebug_ranges0:
 2497 0000 00000000 		.4byte	.LFB0
 2498 0004 24000000 		.4byte	.LFE0
 2499 0008 00000000 		.4byte	.LFB1
 2500 000c 60020000 		.4byte	.LFE1
 2501 0010 00000000 		.4byte	.LFB2
 2502 0014 2C000000 		.4byte	.LFE2
 2503 0018 00000000 		.4byte	.LFB3
 2504 001c 1C000000 		.4byte	.LFE3
 2505 0020 00000000 		.4byte	.LFB4
 2506 0024 1C000000 		.4byte	.LFE4
 2507 0028 00000000 		.4byte	.LFB5
 2508 002c 20000000 		.4byte	.LFE5
 2509 0030 00000000 		.4byte	.LFB6
 2510 0034 7C000000 		.4byte	.LFE6
 2511 0038 00000000 		.4byte	.LFB7
 2512 003c 4C000000 		.4byte	.LFE7
 2513 0040 00000000 		.4byte	.LFB8
 2514 0044 20000000 		.4byte	.LFE8
 2515 0048 00000000 		.4byte	.LFB9
 2516 004c 1C000000 		.4byte	.LFE9
 2517 0050 00000000 		.4byte	.LFB10
 2518 0054 30000000 		.4byte	.LFE10
 2519 0058 00000000 		.4byte	.LFB11
 2520 005c 30000000 		.4byte	.LFE11
 2521 0060 00000000 		.4byte	.LFB12
 2522 0064 20000000 		.4byte	.LFE12
 2523 0068 00000000 		.4byte	.LFB13
 2524 006c 20000000 		.4byte	.LFE13
 2525 0070 00000000 		.4byte	.LFB14
 2526 0074 34000000 		.4byte	.LFE14
 2527 0078 00000000 		.4byte	.LFB15
 2528 007c 2C000000 		.4byte	.LFE15
 2529 0080 00000000 		.4byte	.LFB16
 2530 0084 C8000000 		.4byte	.LFE16
 2531 0088 00000000 		.4byte	.LFB17
 2532 008c B8000000 		.4byte	.LFE17
 2533 0090 00000000 		.4byte	.LFB18
 2534 0094 A4000000 		.4byte	.LFE18
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 61


 2535 0098 00000000 		.4byte	0
 2536 009c 00000000 		.4byte	0
 2537              		.section	.debug_line,"",%progbits
 2538              	.Ldebug_line0:
 2539 0000 C2020000 		.section	.debug_str,"MS",%progbits,1
 2539      02004400 
 2539      00000201 
 2539      FB0E0D00 
 2539      01010101 
 2540              	.LASF10:
 2541 0000 75696E74 		.ascii	"uint16\000"
 2541      313600
 2542              	.LASF50:
 2543 0007 61646347 		.ascii	"adcGain\000"
 2543      61696E00 
 2544              	.LASF24:
 2545 000f 636F756E 		.ascii	"counts\000"
 2545      747300
 2546              	.LASF28:
 2547 0016 4144435F 		.ascii	"ADC_SAR_Stop\000"
 2547      5341525F 
 2547      53746F70 
 2547      00
 2548              	.LASF30:
 2549 0023 4144435F 		.ascii	"ADC_SAR_StopConvert\000"
 2549      5341525F 
 2549      53746F70 
 2549      436F6E76 
 2549      65727400 
 2550              	.LASF7:
 2551 0037 6C6F6E67 		.ascii	"long long unsigned int\000"
 2551      206C6F6E 
 2551      6720756E 
 2551      7369676E 
 2551      65642069 
 2552              	.LASF26:
 2553 004e 4144435F 		.ascii	"ADC_SAR_Start\000"
 2553      5341525F 
 2553      53746172 
 2553      7400
 2554              	.LASF6:
 2555 005c 6C6F6E67 		.ascii	"long long int\000"
 2555      206C6F6E 
 2555      6720696E 
 2555      7400
 2556              	.LASF0:
 2557 006a 7369676E 		.ascii	"signed char\000"
 2557      65642063 
 2557      68617200 
 2558              	.LASF45:
 2559 0076 4144435F 		.ascii	"ADC_SAR_SetLimitMask\000"
 2559      5341525F 
 2559      5365744C 
 2559      696D6974 
 2559      4D61736B 
 2560              	.LASF13:
 2561 008b 696E7433 		.ascii	"int32\000"
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 62


 2561      3200
 2562              	.LASF4:
 2563 0091 6C6F6E67 		.ascii	"long int\000"
 2563      20696E74 
 2563      00
 2564              	.LASF61:
 2565 009a 4144435F 		.ascii	"ADC_SAR_countsPer10Volt\000"
 2565      5341525F 
 2565      636F756E 
 2565      74735065 
 2565      72313056 
 2566              	.LASF59:
 2567 00b2 4144435F 		.ascii	"ADC_SAR_initVar\000"
 2567      5341525F 
 2567      696E6974 
 2567      56617200 
 2568              	.LASF9:
 2569 00c2 75696E74 		.ascii	"uint8\000"
 2569      3800
 2570              	.LASF16:
 2571 00c8 646F7562 		.ascii	"double\000"
 2571      6C6500
 2572              	.LASF38:
 2573 00cf 4144435F 		.ascii	"ADC_SAR_SetChanMask\000"
 2573      5341525F 
 2573      53657443 
 2573      68616E4D 
 2573      61736B00 
 2574              	.LASF11:
 2575 00e3 75696E74 		.ascii	"uint32\000"
 2575      333200
 2576              	.LASF39:
 2577 00ea 6D61736B 		.ascii	"mask\000"
 2577      00
 2578              	.LASF41:
 2579 00ef 4144435F 		.ascii	"ADC_SAR_SetLowLimit\000"
 2579      5341525F 
 2579      5365744C 
 2579      6F774C69 
 2579      6D697400 
 2580              	.LASF34:
 2581 0103 7265744D 		.ascii	"retMode\000"
 2581      6F646500 
 2582              	.LASF8:
 2583 010b 756E7369 		.ascii	"unsigned int\000"
 2583      676E6564 
 2583      20696E74 
 2583      00
 2584              	.LASF55:
 2585 0118 75566F6C 		.ascii	"uVolts\000"
 2585      747300
 2586              	.LASF43:
 2587 011f 4144435F 		.ascii	"ADC_SAR_SetHighLimit\000"
 2587      5341525F 
 2587      53657448 
 2587      6967684C 
 2587      696D6974 
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 63


 2588              	.LASF5:
 2589 0134 6C6F6E67 		.ascii	"long unsigned int\000"
 2589      20756E73 
 2589      69676E65 
 2589      6420696E 
 2589      7400
 2590              	.LASF57:
 2591 0146 766F6C74 		.ascii	"volts\000"
 2591      7300
 2592              	.LASF23:
 2593 014c 746D7052 		.ascii	"tmpRegVal\000"
 2593      65675661 
 2593      6C00
 2594              	.LASF3:
 2595 0156 73686F72 		.ascii	"short unsigned int\000"
 2595      7420756E 
 2595      7369676E 
 2595      65642069 
 2595      6E7400
 2596              	.LASF25:
 2597 0169 4144435F 		.ascii	"ADC_SAR_InputsPlacement\000"
 2597      5341525F 
 2597      496E7075 
 2597      7473506C 
 2597      6163656D 
 2598              	.LASF62:
 2599 0181 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2599      43313120 
 2599      352E342E 
 2599      31203230 
 2599      31363036 
 2600 01b4 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2600      20726576 
 2600      6973696F 
 2600      6E203233 
 2600      37373135 
 2601 01e7 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2601      66756E63 
 2601      74696F6E 
 2601      2D736563 
 2601      74696F6E 
 2602              	.LASF53:
 2603 020f 6D566F6C 		.ascii	"mVolts\000"
 2603      747300
 2604              	.LASF37:
 2605 0216 4144435F 		.ascii	"ADC_SAR_Init\000"
 2605      5341525F 
 2605      496E6974 
 2605      00
 2606              	.LASF63:
 2607 0223 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC_SAR.c\000"
 2607      72617465 
 2607      645F536F 
 2607      75726365 
 2607      5C50536F 
 2608              	.LASF19:
 2609 0244 72656733 		.ascii	"reg32\000"
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 64


 2609      3200
 2610              	.LASF60:
 2611 024a 4144435F 		.ascii	"ADC_SAR_offset\000"
 2611      5341525F 
 2611      6F666673 
 2611      657400
 2612              	.LASF14:
 2613 0259 666C6F61 		.ascii	"float32\000"
 2613      74333200 
 2614              	.LASF21:
 2615 0261 73697A65 		.ascii	"sizetype\000"
 2615      74797065 
 2615      00
 2616              	.LASF49:
 2617 026a 4144435F 		.ascii	"ADC_SAR_SetGain\000"
 2617      5341525F 
 2617      53657447 
 2617      61696E00 
 2618              	.LASF42:
 2619 027a 6C6F774C 		.ascii	"lowLimit\000"
 2619      696D6974 
 2619      00
 2620              	.LASF20:
 2621 0283 6C6F6E67 		.ascii	"long double\000"
 2621      20646F75 
 2621      626C6500 
 2622              	.LASF54:
 2623 028f 4144435F 		.ascii	"ADC_SAR_CountsTo_uVolts\000"
 2623      5341525F 
 2623      436F756E 
 2623      7473546F 
 2623      5F75566F 
 2624              	.LASF17:
 2625 02a7 696E7436 		.ascii	"int64\000"
 2625      3400
 2626              	.LASF15:
 2627 02ad 666C6F61 		.ascii	"float\000"
 2627      7400
 2628              	.LASF44:
 2629 02b3 68696768 		.ascii	"highLimit\000"
 2629      4C696D69 
 2629      7400
 2630              	.LASF51:
 2631 02bd 4144435F 		.ascii	"ADC_SAR_CountsTo_mVolts\000"
 2631      5341525F 
 2631      436F756E 
 2631      7473546F 
 2631      5F6D566F 
 2632              	.LASF1:
 2633 02d5 756E7369 		.ascii	"unsigned char\000"
 2633      676E6564 
 2633      20636861 
 2633      7200
 2634              	.LASF33:
 2635 02e3 4144435F 		.ascii	"ADC_SAR_GetResult16\000"
 2635      5341525F 
 2635      47657452 
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 65


 2635      6573756C 
 2635      74313600 
 2636              	.LASF2:
 2637 02f7 73686F72 		.ascii	"short int\000"
 2637      7420696E 
 2637      7400
 2638              	.LASF58:
 2639 0301 4144435F 		.ascii	"ADC_SAR_channelsConfig\000"
 2639      5341525F 
 2639      6368616E 
 2639      6E656C73 
 2639      436F6E66 
 2640              	.LASF46:
 2641 0318 4144435F 		.ascii	"ADC_SAR_SetSatMask\000"
 2641      5341525F 
 2641      53657453 
 2641      61744D61 
 2641      736B00
 2642              	.LASF22:
 2643 032b 63684E75 		.ascii	"chNum\000"
 2643      6D00
 2644              	.LASF35:
 2645 0331 6368616E 		.ascii	"chan\000"
 2645      00
 2646              	.LASF18:
 2647 0336 63686172 		.ascii	"char\000"
 2647      00
 2648              	.LASF48:
 2649 033b 6F666673 		.ascii	"offset\000"
 2649      657400
 2650              	.LASF52:
 2651 0342 61646343 		.ascii	"adcCounts\000"
 2651      6F756E74 
 2651      7300
 2652              	.LASF40:
 2653 034c 4144435F 		.ascii	"ADC_SAR_EnableInjection\000"
 2653      5341525F 
 2653      456E6162 
 2653      6C65496E 
 2653      6A656374 
 2654              	.LASF32:
 2655 0364 4144435F 		.ascii	"ADC_SAR_IsEndConversion\000"
 2655      5341525F 
 2655      4973456E 
 2655      64436F6E 
 2655      76657273 
 2656              	.LASF31:
 2657 037c 73746174 		.ascii	"status\000"
 2657      757300
 2658              	.LASF47:
 2659 0383 4144435F 		.ascii	"ADC_SAR_SetOffset\000"
 2659      5341525F 
 2659      5365744F 
 2659      66667365 
 2659      7400
 2660              	.LASF12:
 2661 0395 696E7431 		.ascii	"int16\000"
ARM GAS  C:\Users\Lars\AppData\Local\Temp\cc13r0j0.s 			page 66


 2661      3600
 2662              	.LASF56:
 2663 039b 4144435F 		.ascii	"ADC_SAR_CountsTo_Volts\000"
 2663      5341525F 
 2663      436F756E 
 2663      7473546F 
 2663      5F566F6C 
 2664              	.LASF29:
 2665 03b2 4144435F 		.ascii	"ADC_SAR_StartConvert\000"
 2665      5341525F 
 2665      53746172 
 2665      74436F6E 
 2665      76657274 
 2666              	.LASF27:
 2667 03c7 4144435F 		.ascii	"ADC_SAR_Enable\000"
 2667      5341525F 
 2667      456E6162 
 2667      6C6500
 2668              	.LASF36:
 2669 03d6 72657375 		.ascii	"result\000"
 2669      6C7400
 2670              	.LASF64:
 2671 03dd 433A5C55 		.ascii	"C:\\Users\\Lars\\Documents\\PSoC Creator\\Workspace"
 2671      73657273 
 2671      5C4C6172 
 2671      735C446F 
 2671      63756D65 
 2672 040b 30315C50 		.ascii	"01\\PSOC4_ForwardVoltageTSEP.cydsn\000"
 2672      534F4334 
 2672      5F466F72 
 2672      77617264 
 2672      566F6C74 
 2673              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
